// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"YOwE":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"pyFg":[function(require,module,exports) {
/** @license React v17.0.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var l = require("object-assign"),
    n = 60103,
    p = 60106;

exports.Fragment = 60107;
exports.StrictMode = 60108;
exports.Profiler = 60114;
var q = 60109,
    r = 60110,
    t = 60112;
exports.Suspense = 60113;
var u = 60115,
    v = 60116;

if ("function" === typeof Symbol && Symbol.for) {
  var w = Symbol.for;
  n = w("react.element");
  p = w("react.portal");
  exports.Fragment = w("react.fragment");
  exports.StrictMode = w("react.strict_mode");
  exports.Profiler = w("react.profiler");
  q = w("react.provider");
  r = w("react.context");
  t = w("react.forward_ref");
  exports.Suspense = w("react.suspense");
  u = w("react.memo");
  v = w("react.lazy");
}

var x = "function" === typeof Symbol && Symbol.iterator;

function y(a) {
  if (null === a || "object" !== typeof a) return null;
  a = x && a[x] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

function z(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var A = {
  isMounted: function () {
    return !1;
  },
  enqueueForceUpdate: function () {},
  enqueueReplaceState: function () {},
  enqueueSetState: function () {}
},
    B = {};

function C(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

C.prototype.isReactComponent = {};

C.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(z(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

C.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function D() {}

D.prototype = C.prototype;

function E(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

var F = E.prototype = new D();
F.constructor = E;
l(F, C.prototype);
F.isPureReactComponent = !0;
var G = {
  current: null
},
    H = Object.prototype.hasOwnProperty,
    I = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function J(a, b, c) {
  var e,
      d = {},
      k = null,
      h = null;
  if (null != b) for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) H.call(b, e) && !I.hasOwnProperty(e) && (d[e] = b[e]);
  var g = arguments.length - 2;
  if (1 === g) d.children = c;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];

    d.children = f;
  }
  if (a && a.defaultProps) for (e in g = a.defaultProps, g) void 0 === d[e] && (d[e] = g[e]);
  return {
    $$typeof: n,
    type: a,
    key: k,
    ref: h,
    props: d,
    _owner: G.current
  };
}

function K(a, b) {
  return {
    $$typeof: n,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function L(a) {
  return "object" === typeof a && null !== a && a.$$typeof === n;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var M = /\/+/g;

function N(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}

function O(a, b, c, e, d) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case n:
        case p:
          h = !0;
      }

  }
  if (h) return h = a, d = d(h), a = "" === e ? "." + N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M, "$&/") + "/"), O(d, b, c, "", function (a) {
    return a;
  })) : null != d && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = "" === e ? "." : e + ":";
  if (Array.isArray(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = e + N(k, g);
    h += O(k, b, c, f, d);
  } else if (f = y(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) k = k.value, f = e + N(k, g++), h += O(k, b, c, f, d);else if ("object" === k) throw b = "" + a, Error(z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}

function P(a, b, c) {
  if (null == a) return a;
  var e = [],
      d = 0;
  O(a, e, "", "", function (a) {
    return b.call(c, a, d++);
  });
  return e;
}

function Q(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function (b) {
      0 === a._status && (b = b.default, a._status = 1, a._result = b);
    }, function (b) {
      0 === a._status && (a._status = 2, a._result = b);
    });
  }

  if (1 === a._status) return a._result;
  throw a._result;
}

var R = {
  current: null
};

function S() {
  var a = R.current;
  if (null === a) throw Error(z(321));
  return a;
}

var T = {
  ReactCurrentDispatcher: R,
  ReactCurrentBatchConfig: {
    transition: 0
  },
  ReactCurrentOwner: G,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: P,
  forEach: function (a, b, c) {
    P(a, function () {
      b.apply(this, arguments);
    }, c);
  },
  count: function (a) {
    var b = 0;
    P(a, function () {
      b++;
    });
    return b;
  },
  toArray: function (a) {
    return P(a, function (a) {
      return a;
    }) || [];
  },
  only: function (a) {
    if (!L(a)) throw Error(z(143));
    return a;
  }
};
exports.Component = C;
exports.PureComponent = E;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(z(267, a));
  var e = l({}, a.props),
      d = a.key,
      k = a.ref,
      h = a._owner;

  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = G.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;

    for (f in b) H.call(b, f) && !I.hasOwnProperty(f) && (e[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
  }

  var f = arguments.length - 2;
  if (1 === f) e.children = c;else if (1 < f) {
    g = Array(f);

    for (var m = 0; m < f; m++) g[m] = arguments[m + 2];

    e.children = g;
  }
  return {
    $$typeof: n,
    type: a.type,
    key: d,
    ref: k,
    props: e,
    _owner: h
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: r,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: q,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = J;

exports.createFactory = function (a) {
  var b = J.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: t,
    render: a
  };
};

exports.isValidElement = L;

exports.lazy = function (a) {
  return {
    $$typeof: v,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: Q
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: u,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return S().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return S().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return S().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return S().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return S().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return S().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return S().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return S().useRef(a);
};

exports.useState = function (a) {
  return S().useState(a);
};

exports.version = "17.0.1";
},{"object-assign":"YOwE"}],"HdMw":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.production.min.js":"pyFg"}],"x9cO":[function(require,module,exports) {
/** @license React v0.20.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';var f,g,h,k;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}
if("undefined"===typeof window||"function"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if("undefined"!==typeof console){var z=
window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");"function"!==typeof z&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=
E};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=
x(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}
function K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;
function T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}
function V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if("function"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;
exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};
exports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};
exports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};

},{}],"IGIl":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.production.min.js":"x9cO"}],"jF7N":[function(require,module,exports) {
/** @license React v17.0.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("react"),m=require("object-assign"),r=require("scheduler");function y(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+"Capture",b)}
function ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}
var fa=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ha=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ia=Object.prototype.hasOwnProperty,
ja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function na(a,b,c,d){if(null===b||"undefined"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(oa,
pa);D[b]=new B(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});
D.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});
function qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;
if("function"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E("react.element");ta=E("react.portal");ua=E("react.fragment");wa=E("react.strict_mode");xa=E("react.profiler");ya=E("react.provider");za=E("react.context");Aa=E("react.forward_ref");Ba=E("react.suspense");Ca=E("react.suspense_list");Da=E("react.memo");Ea=E("react.lazy");Fa=E("react.block");E("react.scope");Ga=E("react.opaque.id");Ha=E("react.debug_trace_mode");Ia=E("react.offscreen");Ja=E("react.legacy_hidden")}
var Ka="function"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||"object"!==typeof a)return null;a=Ka&&a[Ka]||a["@@iterator"];return"function"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);Ma=b&&b[1]||""}return"\n"+Ma+a}var Oa=!1;
function Pa(a,b){if(!a||Oa)return"";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return"\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Na(a):""}
function Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na("Lazy");case 13:return Na("Suspense");case 19:return Na("SuspenseList");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return""}}
function Ra(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ua:return"Fragment";case ta:return"Portal";case xa:return"Profiler";case wa:return"StrictMode";case Ba:return"Suspense";case Ca:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case za:return(a.displayName||"Context")+".Consumer";case ya:return(a._context.displayName||"Context")+".Provider";case Aa:var b=a.render;b=b.displayName||b.name||"";
return a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,"checked",b,!1)}
function ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?bb(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function cb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function bb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function db(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var kb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function lb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function mb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?lb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var nb,ob=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||"innerHTML"in a)a.innerHTML=b;else{nb=nb||document.createElement("div");nb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=["Webkit","ms","Moz","O"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(""+b).trim():b+"px"}
function tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=sb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(y(62));}}
function wb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}
function Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}
function Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,"passive",{get:function(){Pb=!0}});window.addEventListener("test",Qb,Qb);window.removeEventListener("test",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}
function Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}
function bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case "focusin":case "focusout":kc=null;break;case "dragenter":case "dragleave":lc=null;break;case "mouseover":case "mouseout":mc=null;break;case "pointerover":case "pointerout":nc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":oc.delete(b.pointerId)}}
function tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function uc(a,b,c,d,e){switch(b){case "focusin":return kc=tc(kc,a,b,c,d,e),!0;case "dragenter":return lc=tc(lc,a,b,c,d,e),!0;case "mouseover":return mc=tc(mc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}
function vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}
function Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}
function Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}
function Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}
function Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ec={animationend:Dc("Animation","AnimationEnd"),animationiteration:Dc("Animation","AnimationIteration"),animationstart:Dc("Animation","AnimationStart"),transitionend:Dc("Transition","TransitionEnd")},Fc={},Gc={};
fa&&(Gc=document.createElement("div").style,"AnimationEvent"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),"TransitionEvent"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}
var Ic=Hc("animationend"),Jc=Hc("animationiteration"),Kc=Hc("animationstart"),Lc=Hc("transitionend"),Mc=new Map,Nc=new Map,Oc=["abort","abort",Ic,"animationEnd",Jc,"animationIteration",Kc,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart",
"lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lc,"transitionEnd","waiting","waiting"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e="on"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;
function Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;
F=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}
function Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}
function Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}
function hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}
function yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;
function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&"CompositionEvent"in window,be=null;fa&&"documentMode"in document&&(be=document.documentMode);var ce=fa&&"TextEvent"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;
function Je(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
var Pe=fa&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),
0);Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Pc(Oc,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea("onMouseEnter",["mouseout","mouseover"]);
ea("onMouseLeave",["mouseout","mouseover"]);ea("onPointerEnter",["pointerout","pointerover"]);ea("onPointerLeave",["pointerout","pointerover"]);da("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));da("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));da("onBeforeInput",["compositionend","keypress","textInput","paste"]);da("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));da("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}
function G(a,b){var c=$e(b),d=a+"__bubble";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf="_reactListening"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}
function df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;"selectionchange"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if("scroll"!==a)return;e|=2;f=d}var g=$e(f),h=a+"__"+(b?"capture":"bubble");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}
function af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];
a:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":x="focus";k=Fd;break;case "focusout":x="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var w=0!==(b&4),z=!w&&"scroll"===a,u=w?null!==h?h+"Capture":null:h;w=[];for(var t=d,q;null!==
t;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==
x&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v="onMouseLeave";u="onMouseEnter";t="mouse";if("pointerout"===a||"pointerover"===a)w=Td,v="onPointerLeave",u="onPointerEnter",t="pointer";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+"leave",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+"enter",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=
gf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);"focusout"===a&&(K=h._wrapperState)&&
K.controlled&&"number"===h.type&&bb(h,"number",h.value)}K=d?ue(d):window;switch(a){case "focusin":if(me(K)||"true"===K.contentEditable)Qe=K,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case "compositionstart":var L="onCompositionStart";break b;case "compositionend":L="onCompositionEnd";break b;
case "compositionupdate":L="onCompositionUpdate";break b}L=void 0}else ie?ge(a,c)&&(L="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(L="onCompositionStart");L&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==L?"onCompositionEnd"===L&&ie&&(Q=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),0<d.length&&(e=new Ld("onBeforeInput",
"beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function nf(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of="function"===typeof setTimeout?setTimeout:void 0,pf="function"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=""))}
function rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf="__reactFiber$"+vf,xf="__reactProps$"+vf,ff="__reactContainer$"+vf,yf="__reactEvents$"+vf;
function wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}
function $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;
function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}
function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||"Unknown",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}
var Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};
function eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}
function jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}
function rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}
function vg(a,b){if(pg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}
function yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,
next:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if("function"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h="function"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===
f)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;
function Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=
b);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}
function Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}
function Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;
function Qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}
function Rg(a,b){if("textarea"!==a.type)throw Error(y(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}
function Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,
c):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
Wg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Ug(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,
a.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||
null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===
n.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if("function"!==typeof l)throw Error(y(150));h=l.call(h);if(null==
h)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&
u.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);
d=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=
Wg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||"Component"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);
function dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);
function ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;
function mh(a,b){var c=nh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}
function rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}
function sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}
function Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return"function"===typeof b?b(a):b}
function Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,
eagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}
function Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=
e.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}
function Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}
function Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}
function Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}
function $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}
function di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}
function Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}
var Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,
b,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;
wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c("r:"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c("r:"+(tf++).toString(36))},
void 0,null));return b}b="r:"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}
function ii(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}
function mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}
function oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}
function pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;A||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?("function"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n="function"===typeof C||
"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?("function"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||
h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}
function qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}
var si={dehydrated:null,retryLane:0};
function ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if("number"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},
b.memoizedState=si,b.lanes=33554432,a;c=vi({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:
{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}
function xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}
function wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}
function zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}
function Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case "together":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;
Bi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};
Di=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "option":e=eb(a,e);d=eb(a,d);f=[];break;case "select":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===
l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||
(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ca.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&G("scroll",a),f||h===k||(f=[])):"object"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",
c);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===
b.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case "dialog":G("cancel",d);G("close",d);break;case "iframe":case "object":case "embed":G("load",d);break;case "video":case "audio":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case "source":G("error",d);break;case "img":case "image":case "link":G("error",d);G("load",d);break;case "details":G("toggle",d);break;case "input":Za(d,f);G("invalid",d);break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};G("invalid",d);break;case "textarea":hb(d,f),G("invalid",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],"children"===g?"string"===typeof e?d.textContent!==e&&(a=["children",e]):"number"===typeof e&&d.textContent!==""+e&&(a=["children",""+e]):ca.hasOwnProperty(g)&&null!=e&&"onScroll"===g&&G("scroll",d));switch(c){case "input":Va(d);cb(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=
jf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case "dialog":G("cancel",a);G("close",a);
e=d;break;case "iframe":case "object":case "embed":G("load",a);e=d;break;case "video":case "audio":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case "source":G("error",a);e=d;break;case "img":case "image":case "link":G("error",a);G("load",a);e=d;break;case "details":G("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);G("invalid",a);break;case "option":e=eb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G("invalid",a);break;case "textarea":hb(a,d);e=
gb(a,d);G("invalid",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?tb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&pb(a,k):"number"===typeof k&&pb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ca.hasOwnProperty(f)?null!=k&&"onScroll"===f&&G("scroll",a):null!=k&&qa(a,f,k,g))}switch(c){case "input":Va(a);cb(a,d,!1);
break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(y(166));
c=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=
4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);
null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,
f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&"hidden"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=
64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}
function Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}
function Mi(a,b){try{var c="",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi="function"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}
function Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}var Ui="function"===typeof WeakSet?WeakSet:Set;
function Vi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}
function Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,
b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));
return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}
function aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,"function"===typeof d.setProperty?d.setProperty("display","none","important"):d.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=sb("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===
a)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}
function bj(a,b){if(Mf&&"function"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,
f)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}
function fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,""),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===
c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}
function gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}
function hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}
function cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,
8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}
function ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;"input"===a&&"radio"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=
2){var g=f[e],h=f[e+1];"style"===g?tb(c,h):"dangerouslySetInnerHTML"===g?ob(c,h):"children"===g?pb(c,h):qa(c,g,h,b)}switch(a){case "input":ab(c,d);break;case "textarea":ib(c,d);break;case "select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=
b.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}
function Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}
function Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}
function Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),
c=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}
function Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=
a.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>
c?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}
function Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}
function Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}
function Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}
function Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):
(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=
void 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==V&&(V=2);k=Mi(k,h);p=
g;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&("function"===typeof K.getDerivedStateFromError||null!==Q&&"function"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}
function Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}
function Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==
a.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}
function dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==
Cj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if("selectionStart"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;
break a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===
Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,"");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&("function"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==
J&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),"selectionStart"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===
g.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});"function"===typeof t.focus&&t.focus();for(t=
0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}"function"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=
Z.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&"function"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}
function ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}
function fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=
null,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}
function Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}
function Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;
ck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==
b?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if("object"===
typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);
a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));
d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&
ph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,
c),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=
k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,
f.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));
};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function hk(a){if("function"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}
function Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Vg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ji(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if("object"===
typeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,""));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}
function Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}
function kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==
d&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}
function qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}
qk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}
function tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};
gc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};
yb=function(a,b,c){switch(b){case "input":ab(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;
Hb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"};
var xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||
pk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;
exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};
exports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version="17.0.1";

},{"react":"HdMw","object-assign":"YOwE","scheduler":"IGIl"}],"X9zx":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("production" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("production" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.production.min.js":"jF7N"}],"tBdH":[function(require,module,exports) {
var global = arguments[3];
"use strict";
/**
 * Timers.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Utility functions for creating timers. We wrap the normal
 * global timer methods because they are defined in both
 * the node and lib type definition files, and the definitions
 * don't match. Depending on which one TypeScript picks up,
 * we can get compiler errors.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var timerProvider = typeof window !== 'undefined' ? window : global;
var Timers = /** @class */ (function () {
    function Timers() {
    }
    Timers.clearInterval = function (handle) {
        timerProvider.clearInterval(handle);
    };
    Timers.clearTimeout = function (handle) {
        timerProvider.clearTimeout(handle);
    };
    Timers.setInterval = function (handler, timeout) {
        return timerProvider.setInterval(handler, timeout);
    };
    Timers.setTimeout = function (handler, timeout) {
        return timerProvider.setTimeout(handler, timeout);
    };
    return Timers;
}());
exports.default = Timers;

},{}],"uohT":[function(require,module,exports) {
"use strict";
/**
 * AutoFocusHelper.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Provides the functions which allow to handle the selection of a proper component
 * to focus from the multiple candidates with autoFocus=true.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Timers_1 = require("./Timers");
var _sortAndFilter;
var _autoFocusTimer;
var _lastFocusArbitratorProviderId = 0;
var rootFocusArbitratorProvider;
var FocusCandidateType;
(function (FocusCandidateType) {
    FocusCandidateType[FocusCandidateType["Focus"] = 1] = "Focus";
    FocusCandidateType[FocusCandidateType["FocusFirst"] = 2] = "FocusFirst";
})(FocusCandidateType = exports.FocusCandidateType || (exports.FocusCandidateType = {}));
function setSortAndFilterFunc(sortAndFilter) {
    _sortAndFilter = sortAndFilter;
}
exports.setSortAndFilterFunc = setSortAndFilterFunc;
var FocusArbitratorProvider = /** @class */ (function () {
    function FocusArbitratorProvider(view, arbitrator) {
        this._candidates = [];
        this._pendingChildren = {};
        this._id = ++_lastFocusArbitratorProviderId;
        this._parentArbitratorProvider = view
            ? ((view.context && view.context.focusArbitrator) || rootFocusArbitratorProvider)
            : undefined;
        this._arbitratorCallback = arbitrator;
    }
    FocusArbitratorProvider.prototype._notifyParent = function () {
        if (this._parentArbitratorProvider) {
            this._parentArbitratorProvider._pendingChildren['fa-' + this._id.toString()] = this;
            this._parentArbitratorProvider._notifyParent();
        }
    };
    FocusArbitratorProvider.prototype._arbitrate = function () {
        var _this = this;
        var candidates = this._candidates;
        Object.keys(this._pendingChildren).forEach(function (key) {
            var candidate = _this._pendingChildren[key]._arbitrate();
            if (candidate) {
                candidates.push(candidate);
            }
        });
        this._candidates = [];
        this._pendingChildren = {};
        return FocusArbitratorProvider._arbitrate(candidates, this._arbitratorCallback);
    };
    FocusArbitratorProvider.prototype._requestFocus = function (component, focus, isAvailable, type) {
        var accessibilityId = component.props && component.props.accessibilityId;
        this._candidates.push({
            component: component,
            focus: focus,
            isAvailable: isAvailable,
            type: type,
            accessibilityId: accessibilityId
        });
        this._notifyParent();
    };
    FocusArbitratorProvider._arbitrate = function (candidates, arbitrator) {
        // Filtering out everything which is already unmounted.
        candidates = candidates.filter(function (item) { return item.isAvailable(); });
        if (_sortAndFilter) {
            candidates = _sortAndFilter(candidates);
        }
        for (var i = 0; i < candidates.length; i++) {
            if (candidates[i].type === FocusCandidateType.FocusFirst) {
                return candidates[i];
            }
        }
        if (arbitrator) {
            // There is an application specified focus arbitrator.
            var toArbitrate_1 = [];
            candidates.forEach(function (candidate) {
                var component = candidate.component;
                // Make sure to pass FocusableComponents only.
                if (component.focus && component.blur && component.requestFocus) {
                    component.__focusCandidateInternal = candidate;
                    toArbitrate_1.push({
                        component: component,
                        accessibilityId: candidate.accessibilityId
                    });
                }
            });
            if (toArbitrate_1.length) {
                var candidate = arbitrator(toArbitrate_1);
                var ret = void 0;
                if (candidate && candidate.component && candidate.component.__focusCandidateInternal) {
                    ret = candidate.component.__focusCandidateInternal;
                }
                toArbitrate_1.forEach(function (candidate) {
                    delete candidate.component.__focusCandidateInternal;
                });
                return ret;
            }
        }
        return candidates[candidates.length - 1];
    };
    FocusArbitratorProvider.prototype.setCallback = function (arbitrator) {
        this._arbitratorCallback = arbitrator;
    };
    FocusArbitratorProvider.requestFocus = function (component, focus, isAvailable, type) {
        if (_autoFocusTimer) {
            Timers_1.default.clearTimeout(_autoFocusTimer);
        }
        var focusArbitratorProvider = ((component._focusArbitratorProvider instanceof FocusArbitratorProvider) &&
            component._focusArbitratorProvider) ||
            (component.context && component.context.focusArbitrator) ||
            rootFocusArbitratorProvider;
        focusArbitratorProvider._requestFocus(component, focus, isAvailable, type || FocusCandidateType.Focus);
        _autoFocusTimer = Timers_1.default.setTimeout(function () {
            _autoFocusTimer = undefined;
            var candidate = rootFocusArbitratorProvider._arbitrate();
            if (candidate) {
                candidate.focus();
            }
        }, 0);
    };
    return FocusArbitratorProvider;
}());
exports.FocusArbitratorProvider = FocusArbitratorProvider;
rootFocusArbitratorProvider = new FocusArbitratorProvider();

},{"./Timers":"tBdH"}],"N3Qs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SubscriptionToken = void 0;

/**
 * SubscribableEvent.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * A simple strongly-typed pub/sub/fire eventing system.
 */
var SubscriptionToken =
/** @class */
function () {
  function SubscriptionToken(_event, _callback) {
    this._event = _event;
    this._callback = _callback;
  }

  SubscriptionToken.prototype.unsubscribe = function () {
    this._event.unsubscribe(this._callback);
  };

  return SubscriptionToken;
}();

exports.SubscriptionToken = SubscriptionToken;

var SubscribableEvent =
/** @class */
function () {
  // By default, SubscribableEvent will fire to all subscribers regardless of any conditions.
  // If you enable allowStopPropagation, then a subscription callback can return a truthy response and it will halt further callbacks.
  function SubscribableEvent(_allowStopPropagation) {
    if (_allowStopPropagation === void 0) {
      _allowStopPropagation = false;
    }

    var _this = this;

    this._allowStopPropagation = _allowStopPropagation;

    this.fire = function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      } // Keep reference to the original readonly array. We don't want to have it change while we're firing


      var subs = _this._subscribers; // Execute handlers in the reverse order in which they were registered.

      for (var i = subs.length - 1; i >= 0; i--) {
        var ret = subs[i].apply(null, args);

        if (_this._allowStopPropagation && !!ret) {
          // If the value was handled, early out.
          return true;
        }
      }

      return false;
    };

    this._subscribers = [];
  }

  SubscribableEvent.prototype.dispose = function () {
    this._subscribers = [];
  };

  SubscribableEvent.prototype.subscribe = function (callback) {
    this._subscribers = this._subscribers.concat(callback);
    return new SubscriptionToken(this, callback);
  };

  SubscribableEvent.prototype.unsubscribe = function (callback) {
    this._subscribers = this._subscribers.filter(function (value) {
      return value !== callback;
    });
  };

  return SubscribableEvent;
}();

var _default = SubscribableEvent;
exports.default = _default;
},{}],"IaP6":[function(require,module,exports) {
"use strict";
/**
 * AppConfig.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * A simple class to store application config.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
        this._isDebug = false;
        this._isDevelopment = false;
    }
    AppConfig.prototype.setAppConfig = function (isDebug, isDevelopment) {
        this._isDebug = isDebug;
        this._isDevelopment = isDevelopment;
    };
    AppConfig.prototype.isDebugMode = function () {
        return this._isDebug;
    };
    AppConfig.prototype.isDevelopmentMode = function () {
        return this._isDevelopment;
    };
    return AppConfig;
}());
exports.AppConfig = AppConfig;
exports.default = new AppConfig();

},{}],"K05F":[function(require,module,exports) {
"use strict";
/**
* Types.ts
*
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT license.
*
* Type definitions for ReactXP framework.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var subscribableevent_1 = require("subscribableevent");
exports.SubscribableEvent = subscribableevent_1.default;
exports.SubscriptionToken = subscribableevent_1.SubscriptionToken;
var AnimatedValue = /** @class */ (function () {
    function AnimatedValue(val) {
        // No-op
    }
    return AnimatedValue;
}());
exports.AnimatedValue = AnimatedValue;
// Auto, Yes, No - iOS & Android.
// NoHideDescendants - iOS, Android, & Desktop.
var ImportantForAccessibility;
(function (ImportantForAccessibility) {
    ImportantForAccessibility[ImportantForAccessibility["Auto"] = 1] = "Auto";
    ImportantForAccessibility[ImportantForAccessibility["Yes"] = 2] = "Yes";
    ImportantForAccessibility[ImportantForAccessibility["No"] = 3] = "No";
    ImportantForAccessibility[ImportantForAccessibility["NoHideDescendants"] = 4] = "NoHideDescendants";
})(ImportantForAccessibility = exports.ImportantForAccessibility || (exports.ImportantForAccessibility = {}));
// Android & Desktop supported prop, which allows screen-reader to inform its users when a
// component has dynamically changed. For example, the content of an inApp toast.
var AccessibilityLiveRegion;
(function (AccessibilityLiveRegion) {
    AccessibilityLiveRegion[AccessibilityLiveRegion["None"] = 0] = "None";
    AccessibilityLiveRegion[AccessibilityLiveRegion["Polite"] = 1] = "Polite";
    AccessibilityLiveRegion[AccessibilityLiveRegion["Assertive"] = 2] = "Assertive";
})(AccessibilityLiveRegion = exports.AccessibilityLiveRegion || (exports.AccessibilityLiveRegion = {}));
// NOTE: This enum is organized based on priority of these traits (0 is the lowest),
// which can be assigned to an accessible object. On native, all traits are combined as
// a list. On desktop, trait with the maximum value is picked. Whenever you are adding
// a new trait add it in the right priority order in the list.
var AccessibilityTrait;
(function (AccessibilityTrait) {
    // Desktop and iOS.
    AccessibilityTrait[AccessibilityTrait["Summary"] = 0] = "Summary";
    AccessibilityTrait[AccessibilityTrait["Adjustable"] = 1] = "Adjustable";
    // Desktop, iOS, and Android.
    AccessibilityTrait[AccessibilityTrait["Button"] = 2] = "Button";
    AccessibilityTrait[AccessibilityTrait["Tab"] = 3] = "Tab";
    AccessibilityTrait[AccessibilityTrait["Selected"] = 4] = "Selected";
    // Android only.
    AccessibilityTrait[AccessibilityTrait["Radio_button_checked"] = 5] = "Radio_button_checked";
    AccessibilityTrait[AccessibilityTrait["Radio_button_unchecked"] = 6] = "Radio_button_unchecked";
    // iOS only.
    AccessibilityTrait[AccessibilityTrait["Link"] = 7] = "Link";
    AccessibilityTrait[AccessibilityTrait["Header"] = 8] = "Header";
    AccessibilityTrait[AccessibilityTrait["Search"] = 9] = "Search";
    AccessibilityTrait[AccessibilityTrait["Image"] = 10] = "Image";
    AccessibilityTrait[AccessibilityTrait["Plays"] = 11] = "Plays";
    AccessibilityTrait[AccessibilityTrait["Key"] = 12] = "Key";
    AccessibilityTrait[AccessibilityTrait["Text"] = 13] = "Text";
    AccessibilityTrait[AccessibilityTrait["Disabled"] = 14] = "Disabled";
    AccessibilityTrait[AccessibilityTrait["FrequentUpdates"] = 15] = "FrequentUpdates";
    AccessibilityTrait[AccessibilityTrait["StartsMedia"] = 16] = "StartsMedia";
    AccessibilityTrait[AccessibilityTrait["AllowsDirectInteraction"] = 17] = "AllowsDirectInteraction";
    AccessibilityTrait[AccessibilityTrait["PageTurn"] = 18] = "PageTurn";
    // Desktop only.
    AccessibilityTrait[AccessibilityTrait["Menu"] = 19] = "Menu";
    AccessibilityTrait[AccessibilityTrait["MenuItem"] = 20] = "MenuItem";
    AccessibilityTrait[AccessibilityTrait["MenuBar"] = 21] = "MenuBar";
    AccessibilityTrait[AccessibilityTrait["TabList"] = 22] = "TabList";
    AccessibilityTrait[AccessibilityTrait["List"] = 23] = "List";
    AccessibilityTrait[AccessibilityTrait["ListItem"] = 24] = "ListItem";
    AccessibilityTrait[AccessibilityTrait["ListBox"] = 25] = "ListBox";
    AccessibilityTrait[AccessibilityTrait["Group"] = 26] = "Group";
    AccessibilityTrait[AccessibilityTrait["CheckBox"] = 27] = "CheckBox";
    AccessibilityTrait[AccessibilityTrait["Checked"] = 28] = "Checked";
    AccessibilityTrait[AccessibilityTrait["ComboBox"] = 29] = "ComboBox";
    AccessibilityTrait[AccessibilityTrait["Log"] = 30] = "Log";
    AccessibilityTrait[AccessibilityTrait["Status"] = 31] = "Status";
    AccessibilityTrait[AccessibilityTrait["Dialog"] = 32] = "Dialog";
    AccessibilityTrait[AccessibilityTrait["HasPopup"] = 33] = "HasPopup";
    AccessibilityTrait[AccessibilityTrait["Option"] = 34] = "Option";
    AccessibilityTrait[AccessibilityTrait["Switch"] = 35] = "Switch";
    // Desktop & mobile. This is at the end because this
    // is the highest priority trait.
    AccessibilityTrait[AccessibilityTrait["None"] = 36] = "None";
})(AccessibilityTrait = exports.AccessibilityTrait || (exports.AccessibilityTrait = {}));
var LimitFocusType;
(function (LimitFocusType) {
    LimitFocusType[LimitFocusType["Unlimited"] = 0] = "Unlimited";
    // When limitFocusWithin=Limited, the View and the focusable components inside
    // the View get both tabIndex=-1 and aria-hidden=true.
    LimitFocusType[LimitFocusType["Limited"] = 1] = "Limited";
    // When limitFocusWithin=Accessible, the View and the focusable components inside
    // the View get only tabIndex=-1.
    LimitFocusType[LimitFocusType["Accessible"] = 2] = "Accessible";
})(LimitFocusType = exports.LimitFocusType || (exports.LimitFocusType = {}));
var GestureMouseCursor;
(function (GestureMouseCursor) {
    GestureMouseCursor[GestureMouseCursor["Default"] = 0] = "Default";
    GestureMouseCursor[GestureMouseCursor["Pointer"] = 1] = "Pointer";
    GestureMouseCursor[GestureMouseCursor["Grab"] = 2] = "Grab";
    GestureMouseCursor[GestureMouseCursor["Move"] = 3] = "Move";
    GestureMouseCursor[GestureMouseCursor["EWResize"] = 4] = "EWResize";
    GestureMouseCursor[GestureMouseCursor["NSResize"] = 5] = "NSResize";
    GestureMouseCursor[GestureMouseCursor["NESWResize"] = 6] = "NESWResize";
    GestureMouseCursor[GestureMouseCursor["NWSEResize"] = 7] = "NWSEResize";
    GestureMouseCursor[GestureMouseCursor["NotAllowed"] = 8] = "NotAllowed";
    GestureMouseCursor[GestureMouseCursor["ZoomIn"] = 9] = "ZoomIn";
    GestureMouseCursor[GestureMouseCursor["ZoomOut"] = 10] = "ZoomOut";
})(GestureMouseCursor = exports.GestureMouseCursor || (exports.GestureMouseCursor = {}));
var PreferredPanGesture;
(function (PreferredPanGesture) {
    PreferredPanGesture[PreferredPanGesture["Horizontal"] = 0] = "Horizontal";
    PreferredPanGesture[PreferredPanGesture["Vertical"] = 1] = "Vertical";
})(PreferredPanGesture = exports.PreferredPanGesture || (exports.PreferredPanGesture = {}));
//
// Location
// ----------------------------------------------------------------------
var LocationErrorType;
(function (LocationErrorType) {
    LocationErrorType[LocationErrorType["PermissionDenied"] = 1] = "PermissionDenied";
    LocationErrorType[LocationErrorType["PositionUnavailable"] = 2] = "PositionUnavailable";
    LocationErrorType[LocationErrorType["Timeout"] = 3] = "Timeout";
})(LocationErrorType = exports.LocationErrorType || (exports.LocationErrorType = {}));
//
// Animated
// ----------------------------------------------------------------------
var Animated;
(function (Animated) {
})(Animated = exports.Animated || (exports.Animated = {}));
var LinkingErrorCode;
(function (LinkingErrorCode) {
    LinkingErrorCode[LinkingErrorCode["NoAppFound"] = 0] = "NoAppFound";
    LinkingErrorCode[LinkingErrorCode["UnexpectedFailure"] = 1] = "UnexpectedFailure";
    LinkingErrorCode[LinkingErrorCode["Blocked"] = 2] = "Blocked";
    LinkingErrorCode[LinkingErrorCode["InitialUrlNotFound"] = 3] = "InitialUrlNotFound";
})(LinkingErrorCode = exports.LinkingErrorCode || (exports.LinkingErrorCode = {}));
//
// App
// ----------------------------------------------------------------------
var AppActivationState;
(function (AppActivationState) {
    AppActivationState[AppActivationState["Active"] = 1] = "Active";
    AppActivationState[AppActivationState["Background"] = 2] = "Background";
    AppActivationState[AppActivationState["Inactive"] = 3] = "Inactive";
    AppActivationState[AppActivationState["Extension"] = 4] = "Extension";
})(AppActivationState = exports.AppActivationState || (exports.AppActivationState = {}));

},{"subscribableevent":"N3Qs"}],"rFlL":[function(require,module,exports) {
"use strict";
/**
 * Interfaces.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Defines the template for the ReactXP interface that needs to be
 * implemented for each platform.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var subscribableevent_1 = require("subscribableevent");
var AppConfig_1 = require("./AppConfig");
var Types = require("./Types");
exports.Types = Types;
var ActivityIndicator = /** @class */ (function (_super) {
    __extends(ActivityIndicator, _super);
    function ActivityIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ActivityIndicator;
}(React.Component));
exports.ActivityIndicator = ActivityIndicator;
var Alert = /** @class */ (function () {
    function Alert() {
    }
    return Alert;
}());
exports.Alert = Alert;
var AnimatedComponent = /** @class */ (function (_super) {
    __extends(AnimatedComponent, _super);
    function AnimatedComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AnimatedComponent;
}(React.Component));
exports.AnimatedComponent = AnimatedComponent;
var AnimatedImage = /** @class */ (function (_super) {
    __extends(AnimatedImage, _super);
    function AnimatedImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AnimatedImage;
}(AnimatedComponent));
exports.AnimatedImage = AnimatedImage;
var AnimatedText = /** @class */ (function (_super) {
    __extends(AnimatedText, _super);
    function AnimatedText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AnimatedText;
}(AnimatedComponent));
exports.AnimatedText = AnimatedText;
var AnimatedTextInput = /** @class */ (function (_super) {
    __extends(AnimatedTextInput, _super);
    function AnimatedTextInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AnimatedTextInput;
}(AnimatedComponent));
exports.AnimatedTextInput = AnimatedTextInput;
var AnimatedView = /** @class */ (function (_super) {
    __extends(AnimatedView, _super);
    function AnimatedView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AnimatedView;
}(AnimatedComponent));
exports.AnimatedView = AnimatedView;
var App = /** @class */ (function () {
    function App() {
        this.supportsExperimentalKeyboardNavigation = false;
        this.activationStateChangedEvent = new subscribableevent_1.default();
        // Memory Warnings
        this.memoryWarningEvent = new subscribableevent_1.default();
    }
    // Initialization
    App.prototype.initialize = function (debug, development) {
        AppConfig_1.default.setAppConfig(debug, development);
    };
    return App;
}());
exports.App = App;
var UserInterface = /** @class */ (function () {
    function UserInterface() {
        this.contentSizeMultiplierChangedEvent = new subscribableevent_1.default();
        this.touchLatencyEvent = new subscribableevent_1.default();
        this.keyboardNavigationEvent = new subscribableevent_1.default();
    }
    return UserInterface;
}());
exports.UserInterface = UserInterface;
var Modal = /** @class */ (function () {
    function Modal() {
    }
    return Modal;
}());
exports.Modal = Modal;
var Popup = /** @class */ (function () {
    function Popup() {
    }
    return Popup;
}());
exports.Popup = Popup;
var Linking = /** @class */ (function () {
    function Linking() {
        this.deepLinkRequestEvent = new subscribableevent_1.default();
    }
    return Linking;
}());
exports.Linking = Linking;
var Accessibility = /** @class */ (function () {
    function Accessibility() {
        this.screenReaderChangedEvent = new subscribableevent_1.default();
        this.highContrastChangedEvent = new subscribableevent_1.default();
    }
    return Accessibility;
}());
exports.Accessibility = Accessibility;
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Button;
}(React.Component));
exports.Button = Button;
var Picker = /** @class */ (function (_super) {
    __extends(Picker, _super);
    function Picker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Picker;
}(React.Component));
exports.Picker = Picker;
var Component = /** @class */ (function (_super) {
    __extends(Component, _super);
    function Component() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Component;
}(React.Component));
exports.Component = Component;
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Image;
}(React.Component));
exports.Image = Image;
var Clipboard = /** @class */ (function () {
    function Clipboard() {
    }
    return Clipboard;
}());
exports.Clipboard = Clipboard;
var Link = /** @class */ (function (_super) {
    __extends(Link, _super);
    function Link() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Link;
}(React.Component));
exports.Link = Link;
var Storage = /** @class */ (function () {
    function Storage() {
    }
    return Storage;
}());
exports.Storage = Storage;
var Location = /** @class */ (function () {
    function Location() {
    }
    return Location;
}());
exports.Location = Location;
var Platform = /** @class */ (function () {
    function Platform() {
    }
    return Platform;
}());
exports.Platform = Platform;
var Input = /** @class */ (function () {
    function Input() {
        this.backButtonEvent = new subscribableevent_1.default(true);
        this.keyDownEvent = new subscribableevent_1.default(true);
        this.keyUpEvent = new subscribableevent_1.default(true);
    }
    return Input;
}());
exports.Input = Input;
var StatusBar = /** @class */ (function () {
    function StatusBar() {
    }
    return StatusBar;
}());
exports.StatusBar = StatusBar;
var Styles = /** @class */ (function () {
    function Styles() {
    }
    return Styles;
}());
exports.Styles = Styles;
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Text;
}(React.Component));
exports.Text = Text;
var TextInput = /** @class */ (function (_super) {
    __extends(TextInput, _super);
    function TextInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextInput;
}(React.Component));
exports.TextInput = TextInput;
var UserPresence = /** @class */ (function () {
    function UserPresence() {
        this.userPresenceChangedEvent = new subscribableevent_1.default();
    }
    return UserPresence;
}());
exports.UserPresence = UserPresence;
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ViewBase;
}(React.Component));
exports.ViewBase = ViewBase;
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    function View() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return View;
}(ViewBase));
exports.View = View;
var GestureView = /** @class */ (function (_super) {
    __extends(GestureView, _super);
    function GestureView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return GestureView;
}(ViewBase));
exports.GestureView = GestureView;

},{"react":"HdMw","subscribableevent":"N3Qs","./AppConfig":"IaP6","./Types":"K05F"}],"DXNi":[function(require,module,exports) {
"use strict";
/**
 * PromiseDefer.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Creates a deferral object that wraps promises with easier to use type-safety
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Timers_1 = require("./Timers");
var Defer = /** @class */ (function () {
    function Defer() {
        var _this = this;
        this._promise = new Promise(function (res, rej) {
            _this._resolver = res;
            _this._rejector = rej;
        });
    }
    Defer.prototype.resolve = function (value) {
        var _this = this;
        // Resolver shouldn't be undefined, but it's technically possible
        if (!this._resolver) {
            Timers_1.default.setTimeout(function () {
                _this.resolve(value);
            }, 10);
            return;
        }
        this._resolver(value);
    };
    Defer.prototype.reject = function (value) {
        var _this = this;
        // Rejector shouldn't be undefined, but it's technically possible
        if (!this._rejector) {
            Timers_1.default.setTimeout(function () {
                _this.reject(value);
            }, 10);
            return;
        }
        this._rejector(value);
    };
    Defer.prototype.promise = function () {
        return this._promise;
    };
    return Defer;
}());
exports.Defer = Defer;

},{"./Timers":"tBdH"}],"QzA5":[function(require,module,exports) {
"use strict";
/**
 * Location.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Methods to fetch the user's location.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("./Interfaces");
var PromiseDefer_1 = require("./utils/PromiseDefer");
var Location = /** @class */ (function (_super) {
    __extends(Location, _super);
    function Location() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Location.prototype.setConfiguration = function (config) {
        if (this.isAvailable()) {
            // Work around the fact "geolocation" type definition in ES6 lib
            // doesn't declare the RN-specific setRNConfiguration setter.
            var configSetter = navigator.geolocation.setRNConfiguration;
            if (configSetter) {
                configSetter(config);
            }
        }
    };
    // Check if a geolocation service is available.
    Location.prototype.isAvailable = function () {
        return !!('geolocation' in navigator);
    };
    // Get the current location of the user. This method returns a promise that either
    // resolves to the position or rejects with an error code.
    Location.prototype.getCurrentPosition = function (options) {
        if (!this.isAvailable()) {
            var error = {
                code: RX.Types.LocationErrorType.PositionUnavailable,
                message: 'Position unavailable because device does not support it.',
                PERMISSION_DENIED: 0,
                POSITION_UNAVAILABLE: 1,
                TIMEOUT: 0
            };
            return Promise.reject(error);
        }
        var deferred = new PromiseDefer_1.Defer();
        var reportedError = false;
        navigator.geolocation.getCurrentPosition(function (position) {
            deferred.resolve(position);
        }, function (error) {
            // We need to protect against a known bug on some platforms where
            // a timeout error is reported after other types of errors (e.g.
            // the user hasn't granted access).
            if (!reportedError) {
                deferred.reject(error);
                reportedError = true;
            }
        }, options);
        return deferred.promise();
    };
    // Get the current location of the user on a repeating basis. This method returns
    // a promise that resolves to a watcher id or rejects with an error code. If resolved,
    // future locations and errors will be piped through the provided callbacks.
    Location.prototype.watchPosition = function (successCallback, errorCallback, options) {
        if (!this.isAvailable()) {
            return Promise.reject(RX.Types.LocationErrorType.PositionUnavailable);
        }
        var watchId = navigator.geolocation.watchPosition(function (position) {
            successCallback(position);
        }, function (error) {
            if (errorCallback) {
                errorCallback(error.code);
            }
        }, options);
        return Promise.resolve(watchId);
    };
    // Clears a location watcher from watchPosition.
    Location.prototype.clearWatch = function (watchID) {
        navigator.geolocation.clearWatch(watchID);
    };
    return Location;
}(RX.Location));
exports.Location = Location;
exports.default = new Location();

},{"./Interfaces":"rFlL","./utils/PromiseDefer":"DXNi"}],"zDnP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * assert
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 */
var assert = function (cond, message) {
    if (!cond) {
        throw new Error(message || 'Assertion Failed');
    }
};
exports.default = assert;

},{}],"PrXa":[function(require,module,exports) {
var global = arguments[3];
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

},{}],"M4cY":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":"PrXa"}],"ydxh":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":"M4cY"}],"MKxR":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":"ydxh"}],"SM0O":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],"fkTb":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":"ydxh","./_getRawTag":"MKxR","./_objectToString":"SM0O"}],"ihtJ":[function(require,module,exports) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],"CqcF":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

},{"./_baseGetTag":"fkTb","./isObject":"ihtJ"}],"FwgM":[function(require,module,exports) {
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

},{"./_root":"M4cY"}],"VZNt":[function(require,module,exports) {
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

},{"./_coreJsData":"FwgM"}],"MjOM":[function(require,module,exports) {
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

},{}],"tEmV":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

},{"./isFunction":"CqcF","./_isMasked":"VZNt","./isObject":"ihtJ","./_toSource":"MjOM"}],"ONap":[function(require,module,exports) {
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

},{}],"b5xW":[function(require,module,exports) {
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

},{"./_baseIsNative":"tEmV","./_getValue":"ONap"}],"kGbX":[function(require,module,exports) {
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

},{"./_getNative":"b5xW"}],"qFLy":[function(require,module,exports) {
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

},{"./_defineProperty":"kGbX"}],"LaH9":[function(require,module,exports) {
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

},{}],"g7Kx":[function(require,module,exports) {
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

},{"./_baseAssignValue":"qFLy","./eq":"LaH9"}],"Gk15":[function(require,module,exports) {
var assignValue = require('./_assignValue'),
    baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

},{"./_assignValue":"g7Kx","./_baseAssignValue":"qFLy"}],"FRcP":[function(require,module,exports) {
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

},{}],"GLgw":[function(require,module,exports) {
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

},{}],"T5gA":[function(require,module,exports) {
var apply = require('./_apply');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

},{"./_apply":"GLgw"}],"wtQr":[function(require,module,exports) {
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;

},{}],"ct23":[function(require,module,exports) {
var constant = require('./constant'),
    defineProperty = require('./_defineProperty'),
    identity = require('./identity');

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

},{"./constant":"wtQr","./_defineProperty":"kGbX","./identity":"FRcP"}],"uyNX":[function(require,module,exports) {
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

},{}],"jbtL":[function(require,module,exports) {
var baseSetToString = require('./_baseSetToString'),
    shortOut = require('./_shortOut');

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;

},{"./_baseSetToString":"ct23","./_shortOut":"uyNX"}],"qSD8":[function(require,module,exports) {
var identity = require('./identity'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

},{"./identity":"FRcP","./_overRest":"T5gA","./_setToString":"jbtL"}],"Lm6w":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

},{}],"XeS6":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isLength = require('./isLength');

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

},{"./isFunction":"CqcF","./isLength":"Lm6w"}],"XqZz":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

},{}],"zT1p":[function(require,module,exports) {
var eq = require('./eq'),
    isArrayLike = require('./isArrayLike'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject');

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;

},{"./eq":"LaH9","./isArrayLike":"XeS6","./_isIndex":"XqZz","./isObject":"ihtJ"}],"Dw1n":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    isIterateeCall = require('./_isIterateeCall');

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

},{"./_baseRest":"qSD8","./_isIterateeCall":"zT1p"}],"GRYO":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;

},{}],"zW8l":[function(require,module,exports) {
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

},{}],"cwaR":[function(require,module,exports) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],"rx9e":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

},{"./_baseGetTag":"fkTb","./isObjectLike":"cwaR"}],"oh3z":[function(require,module,exports) {
var baseIsArguments = require('./_baseIsArguments'),
    isObjectLike = require('./isObjectLike');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

},{"./_baseIsArguments":"rx9e","./isObjectLike":"cwaR"}],"F0hp":[function(require,module,exports) {
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

},{}],"i9YA":[function(require,module,exports) {
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

},{}],"Cdux":[function(require,module,exports) {

var root = require('./_root'),
    stubFalse = require('./stubFalse');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

},{"./_root":"M4cY","./stubFalse":"i9YA"}],"IQli":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isLength = require('./isLength'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

},{"./_baseGetTag":"fkTb","./isLength":"Lm6w","./isObjectLike":"cwaR"}],"kFVy":[function(require,module,exports) {
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;

},{}],"a9Sd":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

},{"./_freeGlobal":"PrXa"}],"pKgN":[function(require,module,exports) {
var baseIsTypedArray = require('./_baseIsTypedArray'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

},{"./_baseIsTypedArray":"IQli","./_baseUnary":"kFVy","./_nodeUtil":"a9Sd"}],"Fz1h":[function(require,module,exports) {
var baseTimes = require('./_baseTimes'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isIndex = require('./_isIndex'),
    isTypedArray = require('./isTypedArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

},{"./_baseTimes":"zW8l","./isArguments":"oh3z","./isArray":"F0hp","./isBuffer":"Cdux","./_isIndex":"XqZz","./isTypedArray":"pKgN"}],"Sosh":[function(require,module,exports) {
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

},{}],"NtzY":[function(require,module,exports) {
var overArg = require('./_overArg');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

},{"./_overArg":"Sosh"}],"stqF":[function(require,module,exports) {
var isPrototype = require('./_isPrototype'),
    nativeKeys = require('./_nativeKeys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

},{"./_isPrototype":"GRYO","./_nativeKeys":"NtzY"}],"svoD":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeys = require('./_baseKeys'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

},{"./_arrayLikeKeys":"Fz1h","./_baseKeys":"stqF","./isArrayLike":"XeS6"}],"Cikd":[function(require,module,exports) {
var assignValue = require('./_assignValue'),
    copyObject = require('./_copyObject'),
    createAssigner = require('./_createAssigner'),
    isArrayLike = require('./isArrayLike'),
    isPrototype = require('./_isPrototype'),
    keys = require('./keys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;

},{"./_assignValue":"g7Kx","./_copyObject":"Gk15","./_createAssigner":"Dw1n","./isArrayLike":"XeS6","./_isPrototype":"GRYO","./keys":"svoD"}],"UuqP":[function(require,module,exports) {
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

},{}],"TrJy":[function(require,module,exports) {
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

},{"./eq":"LaH9"}],"UjAu":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

},{"./_assocIndexOf":"TrJy"}],"bvw3":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

},{"./_assocIndexOf":"TrJy"}],"Yobp":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

},{"./_assocIndexOf":"TrJy"}],"afRd":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

},{"./_assocIndexOf":"TrJy"}],"hCml":[function(require,module,exports) {
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

},{"./_listCacheClear":"UuqP","./_listCacheDelete":"UjAu","./_listCacheGet":"bvw3","./_listCacheHas":"Yobp","./_listCacheSet":"afRd"}],"oGrO":[function(require,module,exports) {
var ListCache = require('./_ListCache');

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;

},{"./_ListCache":"hCml"}],"gG8W":[function(require,module,exports) {
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

},{}],"bAeR":[function(require,module,exports) {
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

},{}],"xs8c":[function(require,module,exports) {
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

},{}],"ztLC":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

},{"./_getNative":"b5xW","./_root":"M4cY"}],"Shes":[function(require,module,exports) {
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

},{"./_getNative":"b5xW"}],"w7U7":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

},{"./_nativeCreate":"Shes"}],"iOZZ":[function(require,module,exports) {
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

},{}],"hBF7":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

},{"./_nativeCreate":"Shes"}],"CKBs":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

},{"./_nativeCreate":"Shes"}],"rhCp":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

},{"./_nativeCreate":"Shes"}],"GyRm":[function(require,module,exports) {
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

},{"./_hashClear":"w7U7","./_hashDelete":"iOZZ","./_hashGet":"hBF7","./_hashHas":"CKBs","./_hashSet":"rhCp"}],"UOHr":[function(require,module,exports) {
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

},{"./_Hash":"GyRm","./_ListCache":"hCml","./_Map":"ztLC"}],"MmTn":[function(require,module,exports) {
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

},{}],"us4P":[function(require,module,exports) {
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

},{"./_isKeyable":"MmTn"}],"QjAw":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

},{"./_getMapData":"us4P"}],"XTfE":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

},{"./_getMapData":"us4P"}],"jqgC":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

},{"./_getMapData":"us4P"}],"QE4m":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

},{"./_getMapData":"us4P"}],"ZmWn":[function(require,module,exports) {
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

},{"./_mapCacheClear":"UOHr","./_mapCacheDelete":"QjAw","./_mapCacheGet":"XTfE","./_mapCacheHas":"jqgC","./_mapCacheSet":"QE4m"}],"nHDT":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    Map = require('./_Map'),
    MapCache = require('./_MapCache');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

},{"./_ListCache":"hCml","./_Map":"ztLC","./_MapCache":"ZmWn"}],"rYKR":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    stackClear = require('./_stackClear'),
    stackDelete = require('./_stackDelete'),
    stackGet = require('./_stackGet'),
    stackHas = require('./_stackHas'),
    stackSet = require('./_stackSet');

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

},{"./_ListCache":"hCml","./_stackClear":"oGrO","./_stackDelete":"gG8W","./_stackGet":"bAeR","./_stackHas":"xs8c","./_stackSet":"nHDT"}],"vLP6":[function(require,module,exports) {
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

},{}],"HAX5":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    keys = require('./keys');

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;

},{"./_copyObject":"Gk15","./keys":"svoD"}],"WhKt":[function(require,module,exports) {
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;

},{}],"Q6xK":[function(require,module,exports) {
var isObject = require('./isObject'),
    isPrototype = require('./_isPrototype'),
    nativeKeysIn = require('./_nativeKeysIn');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;

},{"./isObject":"ihtJ","./_isPrototype":"GRYO","./_nativeKeysIn":"WhKt"}],"H2Yl":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeysIn = require('./_baseKeysIn'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;

},{"./_arrayLikeKeys":"Fz1h","./_baseKeysIn":"Q6xK","./isArrayLike":"XeS6"}],"lmMK":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    keysIn = require('./keysIn');

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;

},{"./_copyObject":"Gk15","./keysIn":"H2Yl"}],"t32k":[function(require,module,exports) {

var root = require('./_root');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

},{"./_root":"M4cY"}],"nApe":[function(require,module,exports) {
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;

},{}],"Kder":[function(require,module,exports) {
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

},{}],"k193":[function(require,module,exports) {
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

},{}],"WqEW":[function(require,module,exports) {
var arrayFilter = require('./_arrayFilter'),
    stubArray = require('./stubArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

},{"./_arrayFilter":"Kder","./stubArray":"k193"}],"uJWd":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    getSymbols = require('./_getSymbols');

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;

},{"./_copyObject":"Gk15","./_getSymbols":"WqEW"}],"CDJt":[function(require,module,exports) {
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

},{}],"q4qA":[function(require,module,exports) {
var overArg = require('./_overArg');

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;

},{"./_overArg":"Sosh"}],"xwPX":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    getPrototype = require('./_getPrototype'),
    getSymbols = require('./_getSymbols'),
    stubArray = require('./stubArray');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;

},{"./_arrayPush":"CDJt","./_getPrototype":"q4qA","./_getSymbols":"WqEW","./stubArray":"k193"}],"pCbY":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    getSymbolsIn = require('./_getSymbolsIn');

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;

},{"./_copyObject":"Gk15","./_getSymbolsIn":"xwPX"}],"UoCT":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    isArray = require('./isArray');

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

},{"./_arrayPush":"CDJt","./isArray":"F0hp"}],"cWHV":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbols = require('./_getSymbols'),
    keys = require('./keys');

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

},{"./_baseGetAllKeys":"UoCT","./_getSymbols":"WqEW","./keys":"svoD"}],"YDpP":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbolsIn = require('./_getSymbolsIn'),
    keysIn = require('./keysIn');

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;

},{"./_baseGetAllKeys":"UoCT","./_getSymbolsIn":"xwPX","./keysIn":"H2Yl"}],"tNX1":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

},{"./_getNative":"b5xW","./_root":"M4cY"}],"xIO6":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

},{"./_getNative":"b5xW","./_root":"M4cY"}],"dnze":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

},{"./_getNative":"b5xW","./_root":"M4cY"}],"zzh8":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

},{"./_getNative":"b5xW","./_root":"M4cY"}],"Q9e6":[function(require,module,exports) {
var DataView = require('./_DataView'),
    Map = require('./_Map'),
    Promise = require('./_Promise'),
    Set = require('./_Set'),
    WeakMap = require('./_WeakMap'),
    baseGetTag = require('./_baseGetTag'),
    toSource = require('./_toSource');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;

},{"./_DataView":"tNX1","./_Map":"ztLC","./_Promise":"xIO6","./_Set":"dnze","./_WeakMap":"zzh8","./_baseGetTag":"fkTb","./_toSource":"MjOM"}],"J6OF":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;

},{}],"NRNF":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

},{"./_root":"M4cY"}],"amnB":[function(require,module,exports) {
var Uint8Array = require('./_Uint8Array');

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;

},{"./_Uint8Array":"NRNF"}],"QFWB":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;

},{"./_cloneArrayBuffer":"amnB"}],"R2Eh":[function(require,module,exports) {
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;

},{}],"IKOn":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;

},{"./_Symbol":"ydxh"}],"WfSD":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer');

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;

},{"./_cloneArrayBuffer":"amnB"}],"f9cg":[function(require,module,exports) {
var cloneArrayBuffer = require('./_cloneArrayBuffer'),
    cloneDataView = require('./_cloneDataView'),
    cloneRegExp = require('./_cloneRegExp'),
    cloneSymbol = require('./_cloneSymbol'),
    cloneTypedArray = require('./_cloneTypedArray');

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;

},{"./_cloneArrayBuffer":"amnB","./_cloneDataView":"QFWB","./_cloneRegExp":"R2Eh","./_cloneSymbol":"IKOn","./_cloneTypedArray":"WfSD"}],"PSsF":[function(require,module,exports) {
var isObject = require('./isObject');

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;

},{"./isObject":"ihtJ"}],"PDaD":[function(require,module,exports) {
var baseCreate = require('./_baseCreate'),
    getPrototype = require('./_getPrototype'),
    isPrototype = require('./_isPrototype');

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;

},{"./_baseCreate":"PSsF","./_getPrototype":"q4qA","./_isPrototype":"GRYO"}],"DNH3":[function(require,module,exports) {
var getTag = require('./_getTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;

},{"./_getTag":"Q9e6","./isObjectLike":"cwaR"}],"jHOR":[function(require,module,exports) {
var baseIsMap = require('./_baseIsMap'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;

},{"./_baseIsMap":"DNH3","./_baseUnary":"kFVy","./_nodeUtil":"a9Sd"}],"AB6A":[function(require,module,exports) {
var getTag = require('./_getTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;

},{"./_getTag":"Q9e6","./isObjectLike":"cwaR"}],"vvmV":[function(require,module,exports) {
var baseIsSet = require('./_baseIsSet'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;

},{"./_baseIsSet":"AB6A","./_baseUnary":"kFVy","./_nodeUtil":"a9Sd"}],"f0rf":[function(require,module,exports) {
var Stack = require('./_Stack'),
    arrayEach = require('./_arrayEach'),
    assignValue = require('./_assignValue'),
    baseAssign = require('./_baseAssign'),
    baseAssignIn = require('./_baseAssignIn'),
    cloneBuffer = require('./_cloneBuffer'),
    copyArray = require('./_copyArray'),
    copySymbols = require('./_copySymbols'),
    copySymbolsIn = require('./_copySymbolsIn'),
    getAllKeys = require('./_getAllKeys'),
    getAllKeysIn = require('./_getAllKeysIn'),
    getTag = require('./_getTag'),
    initCloneArray = require('./_initCloneArray'),
    initCloneByTag = require('./_initCloneByTag'),
    initCloneObject = require('./_initCloneObject'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isMap = require('./isMap'),
    isObject = require('./isObject'),
    isSet = require('./isSet'),
    keys = require('./keys'),
    keysIn = require('./keysIn');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;

},{"./_Stack":"rYKR","./_arrayEach":"vLP6","./_assignValue":"g7Kx","./_baseAssign":"HAX5","./_baseAssignIn":"lmMK","./_cloneBuffer":"t32k","./_copyArray":"nApe","./_copySymbols":"uJWd","./_copySymbolsIn":"pCbY","./_getAllKeys":"cWHV","./_getAllKeysIn":"YDpP","./_getTag":"Q9e6","./_initCloneArray":"J6OF","./_initCloneByTag":"f9cg","./_initCloneObject":"PDaD","./isArray":"F0hp","./isBuffer":"Cdux","./isMap":"jHOR","./isObject":"ihtJ","./isSet":"vvmV","./keys":"svoD","./keysIn":"H2Yl"}],"j2CJ":[function(require,module,exports) {
var baseClone = require('./_baseClone');

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone(value, CLONE_SYMBOLS_FLAG);
}

module.exports = clone;

},{"./_baseClone":"f0rf"}],"Vj2w":[function(require,module,exports) {
var baseClone = require('./_baseClone');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;

},{"./_baseClone":"f0rf"}],"WlZj":[function(require,module,exports) {
/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The base implementation of `_.delay` and `_.defer` which accepts `args`
 * to provide to `func`.
 *
 * @private
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {Array} args The arguments to provide to `func`.
 * @returns {number|Object} Returns the timer id or timeout object.
 */
function baseDelay(func, wait, args) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  return setTimeout(function() { func.apply(undefined, args); }, wait);
}

module.exports = baseDelay;

},{}],"PTML":[function(require,module,exports) {
var baseDelay = require('./_baseDelay'),
    baseRest = require('./_baseRest');

/**
 * Defers invoking the `func` until the current call stack has cleared. Any
 * additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to defer.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.defer(function(text) {
 *   console.log(text);
 * }, 'deferred');
 * // => Logs 'deferred' after one millisecond.
 */
var defer = baseRest(function(func, args) {
  return baseDelay(func, 1, args);
});

module.exports = defer;

},{"./_baseDelay":"WlZj","./_baseRest":"qSD8"}],"WSXs":[function(require,module,exports) {
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

},{}],"eVSI":[function(require,module,exports) {
var createBaseFor = require('./_createBaseFor');

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

},{"./_createBaseFor":"WSXs"}],"DQ8x":[function(require,module,exports) {
var baseFor = require('./_baseFor'),
    keys = require('./keys');

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

},{"./_baseFor":"eVSI","./keys":"svoD"}],"He6B":[function(require,module,exports) {
var isArrayLike = require('./isArrayLike');

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;

},{"./isArrayLike":"XeS6"}],"vYTM":[function(require,module,exports) {
var baseForOwn = require('./_baseForOwn'),
    createBaseEach = require('./_createBaseEach');

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;

},{"./_baseForOwn":"DQ8x","./_createBaseEach":"He6B"}],"pajS":[function(require,module,exports) {
var identity = require('./identity');

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;

},{"./identity":"FRcP"}],"Cllr":[function(require,module,exports) {
var arrayEach = require('./_arrayEach'),
    baseEach = require('./_baseEach'),
    castFunction = require('./_castFunction'),
    isArray = require('./isArray');

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = isArray(collection) ? arrayEach : baseEach;
  return func(collection, castFunction(iteratee));
}

module.exports = forEach;

},{"./_arrayEach":"vLP6","./_baseEach":"vYTM","./_castFunction":"pajS","./isArray":"F0hp"}],"NHs0":[function(require,module,exports) {
module.exports = require('./forEach');

},{"./forEach":"Cllr"}],"C5m0":[function(require,module,exports) {
/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

module.exports = baseClamp;

},{}],"oCpU":[function(require,module,exports) {
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

},{}],"DFEd":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

},{"./_baseGetTag":"fkTb","./isObjectLike":"cwaR"}],"e2ls":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    arrayMap = require('./_arrayMap'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;

},{"./_Symbol":"ydxh","./_arrayMap":"oCpU","./isArray":"F0hp","./isSymbol":"DFEd"}],"K9rX":[function(require,module,exports) {
var isObject = require('./isObject'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;

},{"./isObject":"ihtJ","./isSymbol":"DFEd"}],"jW8b":[function(require,module,exports) {
var toNumber = require('./toNumber');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;

},{"./toNumber":"K9rX"}],"HNkt":[function(require,module,exports) {
var toFinite = require('./toFinite');

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;

},{"./toFinite":"jW8b"}],"QWoG":[function(require,module,exports) {
var baseToString = require('./_baseToString');

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

},{"./_baseToString":"e2ls"}],"cHnJ":[function(require,module,exports) {
var baseClamp = require('./_baseClamp'),
    baseToString = require('./_baseToString'),
    toInteger = require('./toInteger'),
    toString = require('./toString');

/**
 * Checks if `string` ends with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=string.length] The position to search up to.
 * @returns {boolean} Returns `true` if `string` ends with `target`,
 *  else `false`.
 * @example
 *
 * _.endsWith('abc', 'c');
 * // => true
 *
 * _.endsWith('abc', 'b');
 * // => false
 *
 * _.endsWith('abc', 'b', 2);
 * // => true
 */
function endsWith(string, target, position) {
  string = toString(string);
  target = baseToString(target);

  var length = string.length;
  position = position === undefined
    ? length
    : baseClamp(toInteger(position), 0, length);

  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}

module.exports = endsWith;

},{"./_baseClamp":"C5m0","./_baseToString":"e2ls","./toInteger":"HNkt","./toString":"QWoG"}],"W1Hl":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    createAssigner = require('./_createAssigner'),
    keysIn = require('./keysIn');

/**
 * This method is like `_.assign` except that it iterates over own and
 * inherited source properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assign
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
 */
var assignIn = createAssigner(function(object, source) {
  copyObject(source, keysIn(source), object);
});

module.exports = assignIn;

},{"./_copyObject":"Gk15","./_createAssigner":"Dw1n","./keysIn":"H2Yl"}],"bSEl":[function(require,module,exports) {
module.exports = require('./assignIn');

},{"./assignIn":"W1Hl"}],"zwjc":[function(require,module,exports) {
var baseEach = require('./_baseEach');

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

module.exports = baseFilter;

},{"./_baseEach":"vYTM"}],"wZpv":[function(require,module,exports) {
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

},{}],"FeTq":[function(require,module,exports) {
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

},{}],"Ne64":[function(require,module,exports) {
var MapCache = require('./_MapCache'),
    setCacheAdd = require('./_setCacheAdd'),
    setCacheHas = require('./_setCacheHas');

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

},{"./_MapCache":"ZmWn","./_setCacheAdd":"wZpv","./_setCacheHas":"FeTq"}],"MOxx":[function(require,module,exports) {
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;

},{}],"qOwK":[function(require,module,exports) {
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

},{}],"ACVG":[function(require,module,exports) {
var SetCache = require('./_SetCache'),
    arraySome = require('./_arraySome'),
    cacheHas = require('./_cacheHas');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

},{"./_SetCache":"Ne64","./_arraySome":"MOxx","./_cacheHas":"qOwK"}],"XDXg":[function(require,module,exports) {
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

},{}],"xWx9":[function(require,module,exports) {
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

},{}],"Cm03":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    Uint8Array = require('./_Uint8Array'),
    eq = require('./eq'),
    equalArrays = require('./_equalArrays'),
    mapToArray = require('./_mapToArray'),
    setToArray = require('./_setToArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;

},{"./_Symbol":"ydxh","./_Uint8Array":"NRNF","./eq":"LaH9","./_equalArrays":"ACVG","./_mapToArray":"XDXg","./_setToArray":"xWx9"}],"ZpQC":[function(require,module,exports) {
var getAllKeys = require('./_getAllKeys');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

},{"./_getAllKeys":"cWHV"}],"FN8H":[function(require,module,exports) {
var Stack = require('./_Stack'),
    equalArrays = require('./_equalArrays'),
    equalByTag = require('./_equalByTag'),
    equalObjects = require('./_equalObjects'),
    getTag = require('./_getTag'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isTypedArray = require('./isTypedArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

},{"./_Stack":"rYKR","./_equalArrays":"ACVG","./_equalByTag":"Cm03","./_equalObjects":"ZpQC","./_getTag":"Q9e6","./isArray":"F0hp","./isBuffer":"Cdux","./isTypedArray":"pKgN"}],"ANt1":[function(require,module,exports) {
var baseIsEqualDeep = require('./_baseIsEqualDeep'),
    isObjectLike = require('./isObjectLike');

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

},{"./_baseIsEqualDeep":"FN8H","./isObjectLike":"cwaR"}],"WLLv":[function(require,module,exports) {
var Stack = require('./_Stack'),
    baseIsEqual = require('./_baseIsEqual');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;

},{"./_Stack":"rYKR","./_baseIsEqual":"ANt1"}],"YxmV":[function(require,module,exports) {
var isObject = require('./isObject');

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

},{"./isObject":"ihtJ"}],"hPkd":[function(require,module,exports) {
var isStrictComparable = require('./_isStrictComparable'),
    keys = require('./keys');

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;

},{"./_isStrictComparable":"YxmV","./keys":"svoD"}],"EIPX":[function(require,module,exports) {
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;

},{}],"xxHk":[function(require,module,exports) {
var baseIsMatch = require('./_baseIsMatch'),
    getMatchData = require('./_getMatchData'),
    matchesStrictComparable = require('./_matchesStrictComparable');

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

},{"./_baseIsMatch":"WLLv","./_getMatchData":"hPkd","./_matchesStrictComparable":"EIPX"}],"Bhgs":[function(require,module,exports) {
var isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;

},{"./isArray":"F0hp","./isSymbol":"DFEd"}],"wFGW":[function(require,module,exports) {
var MapCache = require('./_MapCache');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

},{"./_MapCache":"ZmWn"}],"CquK":[function(require,module,exports) {
var memoize = require('./memoize');

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

},{"./memoize":"wFGW"}],"pYME":[function(require,module,exports) {
var memoizeCapped = require('./_memoizeCapped');

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;

},{"./_memoizeCapped":"CquK"}],"RbEK":[function(require,module,exports) {
var isArray = require('./isArray'),
    isKey = require('./_isKey'),
    stringToPath = require('./_stringToPath'),
    toString = require('./toString');

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

},{"./isArray":"F0hp","./_isKey":"Bhgs","./_stringToPath":"pYME","./toString":"QWoG"}],"BA1W":[function(require,module,exports) {
var isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;

},{"./isSymbol":"DFEd"}],"Ws9z":[function(require,module,exports) {
var castPath = require('./_castPath'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;

},{"./_castPath":"RbEK","./_toKey":"BA1W"}],"BBFX":[function(require,module,exports) {
var baseGet = require('./_baseGet');

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

},{"./_baseGet":"Ws9z"}],"Ag0k":[function(require,module,exports) {
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

},{}],"KEJA":[function(require,module,exports) {
var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;

},{"./_castPath":"RbEK","./isArguments":"oh3z","./isArray":"F0hp","./_isIndex":"XqZz","./isLength":"Lm6w","./_toKey":"BA1W"}],"RLtF":[function(require,module,exports) {
var baseHasIn = require('./_baseHasIn'),
    hasPath = require('./_hasPath');

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

},{"./_baseHasIn":"Ag0k","./_hasPath":"KEJA"}],"A3nB":[function(require,module,exports) {
var baseIsEqual = require('./_baseIsEqual'),
    get = require('./get'),
    hasIn = require('./hasIn'),
    isKey = require('./_isKey'),
    isStrictComparable = require('./_isStrictComparable'),
    matchesStrictComparable = require('./_matchesStrictComparable'),
    toKey = require('./_toKey');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

},{"./_baseIsEqual":"ANt1","./get":"BBFX","./hasIn":"RLtF","./_isKey":"Bhgs","./_isStrictComparable":"YxmV","./_matchesStrictComparable":"EIPX","./_toKey":"BA1W"}],"gnsq":[function(require,module,exports) {
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

},{}],"BXs1":[function(require,module,exports) {
var baseGet = require('./_baseGet');

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

},{"./_baseGet":"Ws9z"}],"TQRE":[function(require,module,exports) {
var baseProperty = require('./_baseProperty'),
    basePropertyDeep = require('./_basePropertyDeep'),
    isKey = require('./_isKey'),
    toKey = require('./_toKey');

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

},{"./_baseProperty":"gnsq","./_basePropertyDeep":"BXs1","./_isKey":"Bhgs","./_toKey":"BA1W"}],"T11M":[function(require,module,exports) {
var baseMatches = require('./_baseMatches'),
    baseMatchesProperty = require('./_baseMatchesProperty'),
    identity = require('./identity'),
    isArray = require('./isArray'),
    property = require('./property');

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;

},{"./_baseMatches":"xxHk","./_baseMatchesProperty":"A3nB","./identity":"FRcP","./isArray":"F0hp","./property":"TQRE"}],"Knrx":[function(require,module,exports) {
var arrayFilter = require('./_arrayFilter'),
    baseFilter = require('./_baseFilter'),
    baseIteratee = require('./_baseIteratee'),
    isArray = require('./isArray');

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 *
 * // Combining several predicates using `_.overEvery` or `_.overSome`.
 * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
 * // => objects for ['fred', 'barney']
 */
function filter(collection, predicate) {
  var func = isArray(collection) ? arrayFilter : baseFilter;
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = filter;

},{"./_arrayFilter":"Kder","./_baseFilter":"zwjc","./_baseIteratee":"T11M","./isArray":"F0hp"}],"InoQ":[function(require,module,exports) {
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;

},{}],"KVQO":[function(require,module,exports) {
var baseFindIndex = require('./_baseFindIndex'),
    baseIteratee = require('./_baseIteratee'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;

},{"./_baseFindIndex":"InoQ","./_baseIteratee":"T11M","./toInteger":"HNkt"}],"LPtf":[function(require,module,exports) {
var baseIteratee = require('./_baseIteratee'),
    isArrayLike = require('./isArrayLike'),
    keys = require('./keys');

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;

},{"./_baseIteratee":"T11M","./isArrayLike":"XeS6","./keys":"svoD"}],"oTSj":[function(require,module,exports) {
var baseFindIndex = require('./_baseFindIndex'),
    baseIteratee = require('./_baseIteratee'),
    toInteger = require('./toInteger');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = toInteger(fromIndex);
    index = fromIndex < 0
      ? nativeMax(length + index, 0)
      : nativeMin(index, length - 1);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);
}

module.exports = findLastIndex;

},{"./_baseFindIndex":"InoQ","./_baseIteratee":"T11M","./toInteger":"HNkt"}],"WY9b":[function(require,module,exports) {
var createFind = require('./_createFind'),
    findLastIndex = require('./findLastIndex');

/**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
var findLast = createFind(findLastIndex);

module.exports = findLast;

},{"./_createFind":"LPtf","./findLastIndex":"oTSj"}],"O3QP":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray');

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

},{"./_Symbol":"ydxh","./isArguments":"oh3z","./isArray":"F0hp"}],"D1Ru":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    isFlattenable = require('./_isFlattenable');

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;

},{"./_arrayPush":"CDJt","./_isFlattenable":"O3QP"}],"L0W7":[function(require,module,exports) {
var baseFlatten = require('./_baseFlatten');

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;

},{"./_baseFlatten":"D1Ru"}],"IhHo":[function(require,module,exports) {
var baseKeys = require('./_baseKeys'),
    getTag = require('./_getTag'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isArrayLike = require('./isArrayLike'),
    isBuffer = require('./isBuffer'),
    isPrototype = require('./_isPrototype'),
    isTypedArray = require('./isTypedArray');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;

},{"./_baseKeys":"stqF","./_getTag":"Q9e6","./isArguments":"oh3z","./isArray":"F0hp","./isArrayLike":"XeS6","./isBuffer":"Cdux","./_isPrototype":"GRYO","./isTypedArray":"pKgN"}],"rONH":[function(require,module,exports) {
var baseIsEqual = require('./_baseIsEqual');

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;

},{"./_baseIsEqual":"ANt1"}],"Pq7J":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (isObjectLike(value) && baseGetTag(value) == numberTag);
}

module.exports = isNumber;

},{"./_baseGetTag":"fkTb","./isObjectLike":"cwaR"}],"HHCo":[function(require,module,exports) {
/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;

},{}],"gOco":[function(require,module,exports) {
/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;

},{}],"hdf1":[function(require,module,exports) {
/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

module.exports = basePropertyOf;

},{}],"hoDw":[function(require,module,exports) {
var basePropertyOf = require('./_basePropertyOf');

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

module.exports = deburrLetter;

},{"./_basePropertyOf":"hdf1"}],"TMZG":[function(require,module,exports) {
var deburrLetter = require('./_deburrLetter'),
    toString = require('./toString');

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

module.exports = deburr;

},{"./_deburrLetter":"hoDw","./toString":"QWoG"}],"lQ0H":[function(require,module,exports) {
/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

module.exports = asciiWords;

},{}],"s0HD":[function(require,module,exports) {
/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

module.exports = hasUnicodeWord;

},{}],"qbPj":[function(require,module,exports) {
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

module.exports = unicodeWords;

},{}],"XFPw":[function(require,module,exports) {
var asciiWords = require('./_asciiWords'),
    hasUnicodeWord = require('./_hasUnicodeWord'),
    toString = require('./toString'),
    unicodeWords = require('./_unicodeWords');

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = words;

},{"./_asciiWords":"lQ0H","./_hasUnicodeWord":"s0HD","./toString":"QWoG","./_unicodeWords":"qbPj"}],"K9cH":[function(require,module,exports) {
var arrayReduce = require('./_arrayReduce'),
    deburr = require('./deburr'),
    words = require('./words');

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

module.exports = createCompounder;

},{"./_arrayReduce":"gOco","./deburr":"TMZG","./words":"XFPw"}],"Cekz":[function(require,module,exports) {
var createCompounder = require('./_createCompounder');

/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = createCompounder(function(result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});

module.exports = kebabCase;

},{"./_createCompounder":"K9cH"}],"GTeg":[function(require,module,exports) {
var baseEach = require('./_baseEach'),
    isArrayLike = require('./isArrayLike');

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;

},{"./_baseEach":"vYTM","./isArrayLike":"XeS6"}],"HR4v":[function(require,module,exports) {
var arrayMap = require('./_arrayMap'),
    baseIteratee = require('./_baseIteratee'),
    baseMap = require('./_baseMap'),
    isArray = require('./isArray');

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;

},{"./_arrayMap":"oCpU","./_baseIteratee":"T11M","./_baseMap":"GTeg","./isArray":"F0hp"}],"zehy":[function(require,module,exports) {
var baseAssignValue = require('./_baseAssignValue'),
    baseForOwn = require('./_baseForOwn'),
    baseIteratee = require('./_baseIteratee');

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = baseIteratee(iteratee, 3);

  baseForOwn(object, function(value, key, object) {
    baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

module.exports = mapValues;

},{"./_baseAssignValue":"qFLy","./_baseForOwn":"DQ8x","./_baseIteratee":"T11M"}],"IE6t":[function(require,module,exports) {
var isSymbol = require('./isSymbol');

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

module.exports = baseExtremum;

},{"./isSymbol":"DFEd"}],"tdMU":[function(require,module,exports) {
/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

module.exports = baseGt;

},{}],"AtzK":[function(require,module,exports) {
var baseExtremum = require('./_baseExtremum'),
    baseGt = require('./_baseGt'),
    identity = require('./identity');

/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return (array && array.length)
    ? baseExtremum(array, identity, baseGt)
    : undefined;
}

module.exports = max;

},{"./_baseExtremum":"IE6t","./_baseGt":"tdMU","./identity":"FRcP"}],"VN0k":[function(require,module,exports) {
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;

},{"./_baseAssignValue":"qFLy","./eq":"LaH9"}],"APpx":[function(require,module,exports) {
var isArrayLike = require('./isArrayLike'),
    isObjectLike = require('./isObjectLike');

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;

},{"./isArrayLike":"XeS6","./isObjectLike":"cwaR"}],"XOVF":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    getPrototype = require('./_getPrototype'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

},{"./_baseGetTag":"fkTb","./_getPrototype":"q4qA","./isObjectLike":"cwaR"}],"yHEk":[function(require,module,exports) {
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;

},{}],"k2tk":[function(require,module,exports) {
var copyObject = require('./_copyObject'),
    keysIn = require('./keysIn');

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;

},{"./_copyObject":"Gk15","./keysIn":"H2Yl"}],"F4Eb":[function(require,module,exports) {
var assignMergeValue = require('./_assignMergeValue'),
    cloneBuffer = require('./_cloneBuffer'),
    cloneTypedArray = require('./_cloneTypedArray'),
    copyArray = require('./_copyArray'),
    initCloneObject = require('./_initCloneObject'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isArrayLikeObject = require('./isArrayLikeObject'),
    isBuffer = require('./isBuffer'),
    isFunction = require('./isFunction'),
    isObject = require('./isObject'),
    isPlainObject = require('./isPlainObject'),
    isTypedArray = require('./isTypedArray'),
    safeGet = require('./_safeGet'),
    toPlainObject = require('./toPlainObject');

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;

},{"./_assignMergeValue":"VN0k","./_cloneBuffer":"t32k","./_cloneTypedArray":"WfSD","./_copyArray":"nApe","./_initCloneObject":"PDaD","./isArguments":"oh3z","./isArray":"F0hp","./isArrayLikeObject":"APpx","./isBuffer":"Cdux","./isFunction":"CqcF","./isObject":"ihtJ","./isPlainObject":"XOVF","./isTypedArray":"pKgN","./_safeGet":"yHEk","./toPlainObject":"k2tk"}],"luXJ":[function(require,module,exports) {
var Stack = require('./_Stack'),
    assignMergeValue = require('./_assignMergeValue'),
    baseFor = require('./_baseFor'),
    baseMergeDeep = require('./_baseMergeDeep'),
    isObject = require('./isObject'),
    keysIn = require('./keysIn'),
    safeGet = require('./_safeGet');

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;

},{"./_Stack":"rYKR","./_assignMergeValue":"VN0k","./_baseFor":"eVSI","./_baseMergeDeep":"F4Eb","./isObject":"ihtJ","./keysIn":"H2Yl","./_safeGet":"yHEk"}],"zuSO":[function(require,module,exports) {
var baseMerge = require('./_baseMerge'),
    createAssigner = require('./_createAssigner');

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;

},{"./_baseMerge":"luXJ","./_createAssigner":"Dw1n"}],"nfdx":[function(require,module,exports) {
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;

},{}],"X6M1":[function(require,module,exports) {
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;

},{}],"zoFq":[function(require,module,exports) {
var baseGet = require('./_baseGet'),
    baseSlice = require('./_baseSlice');

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;

},{"./_baseGet":"Ws9z","./_baseSlice":"X6M1"}],"WEhy":[function(require,module,exports) {
var castPath = require('./_castPath'),
    last = require('./last'),
    parent = require('./_parent'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;

},{"./_castPath":"RbEK","./last":"nfdx","./_parent":"zoFq","./_toKey":"BA1W"}],"PUA3":[function(require,module,exports) {
var isPlainObject = require('./isPlainObject');

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;

},{"./isPlainObject":"XOVF"}],"OYJm":[function(require,module,exports) {
var flatten = require('./flatten'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;

},{"./flatten":"L0W7","./_overRest":"T5gA","./_setToString":"jbtL"}],"tvjj":[function(require,module,exports) {
var arrayMap = require('./_arrayMap'),
    baseClone = require('./_baseClone'),
    baseUnset = require('./_baseUnset'),
    castPath = require('./_castPath'),
    copyObject = require('./_copyObject'),
    customOmitClone = require('./_customOmitClone'),
    flatRest = require('./_flatRest'),
    getAllKeysIn = require('./_getAllKeysIn');

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = flatRest(function(object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;

},{"./_arrayMap":"oCpU","./_baseClone":"f0rf","./_baseUnset":"WEhy","./_castPath":"RbEK","./_copyObject":"Gk15","./_customOmitClone":"PUA3","./_flatRest":"OYJm","./_getAllKeysIn":"YDpP"}],"pLjs":[function(require,module,exports) {
var baseUnset = require('./_baseUnset'),
    isIndex = require('./_isIndex');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex(index)) {
        splice.call(array, index, 1);
      } else {
        baseUnset(array, index);
      }
    }
  }
  return array;
}

module.exports = basePullAt;

},{"./_baseUnset":"WEhy","./_isIndex":"XqZz"}],"HcDb":[function(require,module,exports) {
var baseIteratee = require('./_baseIteratee'),
    basePullAt = require('./_basePullAt');

/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];
  if (!(array && array.length)) {
    return result;
  }
  var index = -1,
      indexes = [],
      length = array.length;

  predicate = baseIteratee(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }
  basePullAt(array, indexes);
  return result;
}

module.exports = remove;

},{"./_baseIteratee":"T11M","./_basePullAt":"pLjs"}],"gRBa":[function(require,module,exports) {
var root = require('./_root');

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;

},{"./_root":"M4cY"}],"o1J2":[function(require,module,exports) {
var isObject = require('./isObject'),
    now = require('./now'),
    toNumber = require('./toNumber');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

},{"./isObject":"ihtJ","./now":"gRBa","./toNumber":"K9rX"}],"xX8v":[function(require,module,exports) {
var debounce = require('./debounce'),
    isObject = require('./isObject');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;

},{"./debounce":"o1J2","./isObject":"ihtJ"}],"YsmI":[function(require,module,exports) {
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

},{}],"auMB":[function(require,module,exports) {
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;

},{}],"EzxW":[function(require,module,exports) {
var baseFindIndex = require('./_baseFindIndex'),
    baseIsNaN = require('./_baseIsNaN'),
    strictIndexOf = require('./_strictIndexOf');

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

},{"./_baseFindIndex":"InoQ","./_baseIsNaN":"YsmI","./_strictIndexOf":"auMB"}],"o0At":[function(require,module,exports) {
var baseIndexOf = require('./_baseIndexOf');

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

},{"./_baseIndexOf":"EzxW"}],"ypAf":[function(require,module,exports) {
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;

},{}],"aYeT":[function(require,module,exports) {
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;

},{}],"pVm1":[function(require,module,exports) {
var Set = require('./_Set'),
    noop = require('./noop'),
    setToArray = require('./_setToArray');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;

},{"./_Set":"dnze","./noop":"aYeT","./_setToArray":"xWx9"}],"bnZv":[function(require,module,exports) {
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    cacheHas = require('./_cacheHas'),
    createSet = require('./_createSet'),
    setToArray = require('./_setToArray');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;

},{"./_SetCache":"Ne64","./_arrayIncludes":"o0At","./_arrayIncludesWith":"ypAf","./_cacheHas":"qOwK","./_createSet":"pVm1","./_setToArray":"xWx9"}],"HuTM":[function(require,module,exports) {
var baseFlatten = require('./_baseFlatten'),
    baseRest = require('./_baseRest'),
    baseUniq = require('./_baseUniq'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = baseRest(function(arrays) {
  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
});

module.exports = union;

},{"./_baseFlatten":"D1Ru","./_baseRest":"qSD8","./_baseUniq":"bnZv","./isArrayLikeObject":"APpx"}],"Wdkl":[function(require,module,exports) {
"use strict";
/**
 * lodashMini.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Import and re-export of part of the lodash module. This helps reduce bundle size.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var assign = require("lodash/assign");
exports.assign = assign;
var clone = require("lodash/clone");
exports.clone = clone;
var cloneDeep = require("lodash/cloneDeep");
exports.cloneDeep = cloneDeep;
var defer = require("lodash/defer");
exports.defer = defer;
var each = require("lodash/each");
exports.each = each;
var endsWith = require("lodash/endsWith");
exports.endsWith = endsWith;
var extend = require("lodash/extend");
exports.extend = extend;
var filter = require("lodash/filter");
exports.filter = filter;
var findIndex = require("lodash/findIndex");
exports.findIndex = findIndex;
var findLast = require("lodash/findLast");
exports.findLast = findLast;
var flatten = require("lodash/flatten");
exports.flatten = flatten;
var get = require("lodash/get");
exports.get = get;
var isEmpty = require("lodash/isEmpty");
exports.isEmpty = isEmpty;
var isEqual = require("lodash/isEqual");
exports.isEqual = isEqual;
var isNumber = require("lodash/isNumber");
exports.isNumber = isNumber;
var isObject = require("lodash/isObject");
exports.isObject = isObject;
var isUndefined = require("lodash/isUndefined");
exports.isUndefined = isUndefined;
var kebabCase = require("lodash/kebabCase");
exports.kebabCase = kebabCase;
var keys = require("lodash/keys");
exports.keys = keys;
var map = require("lodash/map");
exports.map = map;
var mapValues = require("lodash/mapValues");
exports.mapValues = mapValues;
var max = require("lodash/max");
exports.max = max;
var memoize = require("lodash/memoize");
exports.memoize = memoize;
var merge = require("lodash/merge");
exports.merge = merge;
var omit = require("lodash/omit");
exports.omit = omit;
var remove = require("lodash/remove");
exports.remove = remove;
var throttle = require("lodash/throttle");
exports.throttle = throttle;
var union = require("lodash/union");
exports.union = union;

},{"lodash/assign":"Cikd","lodash/clone":"j2CJ","lodash/cloneDeep":"Vj2w","lodash/defer":"PTML","lodash/each":"NHs0","lodash/endsWith":"cHnJ","lodash/extend":"bSEl","lodash/filter":"Knrx","lodash/findIndex":"KVQO","lodash/findLast":"WY9b","lodash/flatten":"L0W7","lodash/get":"BBFX","lodash/isEmpty":"IhHo","lodash/isEqual":"rONH","lodash/isNumber":"Pq7J","lodash/isObject":"ihtJ","lodash/isUndefined":"HHCo","lodash/kebabCase":"Cekz","lodash/keys":"svoD","lodash/map":"HR4v","lodash/mapValues":"zehy","lodash/max":"AtzK","lodash/memoize":"wFGW","lodash/merge":"zuSO","lodash/omit":"tvjj","lodash/remove":"HcDb","lodash/throttle":"xX8v","lodash/union":"HuTM"}],"Ep0V":[function(require,module,exports) {
"use strict";
/**
 * MouseResponder.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Handles tracking of mouse movements.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("./../utils/lodashMini");
var _compareDOMOrder = function (a, b) {
    if (a.target.compareDocumentPosition(b.target) & Node.DOCUMENT_POSITION_PRECEDING) {
        return 1;
    }
    else {
        return -1;
    }
};
var MouseResponder = /** @class */ (function () {
    function MouseResponder() {
    }
    MouseResponder.setModalIsDisplayed = function (isDisplayed) {
        MouseResponder._isModalDisplayed = isDisplayed;
    };
    MouseResponder.create = function (config) {
        MouseResponder._initializeEventHandlers();
        MouseResponder._responders = MouseResponder._responders || [];
        var responder = {
            id: config.id,
            target: config.target,
            shouldBecomeFirstResponder: function (event, gestureState) {
                if (MouseResponder._isModalDisplayed && config.disableWhenModal) {
                    return false;
                }
                if (!config.shouldBecomeFirstResponder) {
                    return false;
                }
                return config.shouldBecomeFirstResponder(event, gestureState);
            },
            onMove: function (event, gestureState) {
                if (!config.onMove) {
                    return;
                }
                config.onMove(event, gestureState);
            },
            onTerminate: function (event, gestureState) {
                if (!config.onTerminate) {
                    return;
                }
                config.onTerminate(event, gestureState);
            }
        };
        MouseResponder._responders.push(responder);
        return {
            dispose: function () {
                _.remove(MouseResponder._responders, function (r) { return r.id === responder.id; });
                if (MouseResponder._responders.length === 0) {
                    MouseResponder._removeEventHandlers();
                }
            }
        };
    };
    MouseResponder._initializeEventHandlers = function () {
        if (MouseResponder._initialized) {
            return;
        }
        window.addEventListener('mousedown', MouseResponder._onMouseDown);
        window.addEventListener('mousemove', MouseResponder._onMouseMove);
        window.addEventListener('mouseup', MouseResponder._onMouseUp);
        MouseResponder._initialized = true;
    };
    MouseResponder._removeEventHandlers = function () {
        if (!MouseResponder._initialized) {
            return;
        }
        window.removeEventListener('mousedown', MouseResponder._onMouseDown);
        window.removeEventListener('mousemove', MouseResponder._onMouseMove);
        window.removeEventListener('mouseup', MouseResponder._onMouseUp);
        MouseResponder._initialized = false;
    };
    MouseResponder._currentResponder = null;
    MouseResponder._pendingGestureState = null;
    MouseResponder._initialized = false;
    MouseResponder._isModalDisplayed = false;
    MouseResponder._onMouseDown = function (event) {
        // We need to skip new gesture starts when there is already on in progress
        if (MouseResponder._currentResponder) {
            event.preventDefault();
            event.stopPropagation();
            return;
        }
        MouseResponder._pendingGestureState = {
            initialClientX: event.clientX,
            initialClientY: event.clientY,
            initialPageX: event.pageX,
            initialPageY: event.pageY,
            clientX: event.clientX,
            clientY: event.clientY,
            pageX: event.pageX,
            pageY: event.pageY,
            velocityX: 0,
            velocityY: 0,
            timeStamp: Date.now(),
            isComplete: false,
            isTouch: false
        };
        // We must sort them properly to be consistent with native PanResponder picks it's first responders
        // In native there is no z-index and PanResponder picks always the last registered element.
        // in case of native, that's last element in "DOM"
        MouseResponder._responders.sort(_compareDOMOrder);
        // We need to pick a responder that will handle this GestureView
        var firstResponder = _.findLast(MouseResponder._responders, function (responder) {
            return responder.shouldBecomeFirstResponder(event, MouseResponder._pendingGestureState);
        });
        if (firstResponder) {
            MouseResponder._currentResponder = firstResponder;
        }
    };
    MouseResponder._onMouseMove = function (event) {
        if (MouseResponder._currentResponder && MouseResponder._pendingGestureState) {
            var _a = MouseResponder._calcVelocity(event, MouseResponder._pendingGestureState), velocityX = _a.velocityX, velocityY = _a.velocityY;
            MouseResponder._pendingGestureState = _.merge({}, MouseResponder._pendingGestureState, {
                clientX: event.clientX,
                clientY: event.clientY,
                pageX: event.pageX,
                pageY: event.pageY,
                velocityX: velocityX,
                velocityY: velocityY,
                isComplete: false
            });
            if (event.buttons === 0) {
                MouseResponder._onMouseUp(event);
            }
            else {
                MouseResponder._currentResponder.onMove(event, MouseResponder._pendingGestureState);
            }
        }
    };
    MouseResponder._onMouseUp = function (event) {
        // We check whether there is still some buttom pressed
        // in case there are still some buttons left,
        // we don't stop terminate the gesture.
        if (event.buttons !== 0) {
            event.preventDefault();
            event.stopPropagation();
            return;
        }
        if (MouseResponder._currentResponder && MouseResponder._pendingGestureState) {
            var _a = MouseResponder._calcVelocity(event, MouseResponder._pendingGestureState), velocityX = _a.velocityX, velocityY = _a.velocityY;
            MouseResponder._pendingGestureState = _.merge({}, MouseResponder._pendingGestureState, {
                clientX: event.clientX,
                clientY: event.clientY,
                pageX: event.pageX,
                pageY: event.pageY,
                velocityX: velocityX,
                velocityY: velocityY,
                isComplete: true
            });
            MouseResponder._currentResponder.onTerminate(event, MouseResponder._pendingGestureState);
            MouseResponder._currentResponder = null;
            MouseResponder._pendingGestureState = null;
        }
    };
    MouseResponder._calcVelocity = function (e, gestureState) {
        var time = Date.now() - gestureState.timeStamp;
        var velocityX = (e.clientX - gestureState.initialClientX) / time;
        var velocityY = (e.clientY - gestureState.initialClientY) / time;
        return {
            velocityX: velocityX,
            velocityY: velocityY
        };
    };
    return MouseResponder;
}());
exports.default = MouseResponder;

},{"./../utils/lodashMini":"Wdkl"}],"kgel":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"xON7":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"./lib/ReactPropTypesSecret":"kgel"}],"Iix9":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if ("production" !== 'production') {
  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod


  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}
},{"./factoryWithThrowingShims":"xON7"}],"XSwJ":[function(require,module,exports) {
"use strict";
/**
 * PopupContainerViewBase.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Common parent of all components rendered into a popup. Calls onShow and onHide
 * callbacks when the popup is hidden (i.e. "closed" but still rendered as hidden)
 * and re-shown. Abstract class to be overriden per platform.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
// Width of the "alley" around popups so they don't get too close to the boundary of the screen boundary.
var ALLEY_WIDTH = 2;
// How close to the edge of the popup should we allow the anchor offset to get before
// attempting a different position?
var MIN_ANCHOR_OFFSET = 16;
// Undefined response means to dismiss the popup
function recalcPositionFromLayoutData(windowDims, anchorRect, popupRect, positionPriorities, useInnerPositioning) {
    // If the anchor has disappeared, dismiss the popup.
    if (!(anchorRect.width > 0 && anchorRect.height > 0)) {
        return undefined;
    }
    // If the anchor is no longer in the window's bounds, cancel the popup.
    if (anchorRect.left >= windowDims.width || anchorRect.right <= 0 ||
        anchorRect.bottom <= 0 || anchorRect.top >= windowDims.height) {
        return undefined;
    }
    var positionsToTry = positionPriorities;
    if (!positionsToTry || positionsToTry.length === 0) {
        positionsToTry = ['bottom', 'right', 'top', 'left'];
    }
    if (positionsToTry.length === 1 && positionsToTry[0] === 'context') {
        // Context only works with exact matches, so fall back to walking around the compass if it doesn't fit exactly.
        positionsToTry.push('bottom', 'right', 'top', 'left');
    }
    if (useInnerPositioning) {
        // If the popup is meant to be shown inside the anchor we need to recalculate
        // the position differently.
        return recalcInnerPosition(anchorRect, positionsToTry[0], popupRect.width, popupRect.height);
    }
    // Start by assuming that we'll be unconstrained.
    var result = {
        popupX: 0,
        popupY: 0,
        anchorOffset: 0,
        anchorPosition: 'top',
        constrainedPopupWidth: popupRect.width,
        constrainedPopupHeight: popupRect.height
    };
    var foundPerfectFit = false;
    var foundPartialFit = false;
    positionsToTry.forEach(function (pos) {
        if (!foundPerfectFit) {
            var absX = 0;
            var absY = 0;
            var anchorOffset = 0;
            var constrainedWidth = 0;
            var constrainedHeight = 0;
            switch (pos) {
                case 'bottom':
                    absY = anchorRect.bottom;
                    absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;
                    anchorOffset = popupRect.width / 2;
                    if (popupRect.height <= windowDims.height - ALLEY_WIDTH - anchorRect.bottom) {
                        foundPerfectFit = true;
                    }
                    else if (!foundPartialFit) {
                        constrainedHeight = windowDims.height - ALLEY_WIDTH - anchorRect.bottom;
                    }
                    break;
                case 'top':
                    absY = anchorRect.top - popupRect.height;
                    absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;
                    anchorOffset = popupRect.width / 2;
                    if (popupRect.height <= anchorRect.top - ALLEY_WIDTH) {
                        foundPerfectFit = true;
                    }
                    else if (!foundPartialFit) {
                        constrainedHeight = anchorRect.top - ALLEY_WIDTH;
                    }
                    break;
                case 'right':
                    absX = anchorRect.right;
                    absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;
                    anchorOffset = popupRect.height / 2;
                    if (popupRect.width <= windowDims.width - ALLEY_WIDTH - anchorRect.right) {
                        foundPerfectFit = true;
                    }
                    else if (!foundPartialFit) {
                        constrainedWidth = windowDims.width - ALLEY_WIDTH - anchorRect.right;
                    }
                    break;
                case 'left':
                    absX = anchorRect.left - popupRect.width;
                    absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;
                    anchorOffset = popupRect.height / 2;
                    if (popupRect.width <= anchorRect.left - ALLEY_WIDTH) {
                        foundPerfectFit = true;
                    }
                    else if (!foundPartialFit) {
                        constrainedWidth = anchorRect.left - ALLEY_WIDTH;
                    }
                    break;
                case 'context':
                    // Search for perfect fits on the LR, LL, TR, and TL corners.
                    var fitsAbove = anchorRect.top - popupRect.height >= ALLEY_WIDTH;
                    var fitsBelow = anchorRect.top + anchorRect.height + popupRect.height <= windowDims.height - ALLEY_WIDTH;
                    var fitsLeft = anchorRect.left - popupRect.width >= ALLEY_WIDTH;
                    var fitsRight = anchorRect.left + anchorRect.width + popupRect.width <= windowDims.width - ALLEY_WIDTH;
                    if (fitsBelow && fitsRight) {
                        foundPerfectFit = true;
                        absX = anchorRect.left + anchorRect.width;
                        absY = anchorRect.top + anchorRect.height;
                    }
                    else if (fitsBelow && fitsLeft) {
                        foundPerfectFit = true;
                        absX = anchorRect.left - popupRect.width;
                        absY = anchorRect.top + anchorRect.height;
                    }
                    else if (fitsAbove && fitsRight) {
                        foundPerfectFit = true;
                        absX = anchorRect.left + anchorRect.width;
                        absY = anchorRect.top - popupRect.height;
                    }
                    else if (fitsAbove && fitsLeft) {
                        foundPerfectFit = true;
                        absX = anchorRect.left - popupRect.width;
                        absY = anchorRect.top - popupRect.height;
                    }
                    break;
            }
            var effectiveWidth = constrainedWidth || popupRect.width;
            var effectiveHeight = constrainedHeight || popupRect.height;
            // Make sure we're not hanging off the bounds of the window.
            if (absX < ALLEY_WIDTH) {
                if (pos === 'top' || pos === 'bottom') {
                    anchorOffset -= ALLEY_WIDTH - absX;
                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {
                        foundPerfectFit = false;
                    }
                }
                absX = ALLEY_WIDTH;
            }
            else if (absX > windowDims.width - ALLEY_WIDTH - effectiveWidth) {
                if (pos === 'top' || pos === 'bottom') {
                    anchorOffset -= (windowDims.width - ALLEY_WIDTH - effectiveWidth - absX);
                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {
                        foundPerfectFit = false;
                    }
                }
                absX = windowDims.width - ALLEY_WIDTH - effectiveWidth;
            }
            if (absY < ALLEY_WIDTH) {
                if (pos === 'right' || pos === 'left') {
                    anchorOffset += absY - ALLEY_WIDTH;
                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {
                        foundPerfectFit = false;
                    }
                }
                absY = ALLEY_WIDTH;
            }
            else if (absY > windowDims.height - ALLEY_WIDTH - effectiveHeight) {
                if (pos === 'right' || pos === 'left') {
                    anchorOffset -= (windowDims.height - ALLEY_WIDTH - effectiveHeight - absY);
                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {
                        foundPerfectFit = false;
                    }
                }
                absY = windowDims.height - ALLEY_WIDTH - effectiveHeight;
            }
            if (foundPerfectFit || effectiveHeight > 0 || effectiveWidth > 0) {
                result.popupY = absY;
                result.popupX = absX;
                result.anchorOffset = anchorOffset;
                result.anchorPosition = pos;
                result.constrainedPopupWidth = effectiveWidth;
                result.constrainedPopupHeight = effectiveHeight;
                foundPartialFit = true;
            }
        }
    });
    return result;
}
exports.recalcPositionFromLayoutData = recalcPositionFromLayoutData;
function recalcInnerPosition(anchorRect, positionToUse, popupWidth, popupHeight) {
    // For inner popups we only accept the first position of the priorities since there
    // should always be room for the bubble.
    var popupX = 0;
    var popupY = 0;
    var anchorOffset = 0;
    switch (positionToUse) {
        case 'top':
            popupY = anchorRect.top + anchorRect.height - popupHeight;
            popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;
            anchorOffset = popupWidth / 2;
            break;
        case 'bottom':
            popupY = anchorRect.top + popupHeight;
            popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;
            anchorOffset = popupWidth / 2;
            break;
        case 'left':
            popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;
            popupX = anchorRect.left + anchorRect.width - popupWidth;
            anchorOffset = popupHeight / 2;
            break;
        case 'right':
            popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;
            popupX = anchorRect.left;
            anchorOffset = popupHeight / 2;
            break;
        case 'context':
            throw new Error('Context popup mode not allowed with inner positioning');
    }
    var result = {
        popupX: popupX,
        popupY: popupY,
        anchorOffset: anchorOffset,
        anchorPosition: positionToUse,
        constrainedPopupWidth: popupWidth,
        constrainedPopupHeight: popupHeight
    };
    return result;
}
var PopupContainerViewBase = /** @class */ (function (_super) {
    __extends(PopupContainerViewBase, _super);
    function PopupContainerViewBase(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._popupComponentStack = [];
        return _this;
    }
    PopupContainerViewBase.prototype.getChildContext = function () {
        return {
            focusManager: this.context.focusManager,
            popupContainer: this
        };
    };
    PopupContainerViewBase.prototype.registerPopupComponent = function (onShow, onHide) {
        var component = {
            onShow: onShow,
            onHide: onHide
        };
        this._popupComponentStack.push(component);
        return component;
    };
    PopupContainerViewBase.prototype.unregisterPopupComponent = function (component) {
        this._popupComponentStack = this._popupComponentStack.filter(function (c) { return c !== component; });
    };
    PopupContainerViewBase.prototype.isHidden = function () {
        return !!this.props.hidden;
    };
    PopupContainerViewBase.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (prevProps.hidden && !this.props.hidden) {
            // call onShow on all registered components (iterate front to back)
            for (var i = 0; i < this._popupComponentStack.length; i++) {
                this._popupComponentStack[i].onShow();
            }
        }
        if (!prevProps.hidden && this.props.hidden) {
            // call onHide on all registered components (iterate back to front)
            for (var i = this._popupComponentStack.length - 1; i >= 0; i--) {
                this._popupComponentStack[i].onHide();
            }
        }
    };
    PopupContainerViewBase.contextTypes = {
        focusManager: PropTypes.object
    };
    PopupContainerViewBase.childContextTypes = {
        focusManager: PropTypes.object,
        popupContainer: PropTypes.object
    };
    return PopupContainerViewBase;
}(React.Component));
exports.PopupContainerViewBase = PopupContainerViewBase;
exports.default = PopupContainerViewBase;

},{"prop-types":"Iix9","react":"HdMw"}],"Mctp":[function(require,module,exports) {
"use strict";
/**
 * Accessibility.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Common wrapper for accessibility helper exposed from ReactXP.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subscribableevent_1 = require("subscribableevent");
var RX = require("../common/Interfaces");
var Accessibility = /** @class */ (function (_super) {
    __extends(Accessibility, _super);
    function Accessibility() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.screenReaderChangedEvent = new subscribableevent_1.default();
        _this.newAnnouncementReadyEvent = new subscribableevent_1.default();
        return _this;
    }
    Accessibility.prototype.isHighContrastEnabled = function () {
        return false;
    };
    Accessibility.prototype.announceForAccessibility = function (announcement) {
        this.newAnnouncementReadyEvent.fire(announcement);
    };
    return Accessibility;
}(RX.Accessibility));
exports.Accessibility = Accessibility;
exports.default = Accessibility;

},{"subscribableevent":"N3Qs","../common/Interfaces":"rFlL"}],"eZek":[function(require,module,exports) {
"use strict";
/**
 * Accessibility.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web wrapper for subscribing or querying the current state of the
 * screen reader.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Accessibility_1 = require("../common/Accessibility");
var Accessibility = /** @class */ (function (_super) {
    __extends(Accessibility, _super);
    function Accessibility() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Calling this API on web has no effect.
    Accessibility.prototype.isScreenReaderEnabled = function () {
        return false;
    };
    return Accessibility;
}(Accessibility_1.Accessibility));
exports.Accessibility = Accessibility;
exports.default = new Accessibility();

},{"../common/Accessibility":"Mctp"}],"DIvC":[function(require,module,exports) {
"use strict";
/**
 * AccessibilityUtil.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Common accessibility interface for platform-specific accessibility utilities.
 */
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var Interfaces_1 = require("../common/Interfaces");
exports.ImportantForAccessibilityMap = (_a = {},
    _a[Interfaces_1.Types.ImportantForAccessibility.Auto] = 'auto',
    _a[Interfaces_1.Types.ImportantForAccessibility.Yes] = 'yes',
    _a[Interfaces_1.Types.ImportantForAccessibility.No] = 'no',
    _a[Interfaces_1.Types.ImportantForAccessibility.NoHideDescendants] = 'no-hide-descendants',
    _a);
// Platform specific helpers exposed through Native-Common AccessibilityUtil.
var AccessibilityPlatformUtil = /** @class */ (function () {
    function AccessibilityPlatformUtil() {
    }
    return AccessibilityPlatformUtil;
}());
exports.AccessibilityPlatformUtil = AccessibilityPlatformUtil;
var AccessibilityUtil = /** @class */ (function () {
    function AccessibilityUtil() {
    }
    AccessibilityUtil.prototype.isHidden = function (importantForAccessibility) {
        // aria-hidden is false by default, returning true or undefined, so that it doesn't pollute the DOM.
        if (importantForAccessibility) {
            var importantForAccessibilityString = this.importantForAccessibilityToString(importantForAccessibility);
            if (importantForAccessibilityString === exports.ImportantForAccessibilityMap[Interfaces_1.Types.ImportantForAccessibility.NoHideDescendants]) {
                return true;
            }
        }
        return undefined;
    };
    AccessibilityUtil.prototype.importantForAccessibilityToString = function (importantForAccessibility, defaultImportantForAccessibility) {
        importantForAccessibility = importantForAccessibility || defaultImportantForAccessibility;
        if (importantForAccessibility && exports.ImportantForAccessibilityMap[importantForAccessibility]) {
            return exports.ImportantForAccessibilityMap[importantForAccessibility];
        }
        return undefined;
    };
    return AccessibilityUtil;
}());
exports.AccessibilityUtil = AccessibilityUtil;

},{"../common/Interfaces":"rFlL"}],"w171":[function(require,module,exports) {
"use strict";
/**
 * AccessibilityUtil.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of accessiblity functions for cross-platform
 * ReactXP framework.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
var AccessibilityUtil_1 = require("../common/AccessibilityUtil");
var Interfaces_1 = require("../common/Interfaces");
var _ = require("./utils/lodashMini");
// Map of accessibility trait to an aria role attribute.
// What's a role attribute? https://www.w3.org/wiki/PF/XTech/HTML5/RoleAttribute
var roleMap = (_a = {},
    _a[Interfaces_1.Types.AccessibilityTrait.None] = 'presentation',
    _a[Interfaces_1.Types.AccessibilityTrait.Button] = 'button',
    _a[Interfaces_1.Types.AccessibilityTrait.Link] = 'link',
    _a[Interfaces_1.Types.AccessibilityTrait.Header] = 'heading',
    _a[Interfaces_1.Types.AccessibilityTrait.Search] = 'search',
    _a[Interfaces_1.Types.AccessibilityTrait.Image] = 'img',
    _a[Interfaces_1.Types.AccessibilityTrait.Summary] = 'region',
    _a[Interfaces_1.Types.AccessibilityTrait.Adjustable] = 'slider',
    _a[Interfaces_1.Types.AccessibilityTrait.Menu] = 'menu',
    _a[Interfaces_1.Types.AccessibilityTrait.MenuItem] = 'menuitem',
    _a[Interfaces_1.Types.AccessibilityTrait.MenuBar] = 'menubar',
    _a[Interfaces_1.Types.AccessibilityTrait.Tab] = 'tab',
    _a[Interfaces_1.Types.AccessibilityTrait.TabList] = 'tablist',
    _a[Interfaces_1.Types.AccessibilityTrait.List] = 'list',
    _a[Interfaces_1.Types.AccessibilityTrait.ListItem] = 'listitem',
    _a[Interfaces_1.Types.AccessibilityTrait.ListBox] = 'listbox',
    _a[Interfaces_1.Types.AccessibilityTrait.Group] = 'group',
    _a[Interfaces_1.Types.AccessibilityTrait.CheckBox] = 'checkbox',
    _a[Interfaces_1.Types.AccessibilityTrait.ComboBox] = 'combobox',
    _a[Interfaces_1.Types.AccessibilityTrait.Log] = 'log',
    _a[Interfaces_1.Types.AccessibilityTrait.Status] = 'status',
    _a[Interfaces_1.Types.AccessibilityTrait.Dialog] = 'dialog',
    _a[Interfaces_1.Types.AccessibilityTrait.Switch] = 'switch',
    _a);
// Map of accesssibility live region to an aria-live property.
var liveRegionMap = (_b = {},
    _b[Interfaces_1.Types.AccessibilityLiveRegion.None] = 'off',
    _b[Interfaces_1.Types.AccessibilityLiveRegion.Assertive] = 'assertive',
    _b[Interfaces_1.Types.AccessibilityLiveRegion.Polite] = 'polite',
    _b);
var AccessibilityUtil = /** @class */ (function (_super) {
    __extends(AccessibilityUtil, _super);
    function AccessibilityUtil() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Web equivalent value for aria-live property.
    AccessibilityUtil.prototype.accessibilityLiveRegionToString = function (liveRegion) {
        if (liveRegion) {
            return liveRegionMap[liveRegion];
        }
        return undefined;
    };
    // Web equivalent value for role property.
    // NOTE: Web only supports a single aria-role on a component.
    AccessibilityUtil.prototype.accessibilityTraitToString = function (traits, defaultTrait) {
        // Combine & remove duplicate traits.
        var combinedTraits = defaultTrait ? [defaultTrait] : [];
        if (traits) {
            combinedTraits = _.union(combinedTraits, Array.isArray(traits) ? traits : [traits]);
        }
        // Max enum value in this array of traits is role for web. Return corresponding
        // role string from roleMap.
        return combinedTraits.length > 0 ?
            roleMap[_.max(_.filter(combinedTraits, function (t) { return roleMap.hasOwnProperty(t); }))]
            : undefined;
    };
    AccessibilityUtil.prototype.accessibilityTraitToAriaSelected = function (traits) {
        // Walk through each trait and check if there's a selected trait. Return if one is found.
        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Tab) !== -1) {
            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Selected) !== -1;
        }
        // Here we are returning undefined if the above condition is not met
        // as we dont want to pollute the dom with "aria-selected = false" for every falsy condition
        return undefined;
    };
    AccessibilityUtil.prototype.accessibilityTraitToAriaChecked = function (traits) {
        // Walk through each trait and check if there's a checked trait. Return if one is found.
        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.CheckBox) !== -1) {
            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Checked) !== -1;
        }
        // Here we are returning undefined if the above condition is not met
        // as we dont want to pollute the dom with "aria-checked = false" for every falsy condition
        return undefined;
    };
    AccessibilityUtil.prototype.accessibilityTraitToAriaHasPopup = function (traits) {
        // Walk through each trait and check if there's a hasPopup trait. Return if one is found.
        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1) {
            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1;
        }
        // Here we are returning undefined if the above condition is not met
        // as we dont want to pollute the dom with "aria-checked = false" for every falsy condition
        return undefined;
    };
    return AccessibilityUtil;
}(AccessibilityUtil_1.AccessibilityUtil));
exports.AccessibilityUtil = AccessibilityUtil;
exports.default = new AccessibilityUtil();

},{"../common/AccessibilityUtil":"DIvC","../common/Interfaces":"rFlL","./utils/lodashMini":"Wdkl"}],"fAPr":[function(require,module,exports) {
/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.compact([0, 1, false, 2, '', 3]);
 * // => [1, 2, 3]
 */
function compact(array) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = compact;

},{}],"WNJ2":[function(require,module,exports) {
/**
 * This function is like `baseIndexOf` except that it accepts a comparator.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseIndexOfWith;

},{}],"KlqX":[function(require,module,exports) {
var arrayMap = require('./_arrayMap'),
    baseIndexOf = require('./_baseIndexOf'),
    baseIndexOfWith = require('./_baseIndexOfWith'),
    baseUnary = require('./_baseUnary'),
    copyArray = require('./_copyArray');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * The base implementation of `_.pullAllBy` without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 */
function basePullAll(array, values, iteratee, comparator) {
  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
      index = -1,
      length = values.length,
      seen = array;

  if (array === values) {
    values = copyArray(values);
  }
  if (iteratee) {
    seen = arrayMap(array, baseUnary(iteratee));
  }
  while (++index < length) {
    var fromIndex = 0,
        value = values[index],
        computed = iteratee ? iteratee(value) : value;

    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice.call(seen, fromIndex, 1);
      }
      splice.call(array, fromIndex, 1);
    }
  }
  return array;
}

module.exports = basePullAll;

},{"./_arrayMap":"oCpU","./_baseIndexOf":"EzxW","./_baseIndexOfWith":"WNJ2","./_baseUnary":"kFVy","./_copyArray":"nApe"}],"rPn5":[function(require,module,exports) {
var basePullAll = require('./_basePullAll');

/**
 * This method is like `_.pull` except that it accepts an array of values to remove.
 *
 * **Note:** Unlike `_.difference`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pullAll(array, ['a', 'c']);
 * console.log(array);
 * // => ['b', 'b']
 */
function pullAll(array, values) {
  return (array && array.length && values && values.length)
    ? basePullAll(array, values)
    : array;
}

module.exports = pullAll;

},{"./_basePullAll":"KlqX"}],"hFCN":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    pullAll = require('./pullAll');

/**
 * Removes all given values from `array` using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
 * to remove elements from an array by predicate.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...*} [values] The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pull(array, 'a', 'c');
 * console.log(array);
 * // => ['b', 'b']
 */
var pull = baseRest(pullAll);

module.exports = pull;

},{"./_baseRest":"qSD8","./pullAll":"rPn5"}],"yPEt":[function(require,module,exports) {
/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;

},{}],"ZrBO":[function(require,module,exports) {
var isSymbol = require('./isSymbol');

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;

},{"./isSymbol":"DFEd"}],"BNXQ":[function(require,module,exports) {
var compareAscending = require('./_compareAscending');

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;

},{"./_compareAscending":"ZrBO"}],"lFQu":[function(require,module,exports) {
var arrayMap = require('./_arrayMap'),
    baseGet = require('./_baseGet'),
    baseIteratee = require('./_baseIteratee'),
    baseMap = require('./_baseMap'),
    baseSortBy = require('./_baseSortBy'),
    baseUnary = require('./_baseUnary'),
    compareMultiple = require('./_compareMultiple'),
    identity = require('./identity'),
    isArray = require('./isArray');

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap(iteratees, function(iteratee) {
      if (isArray(iteratee)) {
        return function(value) {
          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
        }
      }
      return iteratee;
    });
  } else {
    iteratees = [identity];
  }

  var index = -1;
  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;

},{"./_arrayMap":"oCpU","./_baseGet":"Ws9z","./_baseIteratee":"T11M","./_baseMap":"GTeg","./_baseSortBy":"yPEt","./_baseUnary":"kFVy","./_compareMultiple":"BNXQ","./identity":"FRcP","./isArray":"F0hp"}],"oKSM":[function(require,module,exports) {
var baseFlatten = require('./_baseFlatten'),
    baseOrderBy = require('./_baseOrderBy'),
    baseRest = require('./_baseRest'),
    isIterateeCall = require('./_isIterateeCall');

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;

},{"./_baseFlatten":"D1Ru","./_baseOrderBy":"lFQu","./_baseRest":"qSD8","./_isIterateeCall":"zT1p"}],"joz3":[function(require,module,exports) {
"use strict";
/**
 * lodashMini.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Imports a subset of lodash library needed for ReactXP's implementation.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var clone = require("lodash/clone");
exports.clone = clone;
var compact = require("lodash/compact");
exports.compact = compact;
var filter = require("lodash/filter");
exports.filter = filter;
var isEqual = require("lodash/isEqual");
exports.isEqual = isEqual;
var pull = require("lodash/pull");
exports.pull = pull;
var sortBy = require("lodash/sortBy");
exports.sortBy = sortBy;

},{"lodash/clone":"j2CJ","lodash/compact":"fAPr","lodash/filter":"Knrx","lodash/isEqual":"rONH","lodash/pull":"hFCN","lodash/sortBy":"oKSM"}],"MqW9":[function(require,module,exports) {
"use strict";
/**
 * StyleLeakDetector.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Detects style memory-leaks in react-native.
 * To fix warning you could:
 *  - use not cached styles by providing cacheStyle == false to Style.create... method
 *  - for colors you could use StylesRegestry component
 *  - for rx component you could temporary disable validation by calling pause method and restore by calling resume,
 *    but please make sure that it doesn't leaks first please
 */
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var lodashMini_1 = require("./lodashMini");
var StyleLeakDetector = /** @class */ (function () {
    function StyleLeakDetector() {
        this._fingerprintRegistry = {};
    }
    StyleLeakDetector.prototype._getFingerprint = function (object) {
        return JSON.stringify(this._sortAny(object));
    };
    /**
     * We need to sort objects before using JSON.stringify as otherwise objects
     * {a: 1, b: 2} and {b: 2, a: 1} would have a different fingerprints
     */
    StyleLeakDetector.prototype._sortAny = function (object) {
        if (object instanceof Array) {
            return this._sortArray(object);
        }
        else if (object instanceof Object) {
            return this._sortObject(object);
        }
        else {
            return object;
        }
    };
    StyleLeakDetector.prototype._sortObject = function (object) {
        var result = {};
        var keys = [];
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                keys.push(key);
            }
        }
        keys = lodashMini_1.sortBy(keys);
        var keysLength = keys.length;
        for (var i = 0; i < keysLength; i++) {
            var key = keys[i];
            var value = object[key];
            result[key] = this._sortAny(value);
        }
        return result;
    };
    StyleLeakDetector.prototype._sortArray = function (object) {
        var length = object.length;
        for (var i = 0; i < length; i++) {
            object[i] = this._sortAny(object[i]);
        }
        return object;
    };
    StyleLeakDetector.prototype.isDisabled = function () {
        return false;
    };
    StyleLeakDetector.prototype.detectLeaks = function (style) {
        if (AppConfig_1.default.isDevelopmentMode() && !this.isDisabled()) {
            var error = new Error();
            // we detect leaks on chrome and firefox only, other browser have now this member
            var stack = error.stack;
            if (stack) {
                var styleAllocationId = stack.toString() + this._getFingerprint(style);
                var firstAllocation = this._fingerprintRegistry[styleAllocationId];
                if (firstAllocation) {
                    console.warn('Possible style leak of: ', style, 'first allocation: ', firstAllocation);
                }
                else {
                    this._fingerprintRegistry[styleAllocationId] = stack;
                }
            }
        }
    };
    return StyleLeakDetector;
}());
exports.StyleLeakDetector = StyleLeakDetector;
exports.default = new StyleLeakDetector();

},{"./AppConfig":"IaP6","./lodashMini":"joz3"}],"FK4c":[function(require,module,exports) {
"use strict";
/**
 * Styles.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of style functions.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../common/AppConfig");
var RX = require("../common/Interfaces");
var StyleLeakDetector_1 = require("../common/StyleLeakDetector");
var _ = require("./utils/lodashMini");
var Styles = /** @class */ (function (_super) {
    __extends(Styles, _super);
    function Styles() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Use memoize to cache the result after the first call.
        _this._createDummyElement = _.memoize(function () {
            return document.createElement('testCss');
        });
        _this._getCssPropertyAliasesJsStyle = _.memoize(function () {
            var props = [
                'flex',
                'flexDirection',
                'alignItems',
                'justifyContent',
                'alignSelf',
                'alignContent',
                'transform',
                'transition',
                'animationDuration',
                'animationTimingFunction',
                'animationDirection',
                'animationDelay',
                'animationIterationCount',
                'animationName',
                'hyphens',
                'filter',
                'appRegion'
            ];
            var aliases = {};
            props.forEach(function (prop) {
                var alias = _this._getCssPropertyAlias(prop);
                if (alias && prop !== alias) {
                    aliases[prop] = alias;
                }
            });
            return aliases;
        });
        _this._cssPropertyAliasesCssStyle = memoize(function () {
            var jsStyleAliases = _this._getCssPropertyAliasesJsStyle();
            var aliases = {};
            _.each(_.keys(jsStyleAliases), function (prop) {
                aliases[prop] = _this.convertJsToCssStyle(jsStyleAliases[prop]);
            });
            return aliases;
        });
        return _this;
    }
    // Combines a set of styles - for web we need to flatten to a single object
    Styles.prototype.combine = function (ruleSet1, ruleSet2) {
        if (!ruleSet1 && !ruleSet2) {
            return undefined;
        }
        var ruleSet = ruleSet1 ? (ruleSet2 ? [ruleSet1, ruleSet2] : ruleSet1) : ruleSet2;
        if (ruleSet instanceof Array) {
            var combinedStyles = {};
            for (var i = 0; i < ruleSet.length; i++) {
                var subRuleSet = this.combine(ruleSet[i]);
                combinedStyles = _.extend(combinedStyles, subRuleSet);
            }
            // Use the React Native model for combining styles. Specific attributes
            // always override the general.
            // https://github.com/necolas/react-native-web/blob/0.10.0/docs/guides/style.md#how-styles-are-resolved
            if ((combinedStyles.marginLeft !== undefined || combinedStyles.marginRight !== undefined ||
                combinedStyles.marginTop !== undefined || combinedStyles.marginBottom !== undefined) &&
                combinedStyles.margin !== undefined) {
                if (combinedStyles.marginLeft === undefined) {
                    combinedStyles.marginLeft = combinedStyles.margin;
                }
                if (combinedStyles.marginRight === undefined) {
                    combinedStyles.marginRight = combinedStyles.margin;
                }
                if (combinedStyles.marginTop === undefined) {
                    combinedStyles.marginTop = combinedStyles.margin;
                }
                if (combinedStyles.marginBottom === undefined) {
                    combinedStyles.marginBottom = combinedStyles.margin;
                }
                delete combinedStyles.margin;
            }
            if ((combinedStyles.paddingLeft !== undefined || combinedStyles.paddingRight !== undefined ||
                combinedStyles.paddingTop !== undefined || combinedStyles.paddingBottom !== undefined) &&
                combinedStyles.padding !== undefined) {
                if (combinedStyles.paddingLeft === undefined) {
                    combinedStyles.paddingLeft = combinedStyles.padding;
                }
                if (combinedStyles.paddingRight === undefined) {
                    combinedStyles.paddingRight = combinedStyles.padding;
                }
                if (combinedStyles.paddingTop === undefined) {
                    combinedStyles.paddingTop = combinedStyles.padding;
                }
                if (combinedStyles.paddingBottom === undefined) {
                    combinedStyles.paddingBottom = combinedStyles.padding;
                }
                delete combinedStyles.padding;
            }
            if (combinedStyles.borderWidth ||
                combinedStyles.borderTopWidth || combinedStyles.borderRightWidth ||
                combinedStyles.borderBottomWidth || combinedStyles.borderLeftWidth) {
                // If the caller specified a non-zero border width
                // but no border color or style, set the defaults to
                // match those of React Native platforms.
                if (combinedStyles.borderColor === undefined) {
                    combinedStyles.borderColor = 'black';
                }
                if (combinedStyles.borderStyle === undefined) {
                    combinedStyles.borderStyle = 'solid';
                }
            }
            return combinedStyles;
        }
        return ruleSet;
    };
    // Creates opaque styles that can be used for View
    Styles.prototype.createViewStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Creates opaque styles that can be used for View
    Styles.prototype.createAnimatedViewStyle = function (ruleSet) {
        return this._adaptStyles(ruleSet, false);
    };
    // Creates opaque styles that can be used for ScrollView
    Styles.prototype.createScrollViewStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Creates opaque styles that can be used for Button
    Styles.prototype.createButtonStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Creates opaque styles that can be used for Text
    Styles.prototype.createTextStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle, true);
    };
    // Creates opaque styles that can be used for Text
    Styles.prototype.createAnimatedTextStyle = function (ruleSet) {
        return this._adaptStyles(ruleSet, false);
    };
    // Creates opaque styles that can be used for TextInput
    Styles.prototype.createTextInputStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle, true);
    };
    // Creates opaque styles that can be used for TextInput
    Styles.prototype.createAnimatedTextInputStyle = function (ruleSet) {
        return this._adaptStyles(ruleSet, false);
    };
    // Creates opaque styles that can be used for Link
    Styles.prototype.createLinkStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Creates opaque styles that can be used for Image
    Styles.prototype.createImageStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Creates opaque styles that can be used for Image
    Styles.prototype.createAnimatedImageStyle = function (ruleSet) {
        return this._adaptStyles(ruleSet, false);
    };
    // Creates opaque styles that can be used for Picker
    Styles.prototype.createPickerStyle = function (ruleSet, cacheStyle) {
        if (cacheStyle === void 0) { cacheStyle = true; }
        return this._adaptStyles(ruleSet, cacheStyle);
    };
    // Returns the name of a CSS property or its alias. Returns undefined if the property is not supported.
    Styles.prototype._getCssPropertyAlias = function (name) {
        // If we're inside unit tests, document may not be defined yet. We don't need prefixes for tests
        if (typeof document === 'undefined') {
            return undefined;
        }
        var upperName = name.charAt(0).toUpperCase() + name.slice(1);
        var propsToTest = [name, upperName];
        propsToTest = propsToTest.concat(['Webkit', 'webkit', 'Moz', 'O', 'ms'].map(function (prefix) { return prefix + upperName; }));
        var testElement = this._createDummyElement();
        var styleObj = testElement.style;
        for (var i = 0; i < propsToTest.length; i++) {
            var prop = propsToTest[i];
            if (styleObj[prop] !== undefined) {
                return prop;
            }
        }
        return undefined;
    };
    // Converts a property from JavaScript style (camel-case) to CSS style (lowercase with hyphens).
    Styles.prototype.convertJsToCssStyle = function (prop) {
        var cssString = '';
        if (prop) {
            for (var i = 0; i < prop.length; i++) {
                var lowerChar = prop[i].toLowerCase();
                if (lowerChar === prop[i]) {
                    cssString += lowerChar;
                }
                else {
                    cssString += '-' + lowerChar;
                }
            }
        }
        return cssString;
    };
    Styles.prototype.getCssPropertyAliasesCssStyle = function () {
        return this._cssPropertyAliasesCssStyle();
    };
    Styles.prototype.getParentComponentName = function (component) {
        var parentConstructor;
        var internalInstance = component._reactInternalInstance;
        if (internalInstance && internalInstance._currentElement &&
            internalInstance._currentElement._owner && internalInstance._currentElement._owner._instance) {
            parentConstructor = internalInstance._currentElement._owner._instance.constructor;
        }
        if (!parentConstructor) {
            return '';
        }
        return parentConstructor.name ? parentConstructor.name : parentConstructor;
    };
    Styles.prototype._adaptStyles = function (def, validate, isTextStyle) {
        if (isTextStyle === void 0) { isTextStyle = false; }
        if (validate) {
            StyleLeakDetector_1.default.detectLeaks(def);
        }
        // Expand composite types.
        if (def.font) {
            if (def.font.fontFamily !== undefined) {
                def.fontFamily = def.font.fontFamily;
            }
            if (def.font.fontWeight !== undefined) {
                def.fontWeight = def.font.fontWeight;
            }
            if (def.font.fontStyle !== undefined) {
                def.fontStyle = def.font.fontStyle;
            }
            delete def.font;
        }
        if (def.flex !== undefined) {
            // In development mode, see if we're going to overwrite explicit flexGrow
            // or flexShrink attributes. It's a programming error to specify these in
            // combination with flex.
            if (AppConfig_1.default.isDevelopmentMode()) {
                if (def.flexGrow !== undefined || def.flexShrink !== undefined) {
                    console.error('Conflicting rules for flex specified.');
                }
            }
            var flexValue = def.flex;
            delete def.flex;
            if (flexValue > 0) {
                // p 1 auto
                def.flexGrow = flexValue;
                def.flexShrink = 1;
            }
            else if (flexValue < 0) {
                // 0 -n auto
                def.flexGrow = 0;
                def.flexShrink = -flexValue;
            }
            else {
                // 0 0 auto
                def.flexGrow = 0;
                def.flexShrink = 0;
            }
        }
        if (def.transform) {
            var transformStrings_1 = [];
            var animatedTransforms_1 = {};
            var staticTransforms_1 = {};
            _.each(def.transform, function (t) {
                _.each(_.keys(t), function (key) {
                    // Animated transforms use Animated.Value objects rather
                    // than strings. We need to store these separately.
                    if (typeof t[key] === 'object') {
                        animatedTransforms_1[key] = t[key];
                    }
                    else {
                        var value = t[key].toString();
                        if (key.indexOf('translate') === 0) {
                            value += 'px';
                        }
                        transformStrings_1.push(key + '(' + value + ')');
                        staticTransforms_1[key] = value;
                    }
                });
            });
            delete def.transform;
            if (transformStrings_1.length > 0) {
                def.transform = transformStrings_1.join(' ');
            }
            if (_.keys(animatedTransforms_1).length > 0) {
                def.animatedTransforms = animatedTransforms_1;
                def.staticTransforms = staticTransforms_1;
            }
        }
        if (def.shadowOffset !== undefined || def.shadowRadius !== undefined || def.shadowColor !== undefined) {
            var width = 0;
            var height = 0;
            var radius = 0;
            var color = 'black';
            if (def.shadowOffset !== undefined) {
                width = def.shadowOffset.width;
                height = def.shadowOffset.height;
                delete def.shadowOffset;
            }
            if (def.shadowRadius !== undefined) {
                radius = def.shadowRadius;
                delete def.shadowRadius;
            }
            if (def.shadowColor !== undefined) {
                color = def.shadowColor;
                delete def.shadowColor;
            }
            if (isTextStyle) {
                def.textShadow = width + 'px ' + height + 'px ' + radius + 'px ' + color;
            }
            else {
                def.boxShadow = width + 'px ' + height + 'px ' + radius + 'px 0px ' + color;
            }
        }
        // CSS (and React JS) support lineHeight defined as either a multiple of the font
        // size or a pixel count. The RX.Types interface always uses a pixel count. We need to
        // convert to the string notation to make CSS happy.
        if (def.lineHeight !== undefined) {
            def.lineHeight = def.lineHeight + 'px';
        }
        // Add default border width if border style or some subset of border widths
        // were provided. Otherwise the browser will default to a two-pixel border.
        if (def.borderStyle || def.borderTopWidth || def.borderRightWidth || def.borderBottomWidth || def.borderLeftWidth) {
            if (def.borderWidth === undefined) {
                if (def.borderTopWidth === undefined) {
                    def.borderTopWidth = 0;
                }
                if (def.borderRightWidth === undefined) {
                    def.borderRightWidth = 0;
                }
                if (def.borderBottomWidth === undefined) {
                    def.borderBottomWidth = 0;
                }
                if (def.borderLeftWidth === undefined) {
                    def.borderLeftWidth = 0;
                }
            }
        }
        // CSS doesn't support vertical/horizontal margins or padding.
        if (def.marginVertical !== undefined) {
            if (def.marginTop === undefined) {
                def.marginTop = def.marginVertical;
            }
            if (def.marginBottom === undefined) {
                def.marginBottom = def.marginVertical;
            }
            delete def.marginVertical;
        }
        if (def.marginHorizontal !== undefined) {
            if (def.marginLeft === undefined) {
                def.marginLeft = def.marginHorizontal;
            }
            if (def.marginRight === undefined) {
                def.marginRight = def.marginHorizontal;
            }
            delete def.marginHorizontal;
        }
        if (def.paddingVertical !== undefined) {
            if (def.paddingTop === undefined) {
                def.paddingTop = def.paddingVertical;
            }
            if (def.paddingBottom === undefined) {
                def.paddingBottom = def.paddingVertical;
            }
            delete def.paddingVertical;
        }
        if (def.paddingHorizontal !== undefined) {
            if (def.paddingLeft === undefined) {
                def.paddingLeft = def.paddingHorizontal;
            }
            if (def.paddingRight === undefined) {
                def.paddingRight = def.paddingHorizontal;
            }
            delete def.paddingHorizontal;
        }
        // CSS doesn't support 'textDecorationLine'
        if (def.textDecorationLine !== undefined) {
            def.textDecoration = def.textDecorationLine;
            delete def.textDecorationLine;
        }
        // CSS doesn't support 'textDecorationStyle'
        if (def.textDecorationStyle !== undefined) {
            if (def.textDecoration !== undefined) {
                def.textDecoration += ' ' + def.textDecorationStyle;
            }
            else {
                def.textDecoration = def.textDecorationStyle;
            }
            delete def.textDecorationStyle;
        }
        // CSS doesn't support 'textDecorationColor'
        if (def.textDecorationColor !== undefined) {
            if (def.textDecoration !== undefined) {
                def.textDecoration += ' ' + def.textDecorationColor;
            }
            else {
                def.textDecoration = def.textDecorationColor;
            }
            delete def.textDecorationColor;
        }
        // Add common aliases if necessary.
        var jsAliases = this._getCssPropertyAliasesJsStyle();
        for (var prop in jsAliases) {
            if (def[prop] !== undefined && jsAliases[prop]) {
                def[jsAliases[prop]] = def[prop];
            }
        }
        // Add IE-specific word wrap property.
        if (def.wordBreak === 'break-word') {
            def.wordWrap = 'break-word';
        }
        return AppConfig_1.default.isDevelopmentMode() ? Object.freeze(def) : def;
    };
    return Styles;
}(RX.Styles));
exports.Styles = Styles;
function memoize(func, resolver) {
    return _.memoize(func, resolver);
}
exports.memoize = memoize;
exports.default = new Styles();

},{"../common/AppConfig":"IaP6","../common/Interfaces":"rFlL","../common/StyleLeakDetector":"MqW9","./utils/lodashMini":"Wdkl"}],"IOTu":[function(require,module,exports) {
"use strict";
/**
 * AccessibilityAnnouncer.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Implements the behavior for announcing text to screen readers, using aria-live regions.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Interfaces_1 = require("../common/Interfaces");
var Timers_1 = require("../common/utils/Timers");
var Accessibility_1 = require("./Accessibility");
var AccessibilityUtil_1 = require("./AccessibilityUtil");
var Styles_1 = require("./Styles");
var _isMac = (typeof navigator !== 'undefined') && (typeof navigator.platform === 'string') && (navigator.platform.indexOf('Mac') >= 0);
var _styles = {
    liveRegionContainer: Styles_1.default.combine({
        position: 'absolute',
        overflow: 'hidden',
        opacity: 0,
        top: -30,
        bottom: 0,
        left: 0,
        right: 0,
        height: 30,
        whiteSpace: 'pre'
    })
};
var AccessibilityAnnouncer = /** @class */ (function (_super) {
    __extends(AccessibilityAnnouncer, _super);
    function AccessibilityAnnouncer(props) {
        var _this = _super.call(this, props) || this;
        // Update announcement text.
        _this._newAnnouncementEventChangedSubscription =
            Accessibility_1.default.newAnnouncementReadyEvent.subscribe(function (announcement) {
                if (_this.state.announcementText === announcement) {
                    // If the previous announcement is the same as the current announcement
                    // we will append a ' ' to it. This ensures that the text in DOM of aria-live region changes
                    // and  will be read by screen Reader
                    announcement += ' ';
                }
                if (_isMac) {
                    // annnouncementText should never be in nested div for mac.
                    // Voice over ignores reading nested divs in aria-live container.
                    _this.setState({
                        announcementText: announcement
                    });
                }
                else {
                    // Additionally, alternate between announcement text directly under the aria-live element and
                    // nested in a div to work around issues with some readers. NVDA on Windows is known to
                    // not announce aria-live reliably without this, for example.
                    _this.setState({
                        announcementText: announcement,
                        announcementTextInNestedDiv: !_this.state.announcementTextInNestedDiv
                    });
                }
            });
        _this.state = _this._getInitialState();
        return _this;
    }
    AccessibilityAnnouncer.prototype._getInitialState = function () {
        return {
            announcementText: '',
            announcementTextInNestedDiv: false
        };
    };
    AccessibilityAnnouncer.prototype.componentDidUpdate = function (prevProps, prevState) {
        // When a new announcement text is set in the live region, start a timer to clear the text from the div so that it can't be focused
        // using a screen reader.
        if (prevState.announcementText !== this.state.announcementText && this.state.announcementText) {
            this._startClearAnnouncementTimer();
        }
    };
    AccessibilityAnnouncer.prototype.componentWillUnmount = function () {
        if (this._newAnnouncementEventChangedSubscription) {
            this._newAnnouncementEventChangedSubscription.unsubscribe();
            this._newAnnouncementEventChangedSubscription = undefined;
        }
    };
    AccessibilityAnnouncer.prototype.render = function () {
        var announcement = this.state.announcementTextInNestedDiv ?
            (React.createElement("div", null,
                " ",
                this.state.announcementText,
                " ")) :
            this.state.announcementText;
        return (React.createElement("div", { style: _styles.liveRegionContainer, "aria-live": AccessibilityUtil_1.default.accessibilityLiveRegionToString(Interfaces_1.Types.AccessibilityLiveRegion.Assertive), "aria-atomic": 'true', "aria-relevant": 'additions text' }, announcement));
    };
    AccessibilityAnnouncer.prototype._cancelClearAnnouncementTimer = function () {
        if (this._clearAnnouncementTimer) {
            Timers_1.default.clearTimeout(this._clearAnnouncementTimer);
            this._clearAnnouncementTimer = undefined;
        }
    };
    AccessibilityAnnouncer.prototype._startClearAnnouncementTimer = function () {
        var _this = this;
        this._cancelClearAnnouncementTimer();
        this._clearAnnouncementTimer = Timers_1.default.setTimeout(function () {
            _this.setState({
                announcementText: ''
            });
        }, 2000);
    };
    return AccessibilityAnnouncer;
}(React.Component));
exports.AccessibilityAnnouncer = AccessibilityAnnouncer;
exports.default = AccessibilityAnnouncer;

},{"react":"HdMw","../common/Interfaces":"rFlL","../common/utils/Timers":"tBdH","./Accessibility":"eZek","./AccessibilityUtil":"w171","./Styles":"FK4c"}],"HkPx":[function(require,module,exports) {
"use strict";
/**
 * FocusManager.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Manages focusable elements for better keyboard navigation.
 */
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:no-invalid-this
var PropTypes = require("prop-types");
var AppConfig_1 = require("../../common/AppConfig");
var Interfaces_1 = require("../../common/Interfaces");
var Timers_1 = require("./Timers");
var _lastComponentId = 0;
var RestrictFocusType;
(function (RestrictFocusType) {
    RestrictFocusType[RestrictFocusType["Unrestricted"] = 0] = "Unrestricted";
    // When restrictFocusWithin=Restricted, the focus will not go outside of this View
    // when you're using Tab navigation.
    RestrictFocusType[RestrictFocusType["Restricted"] = 1] = "Restricted";
    // The same as Restricted, but will also focus first focusable component inside
    // this View when UserInterface.isNavigatingWithKeyboard() is true, to save a Tab
    // press for the cases the user is tabbing already.
    RestrictFocusType[RestrictFocusType["RestrictedFocusFirst"] = 2] = "RestrictedFocusFirst";
})(RestrictFocusType = exports.RestrictFocusType || (exports.RestrictFocusType = {}));
var FocusManager = /** @class */ (function () {
    function FocusManager(parent) {
        this._isFocusLimited = Interfaces_1.Types.LimitFocusType.Unlimited;
        this._currentRestrictType = RestrictFocusType.Unrestricted;
        this._myFocusableComponentIds = {};
        this._parent = parent;
    }
    // Whenever the focusable element is mounted, we let the application
    // know so that FocusManager could account for this element during the
    // focus restriction.
    FocusManager.prototype.addFocusableComponent = function (component, accessibleOnly) {
        if (accessibleOnly === void 0) { accessibleOnly = false; }
        if (component.focusableComponentId) {
            return;
        }
        var numericComponentId = ++_lastComponentId;
        var componentId = 'fc-' + numericComponentId;
        var storedComponent = {
            id: componentId,
            numericId: numericComponentId,
            component: component,
            accessibleOnly: accessibleOnly,
            restricted: false,
            limitedCount: 0,
            limitedCountAccessible: 0,
            onFocus: function () {
                FocusManager._currentFocusedComponent = storedComponent;
            }
        };
        component.focusableComponentId = componentId;
        FocusManager._allFocusableComponents[componentId] = storedComponent;
        var withinRestrictionOwner = false;
        for (var parent_1 = this; parent_1; parent_1 = parent_1._parent) {
            parent_1._myFocusableComponentIds[componentId] = true;
            if (FocusManager._currentRestrictionOwner === parent_1) {
                withinRestrictionOwner = true;
            }
            if (parent_1._isFocusLimited === Interfaces_1.Types.LimitFocusType.Accessible) {
                storedComponent.limitedCountAccessible++;
            }
            else if (parent_1._isFocusLimited === Interfaces_1.Types.LimitFocusType.Limited) {
                storedComponent.limitedCount++;
            }
        }
        if (!withinRestrictionOwner && FocusManager._currentRestrictionOwner) {
            storedComponent.restricted = true;
        }
        this._updateComponentFocusRestriction(storedComponent);
        this.addFocusListenerOnComponent(component, storedComponent.onFocus);
    };
    FocusManager.prototype.removeFocusableComponent = function (component) {
        if (!component.focusableComponentId) {
            return;
        }
        var componentId = component.focusableComponentId;
        if (componentId) {
            var storedComponent = FocusManager._allFocusableComponents[componentId];
            this.removeFocusListenerFromComponent(component, storedComponent.onFocus);
            storedComponent.removed = true;
            storedComponent.restricted = false;
            storedComponent.limitedCount = 0;
            storedComponent.limitedCountAccessible = 0;
            this._updateComponentFocusRestriction(storedComponent);
            delete storedComponent.callbacks;
            for (var parent_2 = this; parent_2; parent_2 = parent_2._parent) {
                delete parent_2._myFocusableComponentIds[componentId];
            }
            delete FocusManager._allFocusableComponents[componentId];
            delete component.focusableComponentId;
        }
    };
    FocusManager.prototype.restrictFocusWithin = function (restrictType, noFocusReset) {
        var _this = this;
        // Limit the focus received by the keyboard navigation to all
        // the descendant focusable elements by setting tabIndex of all
        // other elements to -1.
        if ((FocusManager._currentRestrictionOwner === this) || (restrictType === RestrictFocusType.Unrestricted)) {
            return;
        }
        this._currentRestrictType = restrictType;
        if (FocusManager._currentRestrictionOwner) {
            this._removeFocusRestriction();
        }
        if (!this._prevFocusedComponent) {
            this._prevFocusedComponent = FocusManager._pendingPrevFocusedComponent || FocusManager._currentFocusedComponent;
        }
        FocusManager._clearRestoreRestrictionTimeout();
        FocusManager._restrictionStack.push(this);
        FocusManager._currentRestrictionOwner = this;
        if (!noFocusReset) {
            this.resetFocus(restrictType === RestrictFocusType.RestrictedFocusFirst);
        }
        Object.keys(FocusManager._allFocusableComponents).forEach(function (componentId) {
            if (!(componentId in _this._myFocusableComponentIds)) {
                var storedComponent = FocusManager._allFocusableComponents[componentId];
                storedComponent.restricted = true;
                _this._updateComponentFocusRestriction(storedComponent);
            }
        });
        if (this._restrictionStateCallback) {
            this._restrictionStateCallback(restrictType);
        }
    };
    FocusManager.prototype.removeFocusRestriction = function () {
        var _this = this;
        // Restore the focus to the previous view with restrictFocusWithin or
        // remove the restriction if there is no such view.
        FocusManager._restrictionStack = FocusManager._restrictionStack.filter(function (focusManager) { return focusManager !== _this; });
        if (FocusManager._currentRestrictionOwner === this) {
            // We'll take care of setting the proper focus below,
            // no need to do a regular check for focusout.
            FocusManager._skipFocusCheck = true;
            var prevFocusedComponent_1 = this._prevFocusedComponent;
            this._prevFocusedComponent = undefined;
            this._removeFocusRestriction();
            FocusManager._currentRestrictionOwner = undefined;
            if (this._restrictionStateCallback) {
                this._restrictionStateCallback(RestrictFocusType.Unrestricted);
            }
            // Defer the previous restriction restoration to wait for the current view
            // to be unmounted, or for the next restricted view to be mounted (like
            // showing a modal after a popup).
            FocusManager._clearRestoreRestrictionTimeout();
            FocusManager._pendingPrevFocusedComponent = prevFocusedComponent_1;
            FocusManager._restoreRestrictionTimer = Timers_1.default.setTimeout(function () {
                FocusManager._restoreRestrictionTimer = undefined;
                FocusManager._pendingPrevFocusedComponent = undefined;
                var prevRestrictionOwner = FocusManager._restrictionStack.pop();
                var needsFocusReset = true;
                var currentFocusedComponent = FocusManager._currentFocusedComponent;
                if (currentFocusedComponent && !currentFocusedComponent.removed &&
                    !(currentFocusedComponent.id in _this._myFocusableComponentIds)) {
                    // The focus has been manually moved to something outside of the current
                    // restriction scope, we should skip focusing the component which was
                    // focused before the restriction and keep the focus as it is.
                    prevFocusedComponent_1 = undefined;
                    needsFocusReset = false;
                }
                if (prevFocusedComponent_1 &&
                    !prevFocusedComponent_1.accessibleOnly &&
                    !prevFocusedComponent_1.removed &&
                    !prevFocusedComponent_1.restricted &&
                    prevFocusedComponent_1.limitedCount === 0 &&
                    prevFocusedComponent_1.limitedCountAccessible === 0) {
                    // If possible, focus the previously focused component.
                    needsFocusReset = !_this.focusComponent(prevFocusedComponent_1.component);
                }
                if (prevRestrictionOwner) {
                    prevRestrictionOwner.restrictFocusWithin(prevRestrictionOwner._currentRestrictType, !needsFocusReset);
                }
                else if (needsFocusReset) {
                    _this.resetFocus(_this._currentRestrictType === RestrictFocusType.RestrictedFocusFirst);
                }
            }, 100);
        }
    };
    FocusManager.prototype.limitFocusWithin = function (limitType) {
        var _this = this;
        if (this._isFocusLimited !== Interfaces_1.Types.LimitFocusType.Unlimited ||
            (limitType !== Interfaces_1.Types.LimitFocusType.Limited &&
                limitType !== Interfaces_1.Types.LimitFocusType.Accessible)) {
            return;
        }
        this._isFocusLimited = limitType;
        Object.keys(this._myFocusableComponentIds).forEach(function (componentId) {
            var storedComponent = FocusManager._allFocusableComponents[componentId];
            if (limitType === Interfaces_1.Types.LimitFocusType.Accessible) {
                storedComponent.limitedCountAccessible++;
            }
            else if (limitType === Interfaces_1.Types.LimitFocusType.Limited) {
                storedComponent.limitedCount++;
            }
            _this._updateComponentFocusRestriction(storedComponent);
        });
    };
    FocusManager.prototype.removeFocusLimitation = function () {
        var _this = this;
        if (this._isFocusLimited === Interfaces_1.Types.LimitFocusType.Unlimited) {
            return;
        }
        Object.keys(this._myFocusableComponentIds).forEach(function (componentId) {
            var storedComponent = FocusManager._allFocusableComponents[componentId];
            if (_this._isFocusLimited === Interfaces_1.Types.LimitFocusType.Accessible) {
                storedComponent.limitedCountAccessible--;
            }
            else if (_this._isFocusLimited === Interfaces_1.Types.LimitFocusType.Limited) {
                storedComponent.limitedCount--;
            }
            _this._updateComponentFocusRestriction(storedComponent);
        });
        this._isFocusLimited = Interfaces_1.Types.LimitFocusType.Unlimited;
    };
    FocusManager.prototype.release = function () {
        this.removeFocusRestriction();
        this.removeFocusLimitation();
    };
    FocusManager.subscribe = function (component, callback) {
        var storedComponent = FocusManager._getStoredComponent(component);
        if (storedComponent) {
            if (!storedComponent.callbacks) {
                storedComponent.callbacks = [];
            }
            storedComponent.callbacks.push(callback);
        }
    };
    FocusManager.unsubscribe = function (component, callback) {
        var storedComponent = FocusManager._getStoredComponent(component);
        if (storedComponent && storedComponent.callbacks) {
            storedComponent.callbacks = storedComponent.callbacks.filter(function (cb) {
                return cb !== callback;
            });
        }
    };
    FocusManager.prototype.setRestrictionStateCallback = function (callback) {
        this._restrictionStateCallback = callback;
    };
    FocusManager.isComponentFocusRestrictedOrLimited = function (component) {
        var storedComponent = FocusManager._getStoredComponent(component);
        return !!storedComponent &&
            (storedComponent.restricted || storedComponent.limitedCount > 0 || storedComponent.limitedCountAccessible > 0);
    };
    FocusManager.getCurrentFocusedComponent = function () {
        return FocusManager._currentFocusedComponent ? FocusManager._currentFocusedComponent.id : undefined;
    };
    FocusManager._getStoredComponent = function (component) {
        var componentId = component.focusableComponentId;
        if (componentId) {
            return FocusManager._allFocusableComponents[componentId];
        }
        return undefined;
    };
    FocusManager._callFocusableComponentStateChangeCallbacks = function (storedComponent, restrictedOrLimited) {
        if (!storedComponent.callbacks) {
            return;
        }
        storedComponent.callbacks.forEach(function (callback) {
            callback.call(storedComponent.component, restrictedOrLimited);
        });
    };
    FocusManager.prototype._removeFocusRestriction = function () {
        var _this = this;
        Object.keys(FocusManager._allFocusableComponents).forEach(function (componentId) {
            var storedComponent = FocusManager._allFocusableComponents[componentId];
            storedComponent.restricted = false;
            _this._updateComponentFocusRestriction(storedComponent);
        });
    };
    FocusManager._clearRestoreRestrictionTimeout = function () {
        if (FocusManager._restoreRestrictionTimer) {
            Timers_1.default.clearTimeout(FocusManager._restoreRestrictionTimer);
            FocusManager._restoreRestrictionTimer = undefined;
            FocusManager._pendingPrevFocusedComponent = undefined;
        }
    };
    FocusManager._restrictionStack = [];
    FocusManager._allFocusableComponents = {};
    FocusManager._skipFocusCheck = false;
    return FocusManager;
}());
exports.FocusManager = FocusManager;
// A mixin for the focusable elements, to tell the views that
// they exist and should be accounted during the focus restriction.
//
// isConditionallyFocusable is an optional callback which will be
// called for componentDidMount() or for UNSAFE_componentWillUpdate() to
// determine if the component is actually focusable.
//
// accessibleOnly is true for components that support just being focused
// by screen readers.
// By default components support both screen reader and keyboard focusing.
function applyFocusableComponentMixin(Component, isConditionallyFocusable, accessibleOnly) {
    if (accessibleOnly === void 0) { accessibleOnly = false; }
    var contextTypes = Component.contextTypes || {};
    contextTypes.focusManager = PropTypes.object;
    Component.contextTypes = contextTypes;
    inheritMethod('componentDidMount', function (focusManager) {
        if (!isConditionallyFocusable || isConditionallyFocusable.call(this)) {
            focusManager.addFocusableComponent(this, accessibleOnly);
        }
    });
    inheritMethod('componentWillUnmount', function (focusManager) {
        focusManager.removeFocusableComponent(this);
    });
    inheritMethod('UNSAFE_componentWillUpdate', function (focusManager, origArgs) {
        if (isConditionallyFocusable) {
            var isFocusable = isConditionallyFocusable.apply(this, origArgs);
            if (isFocusable && !this.focusableComponentId) {
                focusManager.addFocusableComponent(this, accessibleOnly);
            }
            else if (!isFocusable && this.focusableComponentId) {
                focusManager.removeFocusableComponent(this);
            }
        }
    });
    function inheritMethod(methodName, action) {
        var origCallback = Component.prototype[methodName];
        Component.prototype[methodName] = function () {
            if (!isConditionallyFocusable || isConditionallyFocusable.call(this)) {
                var focusManager = this._focusManager || (this.context && this.context.focusManager);
                if (focusManager) {
                    action.call(this, focusManager, arguments);
                }
                else {
                    if (AppConfig_1.default.isDevelopmentMode()) {
                        console.error('FocusableComponentMixin: context error!');
                    }
                }
            }
            if (origCallback) {
                origCallback.apply(this, arguments);
            }
        };
    }
}
exports.applyFocusableComponentMixin = applyFocusableComponentMixin;
exports.default = FocusManager;

},{"prop-types":"Iix9","../../common/AppConfig":"IaP6","../../common/Interfaces":"rFlL","./Timers":"tBdH"}],"ktry":[function(require,module,exports) {
"use strict";
/**
 * ScrollViewConfig.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific scroll view configuration, required to avoid circular
 * dependency between application and ScrollView.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ScrollViewConfig = /** @class */ (function () {
    function ScrollViewConfig() {
        this._useCustomScrollbars = false;
    }
    // Enable native scrollbars for all instances.
    ScrollViewConfig.prototype.setUseCustomScrollbars = function (value) {
        this._useCustomScrollbars = value;
    };
    ScrollViewConfig.prototype.useCustomScrollbars = function () {
        return this._useCustomScrollbars;
    };
    return ScrollViewConfig;
}());
exports.ScrollViewConfig = ScrollViewConfig;
exports.default = new ScrollViewConfig();

},{}],"BHAl":[function(require,module,exports) {
"use strict";
/**
 * UserInterface.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the ReactXP interfaces related to
 * UI (layout measurements, etc.).
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ReactDOM = require("react-dom");
var RX = require("../common/Interfaces");
var PromiseDefer_1 = require("../common/utils/PromiseDefer");
var FrontLayerViewManager_1 = require("./FrontLayerViewManager");
var ScrollViewConfig_1 = require("./ScrollViewConfig");
var UserInterface = /** @class */ (function (_super) {
    __extends(UserInterface, _super);
    function UserInterface() {
        var _this = _super.call(this) || this;
        _this._isNavigatingWithKeyboard = false;
        _this._keyboardNavigationStateChanged = function (isNavigatingWithKeyboard) {
            _this._isNavigatingWithKeyboard = isNavigatingWithKeyboard;
        };
        _this.keyboardNavigationEvent.subscribe(_this._keyboardNavigationStateChanged);
        return _this;
    }
    UserInterface.prototype.measureLayoutRelativeToWindow = function (component) {
        var deferred = new PromiseDefer_1.Defer();
        var componentDomNode = null;
        try {
            componentDomNode = ReactDOM.findDOMNode(component);
        }
        catch (_a) {
            // Component is no longer mounted.
        }
        if (!componentDomNode) {
            deferred.reject('measureLayoutRelativeToWindow failed');
        }
        else {
            var componentBoundingRect = componentDomNode.getBoundingClientRect();
            deferred.resolve({
                x: componentBoundingRect.left,
                y: componentBoundingRect.top,
                width: componentBoundingRect.width,
                height: componentBoundingRect.height
            });
        }
        return deferred.promise();
    };
    UserInterface.prototype.measureLayoutRelativeToAncestor = function (component, ancestor) {
        var deferred = new PromiseDefer_1.Defer();
        var componentDomNode = null;
        var ancestorDomNode = null;
        try {
            componentDomNode = ReactDOM.findDOMNode(component);
            ancestorDomNode = ReactDOM.findDOMNode(ancestor);
        }
        catch (_a) {
            // Components are no longer mounted.
        }
        if (!componentDomNode || !ancestorDomNode) {
            deferred.reject('measureLayoutRelativeToAncestor failed');
        }
        else {
            var componentBoundingRect = componentDomNode.getBoundingClientRect();
            var ancestorBoundingRect = ancestorDomNode.getBoundingClientRect();
            deferred.resolve({
                x: componentBoundingRect.left - ancestorBoundingRect.left,
                y: componentBoundingRect.top - ancestorBoundingRect.top,
                width: componentBoundingRect.width,
                height: componentBoundingRect.height
            });
        }
        return deferred.promise();
    };
    UserInterface.prototype.measureWindow = function (rootViewId) {
        // Mo multi window support, default to main window
        return {
            x: 0,
            y: 0,
            width: window.innerWidth,
            height: window.innerHeight
        };
    };
    UserInterface.prototype.getContentSizeMultiplier = function () {
        // Browsers don't support font-specific scaling. They scale all of their
        // UI elements the same.
        return Promise.resolve(1);
    };
    UserInterface.prototype.isHighPixelDensityScreen = function () {
        return this.getPixelRatio() > 1;
    };
    UserInterface.prototype.getPixelRatio = function () {
        var pixelRatio = 0;
        if (window.devicePixelRatio) {
            pixelRatio = window.devicePixelRatio;
        }
        return pixelRatio;
    };
    UserInterface.prototype.setMainView = function (element) {
        FrontLayerViewManager_1.default.setMainView(element);
    };
    UserInterface.prototype.registerRootView = function (viewKey, getComponentFunc) {
        // Nothing to do
    };
    UserInterface.prototype.useCustomScrollbars = function (enable) {
        if (enable === void 0) { enable = true; }
        ScrollViewConfig_1.default.setUseCustomScrollbars(enable);
    };
    UserInterface.prototype.dismissKeyboard = function () {
        // Nothing to do
    };
    UserInterface.prototype.enableTouchLatencyEvents = function (latencyThresholdMs) {
        // Nothing to do
    };
    UserInterface.prototype.evaluateTouchLatency = function (e) {
        // Nothing to do
    };
    UserInterface.prototype.isNavigatingWithKeyboard = function () {
        return this._isNavigatingWithKeyboard;
    };
    return UserInterface;
}(RX.UserInterface));
exports.UserInterface = UserInterface;
exports.default = new UserInterface();

},{"react-dom":"X9zx","../common/Interfaces":"rFlL","../common/utils/PromiseDefer":"DXNi","./FrontLayerViewManager":"mOoD","./ScrollViewConfig":"ktry"}],"HWpt":[function(require,module,exports) {
"use strict";
/**
 * FocusManager.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Manages focusable elements for better keyboard navigation (web version)
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ReactDOM = require("react-dom");
var AutoFocusHelper_1 = require("../../common/utils/AutoFocusHelper");
var FocusManager_1 = require("../../common/utils/FocusManager");
var Timers_1 = require("../../common/utils/Timers");
var UserInterface_1 = require("../UserInterface");
var ATTR_NAME_TAB_INDEX = 'tabindex';
var ATTR_NAME_ARIA_HIDDEN = 'aria-hidden';
var _isShiftPressed;
var FocusManager = /** @class */ (function (_super) {
    __extends(FocusManager, _super);
    function FocusManager(parent) {
        return _super.call(this, parent) || this;
    }
    // Not really public
    FocusManager.initListeners = function () {
        // The default behaviour on Electron is to release the focus after the
        // Tab key is pressed on a last focusable element in the page and focus
        // the first focusable element on a consecutive Tab key press.
        // We want to avoid losing this first Tab key press.
        var _checkFocusTimer;
        // Checking if Shift is pressed to move the focus into the right direction.
        window.addEventListener('keydown', function (event) {
            _isShiftPressed = event.shiftKey;
        });
        window.addEventListener('keyup', function (event) {
            _isShiftPressed = event.shiftKey;
        });
        document.body.addEventListener('focusout', function (event) {
            if (!UserInterface_1.default.isNavigatingWithKeyboard() || (event.target === document.body)) {
                return;
            }
            if (_checkFocusTimer) {
                Timers_1.default.clearTimeout(_checkFocusTimer);
            }
            if (FocusManager._skipFocusCheck) {
                // When in between the FocusManager restrictions,
                // don't check for the focus change here, FocusManager
                // will take care of it.
                FocusManager._skipFocusCheck = false;
                return;
            }
            _checkFocusTimer = Timers_1.default.setTimeout(function () {
                _checkFocusTimer = undefined;
                if (UserInterface_1.default.isNavigatingWithKeyboard() &&
                    (!FocusManager._currentFocusedComponent || !FocusManager._currentFocusedComponent.removed) &&
                    (!document.activeElement || (document.activeElement === document.body))) {
                    // This should work for Electron and the browser should
                    // send the focus to the address bar anyway.
                    FocusManager.focusFirst(_isShiftPressed);
                }
            }, 100);
        });
    };
    FocusManager.prototype.addFocusListenerOnComponent = function (component, onFocus) {
        try {
            var el = ReactDOM.findDOMNode(component);
            if (el) {
                el.addEventListener('focus', onFocus);
            }
        }
        catch (_a) {
            // Swallow exception due to component unmount race condition.
        }
    };
    FocusManager.prototype.removeFocusListenerFromComponent = function (component, onFocus) {
        try {
            var el = ReactDOM.findDOMNode(component);
            if (el) {
                el.removeEventListener('focus', onFocus);
            }
        }
        catch (_a) {
            // Swallow exception due to component unmount race condition.
        }
    };
    FocusManager.prototype.focusComponent = function (component) {
        try {
            var el = ReactDOM.findDOMNode(component);
            if (el && el.focus) {
                FocusManager.setLastFocusedProgrammatically(el);
                el.focus();
                return true;
            }
        }
        catch (_a) {
            // Swallow exception due to component unmount race condition.
        }
        return false;
    };
    FocusManager.setLastFocusedProgrammatically = function (element) {
        this._lastFocusedProgrammatically = element;
    };
    FocusManager.getLastFocusedProgrammatically = function (reset) {
        var ret = FocusManager._lastFocusedProgrammatically;
        if (ret && reset) {
            FocusManager._lastFocusedProgrammatically = undefined;
        }
        return ret;
    };
    FocusManager._isComponentAvailable = function (storedComponent) {
        return !storedComponent.accessibleOnly &&
            !storedComponent.removed &&
            !storedComponent.restricted &&
            storedComponent.limitedCount === 0 &&
            storedComponent.limitedCountAccessible === 0;
    };
    FocusManager._getFirstFocusable = function (last, parent) {
        var focusable = Object.keys(FocusManager._allFocusableComponents)
            .filter(function (componentId) { return !parent || (componentId in parent._myFocusableComponentIds); })
            .map(function (componentId) { return FocusManager._allFocusableComponents[componentId]; })
            .filter(FocusManager._isComponentAvailable)
            .map(function (storedComponent) { return ({ storedComponent: storedComponent, el: ReactDOM.findDOMNode(storedComponent.component) }); })
            .filter(function (f) { return f.el && f.el.focus && ((f.el.tabIndex || 0) >= 0) && !f.el.disabled; });
        if (focusable.length) {
            focusable.sort(function (a, b) {
                // Some element which is mounted later could come earlier in the DOM,
                // so, we sort the elements by their appearance in the DOM.
                if (a === b) {
                    return 0;
                }
                return a.el.compareDocumentPosition(b.el) & document.DOCUMENT_POSITION_PRECEDING ? 1 : -1;
            });
            return focusable[last ? focusable.length - 1 : 0];
        }
        return undefined;
    };
    FocusManager.focusFirst = function (last) {
        var first = FocusManager._getFirstFocusable(last);
        if (first) {
            var storedComponent_1 = first.storedComponent;
            AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(storedComponent_1.component, function () {
                FocusManager.setLastFocusedProgrammatically(first.el);
                first.el.focus();
            }, function () { return FocusManager._isComponentAvailable(storedComponent_1); }, AutoFocusHelper_1.FocusCandidateType.FocusFirst);
        }
    };
    FocusManager.prototype.resetFocus = function (focusFirstWhenNavigatingWithKeyboard) {
        if (FocusManager._resetFocusTimer) {
            Timers_1.default.clearTimeout(FocusManager._resetFocusTimer);
            FocusManager._resetFocusTimer = undefined;
        }
        if (UserInterface_1.default.isNavigatingWithKeyboard() && focusFirstWhenNavigatingWithKeyboard) {
            // When we're in the keyboard navigation mode, we want to have the
            // first focusable component to be focused straight away, without the
            // necessity to press Tab.
            var first_1 = FocusManager._getFirstFocusable(false, FocusManager._currentRestrictionOwner);
            if (first_1) {
                var storedComponent_2 = first_1.storedComponent;
                AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(storedComponent_2.component, function () {
                    FocusManager.setLastFocusedProgrammatically(first_1.el);
                    first_1.el.focus();
                }, function () { return FocusManager._isComponentAvailable(storedComponent_2); }, AutoFocusHelper_1.FocusCandidateType.FocusFirst);
            }
        }
        else if ((typeof document !== 'undefined') && document.body && document.body.focus && document.body.blur) {
            // An example to explain this part:
            // We've shown a modal dialog which is higher in the DOM by clicking
            // on a button which is lower in the DOM, we've applied the restrictions
            // and only the elements from the modal dialog are focusable now.
            // But internally the browser keeps the last focus position in the DOM
            // (even if we do blur() for the button) and when Tab is pressed again,
            // the browser will start searching for the next focusable element from
            // this position.
            // This means that the first Tab press will get us to the browser's address
            // bar (or nowhere in case of Electron) and only the second Tab press will
            // lead us to focusing the first focusable element in the modal dialog.
            // In order to avoid losing this first Tab press, we're making <body>
            // focusable, focusing it, removing the focus and making it unfocusable
            // back again.
            // Defer the work to avoid triggering sync layout.
            FocusManager._resetFocusTimer = Timers_1.default.setTimeout(function () {
                FocusManager._resetFocusTimer = undefined;
                var currentFocused = FocusManager._currentFocusedComponent;
                if (currentFocused && !currentFocused.removed && !currentFocused.restricted) {
                    // No need to reset the focus because it's moved inside the restricted area
                    // already (manually or with autofocus).
                    return;
                }
                var prevTabIndex = FocusManager._setTabIndex(document.body, -1);
                FocusManager.setLastFocusedProgrammatically(document.body);
                document.body.focus();
                document.body.blur();
                FocusManager._setTabIndex(document.body, prevTabIndex);
            }, 100);
        }
    };
    FocusManager.prototype._updateComponentFocusRestriction = function (storedComponent) {
        var newAriaHidden = storedComponent.restricted || (storedComponent.limitedCount > 0) ? true : undefined;
        var newTabIndex = newAriaHidden || (storedComponent.limitedCountAccessible > 0) ? -1 : undefined;
        var restrictionRemoved = newTabIndex === undefined;
        if ((storedComponent.curTabIndex !== newTabIndex) || (storedComponent.curAriaHidden !== newAriaHidden)) {
            var el = ReactDOM.findDOMNode(storedComponent.component);
            if (el) {
                if (storedComponent.curTabIndex !== newTabIndex) {
                    storedComponent.curTabIndex = newTabIndex;
                    if (restrictionRemoved) {
                        FocusManager._setTabIndex(el, storedComponent.origTabIndex);
                    }
                    else {
                        var prevTabIndex = FocusManager._setTabIndex(el, newTabIndex);
                        if (!('origTabIndex' in storedComponent)) {
                            storedComponent.origTabIndex = prevTabIndex;
                        }
                    }
                }
                if (storedComponent.curAriaHidden !== newAriaHidden) {
                    storedComponent.curAriaHidden = newAriaHidden;
                    if (restrictionRemoved) {
                        FocusManager._setAriaHidden(el, storedComponent.origAriaHidden);
                    }
                    else {
                        var prevAriaHidden = FocusManager._setAriaHidden(el, newAriaHidden ? 'true' : undefined);
                        if (!('origAriaHidden' in storedComponent)) {
                            storedComponent.origAriaHidden = prevAriaHidden;
                        }
                    }
                }
                if (restrictionRemoved) {
                    delete storedComponent.origTabIndex;
                    delete storedComponent.origAriaHidden;
                }
            }
            FocusManager._callFocusableComponentStateChangeCallbacks(storedComponent, !restrictionRemoved);
        }
    };
    FocusManager._setTabIndex = function (element, value) {
        // If a tabIndex assignment is pending for this element, cancel it now.
        if (FocusManager._setTabIndexTimer && element === FocusManager._setTabIndexElement) {
            Timers_1.default.clearTimeout(FocusManager._setTabIndexTimer);
            FocusManager._setTabIndexTimer = undefined;
            FocusManager._setTabIndexElement = undefined;
        }
        var prev = element.hasAttribute(ATTR_NAME_TAB_INDEX) ? element.tabIndex : undefined;
        if (value === undefined) {
            if (prev !== undefined) {
                element.removeAttribute(ATTR_NAME_TAB_INDEX);
            }
        }
        else if (value !== prev) {
            // Setting tabIndex to -1 on the active element would trigger sync layout. Defer it.
            if (value === -1 && element === document.activeElement) {
                // If a tabIndex assignment is pending for another element, run it now as we know
                // that it's not active anymore.
                if (FocusManager._setTabIndexTimer) {
                    FocusManager._setTabIndexElement.tabIndex = -1;
                    Timers_1.default.clearTimeout(FocusManager._setTabIndexTimer);
                    FocusManager._setTabIndexTimer = undefined;
                    FocusManager._setTabIndexElement = undefined;
                }
                FocusManager._setTabIndexElement = element;
                FocusManager._setTabIndexTimer = Timers_1.default.setTimeout(function () {
                    element.tabIndex = value;
                    if (element === FocusManager._setTabIndexElement) {
                        FocusManager._setTabIndexTimer = undefined;
                        FocusManager._setTabIndexElement = undefined;
                    }
                }, 0);
            }
            else {
                element.tabIndex = value;
            }
        }
        return prev;
    };
    FocusManager._setAriaHidden = function (element, value) {
        var prev = element.hasAttribute(ATTR_NAME_ARIA_HIDDEN) ? element.getAttribute(ATTR_NAME_ARIA_HIDDEN) || undefined : undefined;
        if (value === undefined) {
            if (prev !== undefined) {
                element.removeAttribute(ATTR_NAME_ARIA_HIDDEN);
            }
        }
        else {
            element.setAttribute(ATTR_NAME_ARIA_HIDDEN, value);
        }
        return prev;
    };
    FocusManager.sortAndFilterAutoFocusCandidates = function (candidates) {
        return candidates
            .filter(function (candidate) {
            var id = candidate.component.focusableComponentId;
            if (id) {
                var storedComponent = FocusManager._allFocusableComponents[id];
                if (storedComponent &&
                    (storedComponent.removed ||
                        (storedComponent.limitedCount > 0) || (storedComponent.limitedCountAccessible > 0))) {
                    return false;
                }
            }
            return true;
        })
            .map(function (candidate) { return ({ candidate: candidate, el: ReactDOM.findDOMNode(candidate.component) }); })
            .sort(function (a, b) {
            // Some element which is mounted later could come earlier in the DOM,
            // so, we sort the elements by their appearance in the DOM.
            if (a === b) {
                return 0;
            }
            return a.el.compareDocumentPosition(b.el) & document.DOCUMENT_POSITION_PRECEDING ? 1 : -1;
        })
            .map(function (ce) { return ce.candidate; });
    };
    return FocusManager;
}(FocusManager_1.FocusManager));
exports.FocusManager = FocusManager;
function applyFocusableComponentMixin(Component, isConditionallyFocusable) {
    FocusManager_1.applyFocusableComponentMixin(Component, isConditionallyFocusable);
    var origFocus = Component.prototype.focus;
    if (origFocus) {
        Component.prototype.focus = function () {
            try {
                // tslint:disable-next-line
                var el = ReactDOM.findDOMNode(this);
                if (el) {
                    FocusManager.setLastFocusedProgrammatically(el);
                }
            }
            catch (_a) {
                // Swallow exception due to component unmount race condition.
            }
            // tslint:disable-next-line
            origFocus.apply(this, arguments);
        };
    }
}
exports.applyFocusableComponentMixin = applyFocusableComponentMixin;
if ((typeof document !== 'undefined') && (typeof window !== 'undefined')) {
    FocusManager.initListeners();
}
exports.default = FocusManager;

},{"react-dom":"X9zx","../../common/utils/AutoFocusHelper":"uohT","../../common/utils/FocusManager":"HkPx","../../common/utils/Timers":"tBdH","../UserInterface":"BHAl"}],"ypnH":[function(require,module,exports) {
"use strict";
/**
 * Input.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web implementation of Input interface.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Input.prototype.dispatchKeyDown = function (e) {
        this.keyDownEvent.fire(e);
    };
    Input.prototype.dispatchKeyUp = function (e) {
        if (this.keyUpEvent.fire(e)) {
            e.stopPropagation();
        }
    };
    return Input;
}(RX.Input));
exports.Input = Input;
exports.default = new Input();

},{"../common/Interfaces":"rFlL"}],"xKEu":[function(require,module,exports) {
"use strict";
/**
 * ModalContainer.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of a view that's used to render modals.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var _styles = {
    modalContainerStyle: {
        display: 'flex',
        position: 'fixed',
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        justifyContent: 'center',
        alignItems: 'center',
        flexDirection: 'column',
        flex: '1 1 auto',
        alignSelf: 'stretch',
        overflow: 'hidden',
        zIndex: 10000
    }
};
var ModalContainer = /** @class */ (function (_super) {
    __extends(ModalContainer, _super);
    function ModalContainer(props) {
        return _super.call(this, props) || this;
    }
    ModalContainer.prototype.render = function () {
        return (React.createElement("div", { style: _styles.modalContainerStyle }, this.props.children));
    };
    return ModalContainer;
}(React.Component));
exports.ModalContainer = ModalContainer;
exports.default = ModalContainer;

},{"react":"HdMw"}],"Dy27":[function(require,module,exports) {
"use strict";
/**
 * PopupContainerView.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Common parent of all components rendered into a popup, web version.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PopupContainerViewBase_1 = require("../common/PopupContainerViewBase");
var lodashMini_1 = require("./utils/lodashMini");
var PopupContainerView = /** @class */ (function (_super) {
    __extends(PopupContainerView, _super);
    function PopupContainerView(props, context) {
        return _super.call(this, props, context) || this;
    }
    PopupContainerView.prototype.render = function () {
        var style = lodashMini_1.clone(this.props.style);
        if (this.props.hidden) {
            style.visibility = 'hidden';
        }
        return (React.createElement("div", { style: style, onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, this.props.children));
    };
    return PopupContainerView;
}(PopupContainerViewBase_1.PopupContainerViewBase));
exports.PopupContainerView = PopupContainerView;
exports.default = PopupContainerView;

},{"react":"HdMw","../common/PopupContainerViewBase":"XSwJ","./utils/lodashMini":"Wdkl"}],"iF2k":[function(require,module,exports) {
"use strict";
/**
 * RootView.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * The top-most view (rendered into window.body) that's used for proper
 * layering or modals, etc. in the web implementation of the ReactXP
 * cross-platform library.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var ReactDOM = require("react-dom");
var PopupContainerViewBase_1 = require("../common/PopupContainerViewBase");
var Timers_1 = require("../common/utils/Timers");
var AccessibilityAnnouncer_1 = require("./AccessibilityAnnouncer");
var FocusManager_1 = require("./utils/FocusManager");
var Input_1 = require("./Input");
var _ = require("./utils/lodashMini");
var ModalContainer_1 = require("./ModalContainer");
var PopupContainerView_1 = require("./PopupContainerView");
var UserInterface_1 = require("./UserInterface");
var PopupDescriptor = /** @class */ (function () {
    function PopupDescriptor(popupId, popupOptions) {
        this.popupId = popupId;
        this.popupOptions = popupOptions;
    }
    return PopupDescriptor;
}());
exports.PopupDescriptor = PopupDescriptor;
// Button code for when right click is pressed in a mouse event
var _rightClickButtonCode = 2;
var KEY_CODE_TAB = 9;
var KEY_CODE_ESC = 27;
// Setting the expected default box-sizing for everything.
if (typeof document !== 'undefined') {
    var defaultBoxSizing = '*, *:before, *:after { box-sizing: border-box; }';
    var style = document.createElement('style');
    style.type = 'text/css';
    style.appendChild(document.createTextNode(defaultBoxSizing));
    document.head.appendChild(style);
}
// This helper class wraps the main view and passes a boolean value
// "isInRxMainView" to all children found within it. This is used to
// prevent gesture handling within the main view when a modal is displayed.
var MainViewContainer = /** @class */ (function (_super) {
    __extends(MainViewContainer, _super);
    function MainViewContainer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MainViewContainer.prototype.getChildContext = function () {
        return {
            isInRxMainView: true
        };
    };
    MainViewContainer.prototype.render = function () {
        return (this.props.children);
    };
    MainViewContainer.childContextTypes = {
        isInRxMainView: PropTypes.bool
    };
    return MainViewContainer;
}(React.Component));
exports.MainViewContainer = MainViewContainer;
var RootView = /** @class */ (function (_super) {
    __extends(RootView, _super);
    function RootView(props) {
        var _this = _super.call(this, props) || this;
        _this._clickHandlerInstalled = false;
        _this._keyboardHandlerInstalled = false;
        _this._shouldEnableKeyboardNavigationModeOnFocus = false;
        _this._applicationIsNotActive = false;
        _this._onMount = function (component) {
            var domNode = component && ReactDOM.findDOMNode(component);
            _this._mountedComponent = domNode ? domNode : undefined;
        };
        _this._tryClosePopup = function (e) {
            // Dismiss a visible popup if there's a click outside.
            var popupContainer = _this._mountedComponent;
            if (!popupContainer) {
                return;
            }
            var clickInPopup = false;
            var el = e.target;
            while (el) {
                if (el === popupContainer) {
                    clickInPopup = true;
                    break;
                }
                el = el.parentElement || undefined;
            }
            if (!clickInPopup && e.button !== _rightClickButtonCode) {
                _.defer(function () {
                    if (_this.props.activePopup) {
                        var anchorReference = _this.props.activePopup.popupOptions.getAnchor();
                        var isClickOnAnchor = _this._determineIfClickOnElement(anchorReference, e.srcElement);
                        var isClickOnContainer = false;
                        if (!isClickOnAnchor && _this.props.activePopup.popupOptions.getElementTriggeringPopup) {
                            var containerRef = _this.props.activePopup.popupOptions.getElementTriggeringPopup();
                            isClickOnContainer = _this._determineIfClickOnElement(containerRef, e.srcElement);
                        }
                        if (isClickOnAnchor || isClickOnContainer) {
                            // If the press event was on the anchor, we can notify the caller about it.
                            // Showing another animation while dimissing the popup creates a conflict in the UI making it not doing one of the
                            // two animations (i.e.: Opening an actionsheet while dismissing a popup). We introduce this delay to make sure
                            // the popup dimissing animation has finished before we call the event handler.
                            if (_this.props.activePopup.popupOptions.onAnchorPressed) {
                                Timers_1.default.setTimeout(function () {
                                    // We can't pass through the DOM event argument to the anchor event handler as the event we have at this
                                    // point is a DOM Event and the anchor expect a Synthetic event. There doesn't seem to be any way to convert
                                    // between them. Passing null for now.
                                    _this.props.activePopup.popupOptions.onAnchorPressed(undefined);
                                }, 500);
                            }
                            // If the popup is meant to behave like a toggle, we should not dimiss the popup from here since the event came
                            // from the anchor/container of the popup. The popup will be dismissed during the click handling of the
                            // anchor/container.
                            if (_this.props.activePopup.popupOptions.dismissIfShown) {
                                return;
                            }
                        }
                        if (_this.props.activePopup.popupOptions.preventDismissOnPress) {
                            return;
                        }
                    }
                    _this._dismissPopup();
                });
            }
        };
        _this._onMouseDownCapture = function (e) {
            if (e &&
                (e.clientX === 0) && (e.clientY === 0) &&
                (e.screenX === 0) && (e.screenY === 0)) {
                // This is most likely an event triggered by NVDA when Enter or
                // Space is pressed, do not dismiss the keyboard navigation mode.
                return;
            }
            _this._shouldEnableKeyboardNavigationModeOnFocus = false;
            _this._updateKeyboardNavigationState(false);
        };
        _this._onKeyDownCapture = function (e) {
            if (e.keyCode === KEY_CODE_TAB) {
                _this._updateKeyboardNavigationState(true);
            }
            if (e.keyCode === KEY_CODE_ESC) {
                // If Esc is pressed and the focused element stays the same after some time,
                // switch the keyboard navigation off to dismiss the outline.
                var activeElement_1 = document.activeElement;
                if (_this._isNavigatingWithKeyboardUpateTimer) {
                    Timers_1.default.clearTimeout(_this._isNavigatingWithKeyboardUpateTimer);
                }
                _this._isNavigatingWithKeyboardUpateTimer = Timers_1.default.setTimeout(function () {
                    _this._isNavigatingWithKeyboardUpateTimer = undefined;
                    if ((document.activeElement === activeElement_1) && activeElement_1 && (activeElement_1 !== document.body)) {
                        _this._updateKeyboardNavigationState(false);
                    }
                }, 500);
            }
        };
        _this._onFocusIn = function (e) {
            // When the screen reader is being used, we need to enable the keyboard navigation
            // mode. It's not possible to detect the screen reader on web. To work it around we
            // apply the following assumption: if the focus is moved without using the mouse and
            // not from the application code with focus() method, it is most likely moved by the
            // screen reader.
            _this._cancelApplicationIsNotActive();
            var target = e.target;
            if (_this._updateKeyboardNavigationModeOnFocusTimer) {
                Timers_1.default.clearTimeout(_this._updateKeyboardNavigationModeOnFocusTimer);
            }
            _this._updateKeyboardNavigationModeOnFocusTimer = Timers_1.default.setTimeout(function () {
                _this._updateKeyboardNavigationModeOnFocusTimer = undefined;
                var prev = _this._prevFocusedElement;
                var curShouldEnable = _this._shouldEnableKeyboardNavigationModeOnFocus;
                _this._prevFocusedElement = target;
                _this._shouldEnableKeyboardNavigationModeOnFocus = true;
                if (_this._applicationIsNotActive) {
                    _this._applicationIsNotActive = false;
                    return;
                }
                if ((prev === target) || (target === FocusManager_1.default.getLastFocusedProgrammatically(true))) {
                    return;
                }
                if (!UserInterface_1.default.isNavigatingWithKeyboard() && curShouldEnable) {
                    _this._updateKeyboardNavigationState(true);
                }
            }, 0);
        };
        _this._onFocusOut = function (e) {
            // If the focus is out and nothing is focused after some time, most likely
            // the application has been deactivated, so the next focusin will be about
            // activating the application back again and should be ignored.
            // This is a safety pillow for checking that _prevFocusedElement is changed,
            // as _prevFocusedElement might be gone while the application is not active.
            _this._requestApplicationIsNotActive();
        };
        _this._onKeyDown = function (e) {
            Input_1.default.dispatchKeyDown(e);
        };
        _this._onKeyUp = function (e) {
            if (_this.props.activePopup && (e.keyCode === KEY_CODE_ESC)) {
                if (e.stopPropagation) {
                    e.stopPropagation();
                }
                _this._dismissPopup();
                return;
            }
            Input_1.default.dispatchKeyUp(e);
        };
        _this.state = _this._getInitialState();
        // Initialize the root FocusManager which is aware of all
        // focusable elements.
        _this._focusManager = new FocusManager_1.default(undefined);
        return _this;
    }
    RootView.prototype.getChildContext = function () {
        // Provide the context with root FocusManager to all descendants.
        return {
            focusManager: this._focusManager
        };
    };
    RootView.prototype._getInitialState = function () {
        return {
            isMeasuringPopup: true,
            anchorPosition: 'left',
            anchorOffset: 0,
            popupY: 0,
            popupX: 0,
            popupWidth: 0,
            popupHeight: 0,
            constrainedPopupWidth: 0,
            constrainedPopupHeight: 0,
            focusClass: this.props.mouseFocusOutline
        };
    };
    RootView.prototype.UNSAFE_componentWillReceiveProps = function (prevProps) {
        if (this.props.activePopup !== prevProps.activePopup) {
            this._stopHidePopupTimer();
            // If the popup changes, reset our state.
            this.setState(this._getInitialState());
        }
    };
    RootView.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.props.activePopup) {
            this._stopHidePopupTimer();
            this._recalcPosition();
            if (!this._respositionPopupTimer) {
                this._startRepositionPopupTimer();
            }
            this._startHidePopupTimer();
            if (!this._clickHandlerInstalled) {
                document.addEventListener('mousedown', this._tryClosePopup);
                document.addEventListener('touchstart', this._tryClosePopup);
                this._clickHandlerInstalled = true;
            }
        }
        else {
            this._stopRepositionPopupTimer();
            if (this._clickHandlerInstalled) {
                document.removeEventListener('mousedown', this._tryClosePopup);
                document.removeEventListener('touchstart', this._tryClosePopup);
                this._clickHandlerInstalled = false;
            }
        }
    };
    RootView.prototype.componentDidMount = function () {
        if (this.props.activePopup) {
            this._recalcPosition();
        }
        if (this.props.activePopup) {
            this._startRepositionPopupTimer();
        }
        if (!this._keyboardHandlerInstalled) {
            window.addEventListener('keydown', this._onKeyDown);
            window.addEventListener('keyup', this._onKeyUp);
            window.addEventListener('keydown', this._onKeyDownCapture, true); // Capture!
            window.addEventListener('mousedown', this._onMouseDownCapture, true); // Capture!
            window.addEventListener('focusin', this._onFocusIn);
            window.addEventListener('focusout', this._onFocusOut);
            this._keyboardHandlerInstalled = true;
        }
    };
    RootView.prototype.componentWillUnmount = function () {
        this._stopHidePopupTimer();
        this._stopRepositionPopupTimer();
        if (this._keyboardHandlerInstalled) {
            window.removeEventListener('keydown', this._onKeyDown);
            window.removeEventListener('keyup', this._onKeyUp);
            window.removeEventListener('keydown', this._onKeyDownCapture, true);
            window.removeEventListener('mousedown', this._onMouseDownCapture, true);
            window.removeEventListener('focusin', this._onFocusIn);
            window.removeEventListener('focusout', this._onFocusOut);
            this._keyboardHandlerInstalled = false;
        }
    };
    RootView.prototype._renderPopup = function (popup, hidden) {
        var _this = this;
        var popupContainerStyle = {
            display: 'flex',
            position: 'fixed',
            zIndex: 100001
        };
        if (!hidden) {
            popupContainerStyle.top = this.state.popupY;
            popupContainerStyle.left = this.state.popupX;
            // Are we artificially constraining the width and/or height?
            if (this.state.constrainedPopupWidth && this.state.constrainedPopupWidth !== this.state.popupWidth) {
                popupContainerStyle.width = this.state.constrainedPopupWidth;
            }
            if (this.state.constrainedPopupHeight && this.state.constrainedPopupHeight !== this.state.popupHeight) {
                popupContainerStyle.height = this.state.constrainedPopupHeight;
            }
        }
        var key = (popup.popupOptions.cacheable ? 'CP:' : 'P:') + popup.popupId;
        var renderedPopup = (hidden ?
            popup.popupOptions.renderPopup('top', 0, 0, 0) :
            popup.popupOptions.renderPopup(this.state.anchorPosition, this.state.anchorOffset, this.state.constrainedPopupWidth, this.state.constrainedPopupHeight));
        return (React.createElement(PopupContainerView_1.default, { key: key, style: popupContainerStyle, hidden: hidden, ref: hidden ? undefined : this._onMount, onMouseEnter: function (e) { return _this._onMouseEnter(e); }, onMouseLeave: function (e) { return _this._onMouseLeave(e); } }, renderedPopup));
    };
    RootView.prototype.render = function () {
        var _this = this;
        var rootViewStyle = {
            width: '100%',
            height: '100%',
            display: 'flex',
            cursor: 'default'
        };
        var optionalPopups = [];
        if (this.props.activePopup) {
            optionalPopups.push(this._renderPopup(this.props.activePopup, false));
        }
        if (this.props.cachedPopup) {
            this.props.cachedPopup.forEach(function (popup) { return optionalPopups.push(_this._renderPopup(popup, true)); });
        }
        var optionalModal = null;
        if (this.props.modal) {
            optionalModal = (React.createElement(ModalContainer_1.default, null, this.props.modal));
        }
        return (React.createElement("div", { className: this.state.focusClass, style: rootViewStyle, dir: this.props.writingDirection },
            React.createElement(MainViewContainer, null, this.props.mainView),
            optionalModal,
            optionalPopups,
            React.createElement(AccessibilityAnnouncer_1.default, null)));
    };
    RootView.prototype._determineIfClickOnElement = function (elementReference, eventSource) {
        try {
            var element = ReactDOM.findDOMNode(elementReference);
            var isClickOnElement = !!element && !!eventSource && element.contains(eventSource);
            return isClickOnElement;
        }
        catch (_a) {
            // Exception is due to race condition with unmounting.
            return false;
        }
    };
    RootView.prototype._requestApplicationIsNotActive = function () {
        var _this = this;
        this._cancelApplicationIsNotActive();
        this._applicationIsNotActiveTimer = Timers_1.default.setTimeout(function () {
            _this._applicationIsNotActiveTimer = undefined;
            _this._applicationIsNotActive = true;
        }, 100);
    };
    RootView.prototype._cancelApplicationIsNotActive = function () {
        if (this._applicationIsNotActiveTimer) {
            Timers_1.default.clearTimeout(this._applicationIsNotActiveTimer);
            this._applicationIsNotActiveTimer = undefined;
        }
    };
    RootView.prototype._updateKeyboardNavigationState = function (isNavigatingWithKeyboard) {
        if (this._isNavigatingWithKeyboardUpateTimer) {
            Timers_1.default.clearTimeout(this._isNavigatingWithKeyboardUpateTimer);
            this._isNavigatingWithKeyboardUpateTimer = undefined;
        }
        if (UserInterface_1.default.isNavigatingWithKeyboard() !== isNavigatingWithKeyboard) {
            UserInterface_1.default.keyboardNavigationEvent.fire(isNavigatingWithKeyboard);
            var focusClass = isNavigatingWithKeyboard ? this.props.keyBoardFocusOutline : this.props.mouseFocusOutline;
            if (this.state.focusClass !== focusClass) {
                this.setState({ focusClass: focusClass });
            }
        }
    };
    RootView.prototype._onMouseEnter = function (e) {
        this._stopHidePopupTimer();
    };
    RootView.prototype._onMouseLeave = function (e) {
        this._startHidePopupTimer();
    };
    RootView.prototype._startHidePopupTimer = function () {
        var _this = this;
        if (this.props.autoDismiss) {
            // Should we immediately hide it, or did the caller request a delay?
            if (!_.isUndefined(this.props.autoDismissDelay) && this.props.autoDismissDelay > 0) {
                this._hidePopupTimer = Timers_1.default.setTimeout(function () {
                    _this._hidePopupTimer = undefined;
                    _this._dismissPopup();
                }, this.props.autoDismissDelay);
            }
            else {
                this._dismissPopup();
            }
        }
    };
    RootView.prototype._stopHidePopupTimer = function () {
        if (this._hidePopupTimer) {
            Timers_1.default.clearTimeout(this._hidePopupTimer);
            this._hidePopupTimer = undefined;
        }
    };
    RootView.prototype._dismissPopup = function () {
        if (this.props.onDismissPopup) {
            this.props.onDismissPopup();
        }
    };
    RootView.prototype._startRepositionPopupTimer = function () {
        var _this = this;
        this._respositionPopupTimer = Timers_1.default.setInterval(function () {
            _this._recalcPosition();
        }, 500);
    };
    RootView.prototype._stopRepositionPopupTimer = function () {
        if (this._respositionPopupTimer) {
            Timers_1.default.clearInterval(this._respositionPopupTimer);
            this._respositionPopupTimer = undefined;
        }
    };
    // Recalculates the position and constrained size of the popup based on the current position of the anchor and the
    // window size. If necessary, it also measures the unconstrained size of the popup.
    RootView.prototype._recalcPosition = function () {
        // Make a copy of the old state.
        var newState = _.extend({}, this.state);
        if (this.state.isMeasuringPopup) {
            // Get the width/height of the popup.
            var popup = this._mountedComponent;
            if (!popup) {
                return;
            }
            newState.isMeasuringPopup = false;
            newState.popupHeight = popup.clientHeight;
            newState.popupWidth = popup.clientWidth;
        }
        // Get the anchor element.
        var anchorComponent = this.props.activePopup.popupOptions.getAnchor();
        // if the anchor is unmounted, dismiss the popup.
        // Prevents app crash when we try to get dom node from unmounted Component
        if (!anchorComponent) {
            this._dismissPopup();
            return;
        }
        var anchor = null;
        try {
            anchor = ReactDOM.findDOMNode(anchorComponent);
        }
        catch (_a) {
            anchor = null;
        }
        // If the anchor has disappeared, dismiss the popup.
        if (!anchor) {
            this._dismissPopup();
            return;
        }
        // Calculate the absolute position of the anchor element's top/left.
        var anchorRect = anchor.getBoundingClientRect();
        var popupDims = { width: newState.popupWidth, height: newState.popupHeight };
        // Get the width/height of root view window.
        var windowDims = { width: window.innerWidth, height: window.innerHeight };
        // Run the common recalc function and see what magic it spits out.
        var result = PopupContainerViewBase_1.recalcPositionFromLayoutData(windowDims, anchorRect, popupDims, this.props.activePopup.popupOptions.positionPriorities, this.props.activePopup.popupOptions.useInnerPositioning);
        if (!result) {
            this._dismissPopup();
            return;
        }
        _.extend(newState, result);
        if (!_.isEqual(newState, this.state)) {
            this.setState(newState);
        }
    };
    RootView.childContextTypes = {
        focusManager: PropTypes.object
    };
    return RootView;
}(React.Component));
exports.RootView = RootView;
exports.default = RootView;

},{"prop-types":"Iix9","react":"HdMw","react-dom":"X9zx","../common/PopupContainerViewBase":"XSwJ","../common/utils/Timers":"tBdH","./AccessibilityAnnouncer":"IOTu","./utils/FocusManager":"HWpt","./Input":"ypnH","./utils/lodashMini":"Wdkl","./ModalContainer":"xKEu","./PopupContainerView":"Dy27","./UserInterface":"BHAl"}],"mOoD":[function(require,module,exports) {
"use strict";
/**
 * FrontLayerViewManager.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Manages the layering of the main view, modals and popups.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var Timers_1 = require("../common/utils/Timers");
var MouseResponder_1 = require("./utils/MouseResponder");
var RootView_1 = require("./RootView");
var MAX_CACHED_POPUPS = 4;
var FrontLayerViewManager = /** @class */ (function () {
    function FrontLayerViewManager() {
        var _this = this;
        this._modalStack = [];
        this._activePopupAutoDismiss = false;
        this._activePopupAutoDismissDelay = 0;
        this._activePopupShowDelay = 0;
        this._cachedPopups = [];
        // We need to be careful accessing document because it may not be defined
        // in some environments like Electron.
        this._isRtlDefault = typeof document !== 'undefined' &&
            typeof document.documentElement !== 'undefined' && document.documentElement.dir === 'rtl';
        this._isRtlAllowed = true;
        this._isRtlForced = false;
        this._shouldPopupBeDismissed = function (options) {
            return !!_this._activePopupOptions &&
                _this._activePopupOptions.getAnchor() === options.getAnchor();
        };
    }
    FrontLayerViewManager.prototype.setMainView = function (element) {
        this._mainView = element;
        this._renderRootView();
    };
    FrontLayerViewManager.prototype.isModalDisplayed = function (modalId) {
        if (modalId) {
            return this._modalStack.some(function (d) { return d.id === modalId; });
        }
        else {
            return this._modalStack.length > 0;
        }
    };
    FrontLayerViewManager.prototype.showModal = function (modal, modalId, options) {
        // Dismiss any active popups.
        if (this._activePopupOptions) {
            this.dismissPopup(this._activePopupId);
        }
        this._modalStack.push({ modal: modal, id: modalId });
        this._renderRootView();
    };
    FrontLayerViewManager.prototype.dismissModal = function (modalId) {
        this._modalStack = this._modalStack.filter(function (d) { return d.id !== modalId; });
        this._renderRootView();
    };
    FrontLayerViewManager.prototype.dismissAllModals = function () {
        if (this._modalStack.length > 0) {
            this._modalStack = [];
            this._renderRootView();
        }
    };
    FrontLayerViewManager.prototype._updateModalDisplayedState = function () {
        MouseResponder_1.default.setModalIsDisplayed(this.isModalDisplayed());
    };
    FrontLayerViewManager.prototype.showPopup = function (options, popupId, showDelay) {
        // If options.dismissIfShown is true, calling this method will behave like a toggle.
        // On one call, it will open the popup. If it is called when pop up is seen, it will
        // dismiss the popup. If options.dismissIfShown is false, we will simply show the
        // popup always.
        if (options.dismissIfShown) {
            if (this._shouldPopupBeDismissed(options)) {
                this.dismissPopup(popupId);
                return false;
            }
        }
        this._showPopup(options, popupId, showDelay);
        return true;
    };
    FrontLayerViewManager.prototype._showPopup = function (options, popupId, showDelay) {
        var _this = this;
        // New popup is transitioning from maybe cached to active.
        this._cachedPopups = this._cachedPopups.filter(function (popup) { return popup.popupId !== popupId; });
        if (this._activePopupOptions && this._activePopupOptions.cacheable && this._activePopupId !== popupId) {
            // Old popup is transitioning from active to cached.
            this._cachedPopups.push({ popupOptions: this._activePopupOptions, popupId: this._activePopupId });
            this._cachedPopups = this._cachedPopups.slice(-MAX_CACHED_POPUPS);
        }
        // Update fields before calling onDismiss to guard against reentry.
        var oldPopupOptions = this._activePopupOptions;
        this._activePopupOptions = options;
        this._activePopupId = popupId;
        this._activePopupAutoDismiss = false;
        this._activePopupAutoDismissDelay = 0;
        this._activePopupShowDelay = showDelay || 0;
        if (this._popupShowDelayTimer) {
            Timers_1.default.clearTimeout(this._popupShowDelayTimer);
            this._popupShowDelayTimer = undefined;
        }
        if (this._activePopupShowDelay > 0) {
            this._popupShowDelayTimer = Timers_1.default.setTimeout(function () {
                _this._activePopupShowDelay = 0;
                _this._popupShowDelayTimer = undefined;
                _this._renderRootView();
            }, this._activePopupShowDelay);
        }
        if (oldPopupOptions) {
            if (oldPopupOptions.onDismiss) {
                oldPopupOptions.onDismiss();
            }
        }
        this._renderRootView();
    };
    FrontLayerViewManager.prototype.autoDismissPopup = function (popupId, dismissDelay) {
        if (popupId === this._activePopupId && this._activePopupOptions) {
            if (this._popupShowDelayTimer) {
                Timers_1.default.clearTimeout(this._popupShowDelayTimer);
                this._popupShowDelayTimer = undefined;
            }
            this._activePopupAutoDismiss = true;
            this._activePopupAutoDismissDelay = dismissDelay || 0;
            this._renderRootView();
        }
    };
    FrontLayerViewManager.prototype.dismissPopup = function (popupId) {
        if (popupId === this._activePopupId && this._activePopupOptions) {
            if (this._popupShowDelayTimer) {
                Timers_1.default.clearTimeout(this._popupShowDelayTimer);
                this._popupShowDelayTimer = undefined;
            }
            if (this._activePopupOptions.cacheable) {
                // The popup is transitioning from active to cached.
                this._cachedPopups.push({ popupOptions: this._activePopupOptions, popupId: this._activePopupId });
                this._cachedPopups = this._cachedPopups.slice(-MAX_CACHED_POPUPS);
            }
            // Reset fields before calling onDismiss to guard against reentry.
            var activePopupOptions = this._activePopupOptions;
            this._activePopupOptions = undefined;
            this._activePopupId = undefined;
            if (activePopupOptions.onDismiss) {
                activePopupOptions.onDismiss();
            }
            this._renderRootView();
        }
    };
    FrontLayerViewManager.prototype.dismissAllPopups = function () {
        if (this._activePopupId) {
            this.dismissPopup(this._activePopupId);
        }
    };
    FrontLayerViewManager.prototype._renderRootView = function () {
        var _this = this;
        var topModal = this._modalStack.length > 0 ?
            this._modalStack[this._modalStack.length - 1].modal : undefined;
        var activePopup = (!this._activePopupOptions || this._activePopupShowDelay > 0) ? undefined :
            { popupOptions: this._activePopupOptions, popupId: this._activePopupId };
        this._updateModalDisplayedState();
        var rootView = (React.createElement(RootView_1.RootView, { mainView: this._mainView, keyBoardFocusOutline: this._mainView.props.keyBoardFocusOutline, mouseFocusOutline: this._mainView.props.mouseFocusOutline, modal: topModal, activePopup: activePopup, cachedPopup: this._cachedPopups, autoDismiss: this._activePopupAutoDismiss, autoDismissDelay: this._activePopupAutoDismissDelay, onDismissPopup: function () { return _this.dismissPopup(_this._activePopupId); }, writingDirection: this._isRtlForced ? 'rtl' : (this._isRtlAllowed ? 'auto' : 'ltr') }));
        var container = document.getElementsByClassName('app-container')[0];
        ReactDOM.render(rootView, container);
    };
    FrontLayerViewManager.prototype.isPopupDisplayed = function (popupId) {
        if (popupId) {
            return popupId === this._activePopupId;
        }
        else {
            return !!this._activePopupId;
        }
    };
    FrontLayerViewManager.prototype.allowRTL = function (allow) {
        if (this._isRtlAllowed !== allow) {
            this._isRtlAllowed = allow;
            this._renderRootView();
        }
    };
    FrontLayerViewManager.prototype.forceRTL = function (force) {
        if (this._isRtlForced !== force) {
            this._isRtlForced = force;
            this._renderRootView();
        }
    };
    FrontLayerViewManager.prototype.isRTL = function () {
        return this._isRtlForced || (this._isRtlDefault && this._isRtlAllowed);
    };
    return FrontLayerViewManager;
}());
exports.FrontLayerViewManager = FrontLayerViewManager;
exports.default = new FrontLayerViewManager();

},{"react":"HdMw","react-dom":"X9zx","../common/utils/Timers":"tBdH","./utils/MouseResponder":"Ep0V","./RootView":"iF2k"}],"DGV9":[function(require,module,exports) {
"use strict";
/**
 * Popup.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Popup abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = require("../common/assert");
var RX = require("../common/Interfaces");
var FrontLayerViewManager_1 = require("./FrontLayerViewManager");
var Popup = /** @class */ (function (_super) {
    __extends(Popup, _super);
    function Popup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Popup.prototype.show = function (options, popupId, delay) {
        assert_1.default(popupId, "popupId must be a non-empty string. Actual: " + popupId);
        return FrontLayerViewManager_1.default.showPopup(options, popupId, delay);
    };
    Popup.prototype.autoDismiss = function (popupId, delay) {
        assert_1.default(popupId, "popupId must be a non-empty string. Actual: " + popupId);
        FrontLayerViewManager_1.default.autoDismissPopup(popupId, delay);
    };
    Popup.prototype.dismiss = function (popupId) {
        assert_1.default(popupId, "popupId must be a non-empty string. Actual: " + popupId);
        FrontLayerViewManager_1.default.dismissPopup(popupId);
    };
    Popup.prototype.dismissAll = function () {
        FrontLayerViewManager_1.default.dismissAllPopups();
    };
    Popup.prototype.isDisplayed = function (popupId) {
        return FrontLayerViewManager_1.default.isPopupDisplayed(popupId);
    };
    return Popup;
}(RX.Popup));
exports.Popup = Popup;
exports.default = new Popup();

},{"../common/assert":"zDnP","../common/Interfaces":"rFlL","./FrontLayerViewManager":"mOoD"}],"PAJr":[function(require,module,exports) {
"use strict";
/**
 * ActivityIndicator.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Control to display an animated activity indicator.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Timers_1 = require("../common/utils/Timers");
var _activityIndicatorCss = "\n.rx-activity {\n  position: relative;\n  width: 100px;\n  height: 100px;\n}\n.rx-activity .layer-1-translate,\n.rx-activity .layer-3-translate,\n.rx-activity .layer-5-translate,\n.rx-activity .layer-7-translate {\n  -webkit-transform: translate(50px, 50px);\n          transform: translate(50px, 50px);\n}\n.rx-activity .layer-2-translate,\n.rx-activity .layer-4-translate,\n.rx-activity .layer-6-translate,\n.rx-activity .layer-8-translate {\n  -webkit-transform: translate(0px, -40px);\n          transform: translate(0px, -40px);\n}\n.rx-activity .layer-2-content,\n.rx-activity .layer-4-content,\n.rx-activity .layer-6-content,\n.rx-activity .layer-8-content {\n  width: 100px;\n  height: 100px;\n}\n.rx-activity .layer-2-content .shape-0,\n.rx-activity .layer-4-content .shape-0,\n.rx-activity .layer-6-content .shape-0,\n.rx-activity .layer-8-content .shape-0 {\n  position: absolute;\n  left: -7.5px;\n  top: -7.5px;\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n}\n.rx-activity div {\n  position: absolute;\n  width: 0;\n  height: 0;\n}\n.rx-activity .animation {\n  -webkit-animation-duration: 1.4s;\n          animation-duration: 1.4s;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-direction: normal;\n          animation-direction: normal;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-delay: 0s;\n          animation-delay: 0s;\n}\n.rx-activity .layer-1-rotate {\n  -webkit-animation-name: rx-activity-layer-1-rotate;\n          animation-name: rx-activity-layer-1-rotate;\n}\n.rx-activity .layer-2-scale {\n  -webkit-animation-name: rx-activity-layer-2-scale;\n          animation-name: rx-activity-layer-2-scale;\n}\n.rx-activity .layer-3-rotate {\n  -webkit-animation-name: rx-activity-layer-3-rotate;\n          animation-name: rx-activity-layer-3-rotate;\n}\n.rx-activity .layer-4-scale {\n  -webkit-animation-name: rx-activity-layer-4-scale;\n          animation-name: rx-activity-layer-4-scale;\n}\n.rx-activity .layer-5-rotate {\n  -webkit-animation-name: rx-activity-layer-5-rotate;\n          animation-name: rx-activity-layer-5-rotate;\n}\n.rx-activity .layer-6-scale {\n  -webkit-animation-name: rx-activity-layer-6-scale;\n          animation-name: rx-activity-layer-6-scale;\n}\n.rx-activity .layer-7-rotate {\n  -webkit-animation-name: rx-activity-layer-7-rotate;\n          animation-name: rx-activity-layer-7-rotate;\n}\n.rx-activity .layer-8-scale {\n  -webkit-animation-name: rx-activity-layer-8-scale;\n          animation-name: rx-activity-layer-8-scale;\n}\n.rx-activity .shape-0 {\n  background-color: white;\n}\n.rx-activity.hidden {\n  visibility: hidden;\n}\n.rx-activity-extra-small {\n  width: 16px;\n  height: 16px;\n}\n.rx-activity-extra-small .layer-1-translate,\n.rx-activity-extra-small .layer-3-translate,\n.rx-activity-extra-small .layer-5-translate,\n.rx-activity-extra-small .layer-7-translate {\n  -webkit-transform: translate(8px, 8px);\n          transform: translate(8px, 8px);\n}\n.rx-activity-extra-small .layer-2-translate,\n.rx-activity-extra-small .layer-4-translate,\n.rx-activity-extra-small .layer-6-translate,\n.rx-activity-extra-small .layer-8-translate {\n  -webkit-transform: translate(0px, -6.4px);\n          transform: translate(0px, -6.4px);\n}\n.rx-activity-extra-small .layer-2-content,\n.rx-activity-extra-small .layer-4-content,\n.rx-activity-extra-small .layer-6-content,\n.rx-activity-extra-small .layer-8-content {\n  width: 16px;\n  height: 16px;\n}\n.rx-activity-extra-small .layer-2-content .shape-0,\n.rx-activity-extra-small .layer-4-content .shape-0,\n.rx-activity-extra-small .layer-6-content .shape-0,\n.rx-activity-extra-small .layer-8-content .shape-0 {\n  position: absolute;\n  left: -2px;\n  top: -2px;\n  width: 4px;\n  height: 4px;\n  border-radius: 50%;\n}\n.rx-activity-small {\n  width: 20px;\n  height: 20px;\n}\n.rx-activity-small .layer-1-translate,\n.rx-activity-small .layer-3-translate,\n.rx-activity-small .layer-5-translate,\n.rx-activity-small .layer-7-translate {\n  -webkit-transform: translate(10px, 10px);\n          transform: translate(10px, 10px);\n}\n.rx-activity-small .layer-2-translate,\n.rx-activity-small .layer-4-translate,\n.rx-activity-small .layer-6-translate,\n.rx-activity-small .layer-8-translate {\n  -webkit-transform: translate(0px, -8px);\n          transform: translate(0px, -8px);\n}\n.rx-activity-small .layer-2-content,\n.rx-activity-small .layer-4-content,\n.rx-activity-small .layer-6-content,\n.rx-activity-small .layer-8-content {\n  width: 20px;\n  height: 20px;\n}\n.rx-activity-small .layer-2-content .shape-0,\n.rx-activity-small .layer-4-content .shape-0,\n.rx-activity-small .layer-6-content .shape-0,\n.rx-activity-small .layer-8-content .shape-0 {\n  position: absolute;\n  left: -3px;\n  top: -3px;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n}\n.rx-activity-medium {\n  width: 36px;\n  height: 36px;\n}\n.rx-activity-medium .layer-1-translate,\n.rx-activity-medium .layer-3-translate,\n.rx-activity-medium .layer-5-translate,\n.rx-activity-medium .layer-7-translate {\n  -webkit-transform: translate(18px, 18px);\n          transform: translate(18px, 18px);\n}\n.rx-activity-medium .layer-2-translate,\n.rx-activity-medium .layer-4-translate,\n.rx-activity-medium .layer-6-translate,\n.rx-activity-medium .layer-8-translate {\n  -webkit-transform: translate(0px, -14.4px);\n          transform: translate(0px, -14.4px);\n}\n.rx-activity-medium .layer-2-content,\n.rx-activity-medium .layer-4-content,\n.rx-activity-medium .layer-6-content,\n.rx-activity-medium .layer-8-content {\n  width: 36px;\n  height: 36px;\n}\n.rx-activity-medium .layer-2-content .shape-0,\n.rx-activity-medium .layer-4-content .shape-0,\n.rx-activity-medium .layer-6-content .shape-0,\n.rx-activity-medium .layer-8-content .shape-0 {\n  position: absolute;\n  left: -4.5px;\n  top: -4.5px;\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n}\n@-webkit-keyframes rx-activity-layer-1-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(1, 0.2, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(1, 0.2, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-1-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(1, 0.2, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(1, 0.2, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-2-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  14.29% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  47.62% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  66.67% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-2-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  14.29% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  47.62% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  66.67% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-3-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.88, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.88, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-3-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.88, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.88, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-4-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  9.52% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  42.86% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  61.9% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-4-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  9.52% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  42.86% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  61.9% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-5-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.76, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.76, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-5-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.76, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.76, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-6-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  4.76% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  38.1% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  57.14% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-6-scale {\n  0% {\n    -webkit-transform: scale(0.96);\n            transform: scale(0.96);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  4.76% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  38.1% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  57.14% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n            animation-timing-function: cubic-bezier(0.17, 0, 0.83, 1);\n  }\n  100% {\n    -webkit-transform: scale(0.8);\n            transform: scale(0.8);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-7-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.65, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.65, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-7-rotate {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    -webkit-animation-timing-function: cubic-bezier(0.65, 0.21, 0.25, 0.76);\n            animation-timing-function: cubic-bezier(0.65, 0.21, 0.25, 0.76);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@-webkit-keyframes rx-activity-layer-8-scale {\n  0% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  33.33% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 1, 1);\n  }\n  52.38% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.8, 0, 0.78, 1);\n            animation-timing-function: cubic-bezier(0.8, 0, 0.78, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(1.15);\n            transform: scale(1.15);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0, 1);\n  }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n@keyframes rx-activity-layer-8-scale {\n  0% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0.67, 1);\n  }\n  33.33% {\n    -webkit-transform: scale(0.35);\n            transform: scale(0.35);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 1, 1);\n  }\n  52.38% {\n    -webkit-transform: scale(0.45);\n            transform: scale(0.45);\n    -webkit-animation-timing-function: cubic-bezier(0.8, 0, 0.78, 1);\n            animation-timing-function: cubic-bezier(0.8, 0, 0.78, 1);\n  }\n  72.62% {\n    -webkit-transform: scale(1.15);\n            transform: scale(1.15);\n    -webkit-animation-timing-function: cubic-bezier(0.33, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.33, 0, 0, 1);\n  }\n  100% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n  }\n}\n";
var ActivityIndicator = /** @class */ (function (_super) {
    __extends(ActivityIndicator, _super);
    function ActivityIndicator(props) {
        var _this = _super.call(this, props) || this;
        _this._isMounted = false;
        ActivityIndicator._installStyleSheet();
        _this.state = { isVisible: false };
        return _this;
    }
    ActivityIndicator._installStyleSheet = function () {
        // Have we installed the style sheet already?
        if (ActivityIndicator._isStyleSheetInstalled) {
            return;
        }
        // We set the CSS style sheet here to avoid the need
        // for users of this class to carry along another CSS
        // file.
        var head = document.head || document.getElementsByTagName('head')[0];
        var style = document.createElement('style');
        style.type = 'text/css';
        if (style.styleSheet) {
            style.styleSheet.cssText = _activityIndicatorCss;
        }
        else {
            style.appendChild(document.createTextNode(_activityIndicatorCss));
        }
        head.appendChild(style);
        ActivityIndicator._isStyleSheetInstalled = true;
    };
    ActivityIndicator.prototype.componentDidMount = function () {
        var _this = this;
        this._isMounted = true;
        if (this.props.deferTime && this.props.deferTime > 0) {
            Timers_1.default.setTimeout(function () {
                if (_this._isMounted) {
                    _this.setState({ isVisible: true });
                }
            }, this.props.deferTime);
        }
        else {
            this.setState({ isVisible: true });
        }
    };
    ActivityIndicator.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    ActivityIndicator.prototype.render = function () {
        var colorStyle = {
            backgroundColor: this.props.color
        };
        var spinnerClasses = ['rx-activity'];
        if (this.props.size === 'tiny') {
            spinnerClasses.push('rx-activity-extra-small');
        }
        else if (this.props.size === 'small') {
            spinnerClasses.push('rx-activity-small');
        }
        else if (this.props.size === 'medium') {
            spinnerClasses.push('rx-activity-medium');
        }
        if (!this.state.isVisible) {
            spinnerClasses.push('hidden');
        }
        return (React.createElement("div", { className: spinnerClasses.join(' '), "data-test-id": this.props.testId },
            React.createElement("div", { className: 'layer-7' },
                React.createElement("div", { className: 'layer-7-translate' },
                    React.createElement("div", { className: 'layer-7-rotate animation' },
                        React.createElement("div", { className: 'layer-8' },
                            React.createElement("div", { className: 'layer-8-translate' },
                                React.createElement("div", { className: 'layer-8-scale animation' },
                                    React.createElement("div", { className: 'layer-8-content ' },
                                        React.createElement("div", { className: 'shape shape-0', style: colorStyle })))))))),
            React.createElement("div", { className: 'layer-5' },
                React.createElement("div", { className: 'layer-5-translate' },
                    React.createElement("div", { className: 'layer-5-rotate animation' },
                        React.createElement("div", { className: 'layer-6' },
                            React.createElement("div", { className: 'layer-6-translate' },
                                React.createElement("div", { className: 'layer-6-scale animation' },
                                    React.createElement("div", { className: 'layer-6-content ' },
                                        React.createElement("div", { className: 'shape shape-0', style: colorStyle })))))))),
            React.createElement("div", { className: 'layer-3' },
                React.createElement("div", { className: 'layer-3-translate' },
                    React.createElement("div", { className: 'layer-3-rotate animation' },
                        React.createElement("div", { className: 'layer-4' },
                            React.createElement("div", { className: 'layer-4-translate' },
                                React.createElement("div", { className: 'layer-4-scale animation' },
                                    React.createElement("div", { className: 'layer-4-content ' },
                                        React.createElement("div", { className: 'shape shape-0', style: colorStyle })))))))),
            React.createElement("div", { className: 'layer-1' },
                React.createElement("div", { className: 'layer-1-translate' },
                    React.createElement("div", { className: 'layer-1-rotate animation' },
                        React.createElement("div", { className: 'layer-2' },
                            React.createElement("div", { className: 'layer-2-translate' },
                                React.createElement("div", { className: 'layer-2-scale animation' },
                                    React.createElement("div", { className: 'layer-2-content ' },
                                        React.createElement("div", { className: 'shape shape-0', style: colorStyle }))))))))));
    };
    ActivityIndicator._isStyleSheetInstalled = false;
    return ActivityIndicator;
}(React.Component));
exports.ActivityIndicator = ActivityIndicator;
exports.default = ActivityIndicator;

},{"react":"HdMw","../common/utils/Timers":"tBdH"}],"Dkk0":[function(require,module,exports) {
"use strict";
/**
 * Button.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Button abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var AppConfig_1 = require("../common/AppConfig");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var Interfaces_1 = require("../common/Interfaces");
var Timers_1 = require("../common/utils/Timers");
var AccessibilityUtil_1 = require("./AccessibilityUtil");
var FocusManager_1 = require("./utils/FocusManager");
var Styles_1 = require("./Styles");
var UserInterface_1 = require("./UserInterface");
var _styles = {
    defaultButton: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'column',
        flexGrow: 0,
        flexShrink: 0,
        overflow: 'hidden',
        alignItems: 'stretch',
        justifyContent: 'center',
        appRegion: 'no-drag',
        backgroundColor: 'transparent',
        borderColor: 'transparent',
        textAlign: 'left',
        borderWidth: '0'
    }
};
var _longPressTime = 1000;
var _defaultAccessibilityTrait = Interfaces_1.Types.AccessibilityTrait.Button;
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._mountedButton = null;
        _this._ignoreTouchEnd = false;
        _this._ignoreClick = false;
        _this._isMouseOver = false;
        _this._isFocusedWithKeyboard = false;
        _this._isHoverStarted = false;
        _this._onMount = function (ref) {
            _this._mountedButton = ref;
        };
        _this.onClick = function (e) {
            if (_this._ignoreClick) {
                e.stopPropagation();
                _this._ignoreClick = false;
            }
            else if (!_this.props.disabled && _this.props.onPress) {
                _this.props.onPress(e);
            }
        };
        _this._onContextMenu = function (e) {
            if (_this.props.onContextMenu) {
                _this.props.onContextMenu(e);
            }
        };
        _this._onMouseDown = function (e) {
            if (_this.props.disabled) {
                return;
            }
            _this._isMouseOver = true;
            if (_this.props.onPressIn) {
                _this.props.onPressIn(e);
            }
            if (_this.props.onLongPress) {
                _this._lastMouseDownEvent = e;
                e.persist();
                // In the unlikely event we get 2 mouse down events, clear existing timer
                if (_this._longPressTimer) {
                    Timers_1.default.clearTimeout(_this._longPressTimer);
                }
                _this._longPressTimer = Timers_1.default.setTimeout(function () {
                    _this._longPressTimer = undefined;
                    if (_this.props.onLongPress) {
                        // lastMouseDownEvent can never be undefined at this point
                        _this.props.onLongPress(_this._lastMouseDownEvent);
                        if ('touches' in e) {
                            _this._ignoreTouchEnd = true;
                        }
                        else {
                            _this._ignoreClick = true;
                        }
                    }
                }, _this.props.delayLongPress || _longPressTime);
            }
        };
        _this._onTouchMove = function (e) {
            var buttonRect = e.target.getBoundingClientRect();
            var wasMouseOver = _this._isMouseOver;
            var isMouseOver = e.nativeEvent.touches[0].clientX > buttonRect.left &&
                e.nativeEvent.touches[0].clientX < buttonRect.right &&
                e.nativeEvent.touches[0].clientY > buttonRect.top &&
                e.nativeEvent.touches[0].clientY < buttonRect.bottom;
            // Touch has left the button, cancel the longpress handler.
            if (wasMouseOver && !isMouseOver) {
                if (_this._longPressTimer) {
                    clearTimeout(_this._longPressTimer);
                }
                if (_this.props.onHoverEnd) {
                    _this.props.onHoverEnd(e);
                }
            }
            _this._isMouseOver = isMouseOver;
        };
        _this._onMouseUp = function (e) {
            if (!_this.props.disabled && _this.props.onPressOut) {
                _this.props.onPressOut(e);
            }
            if (_this._longPressTimer) {
                Timers_1.default.clearTimeout(_this._longPressTimer);
            }
        };
        /**
         * Case where onPressOut is not triggered and the bubbling is canceled:
         * 1- Long press > release
         *
         * Cases where onPressOut is triggered:
         * 2- Long press > leave button > release touch
         * 3- Tap
         *
         * All other cases: onPressOut is not triggered and the bubbling is NOT canceled:
         */
        _this._onTouchEnd = function (e) {
            if (_this._isMouseOver && _this._ignoreTouchEnd) {
                /* 1 */
                e.stopPropagation();
            }
            else if (
            /* 2 */
            !_this._isMouseOver && _this._ignoreTouchEnd ||
                /* 3 */
                _this._isMouseOver && !_this._ignoreTouchEnd) {
                if ('touches' in e) {
                    // Stop the to event sequence to prevent trigger button.onMouseDown
                    e.preventDefault();
                    if (_this.props.onPress) {
                        _this.props.onPress(e);
                    }
                }
                if (_this.props.onPressOut) {
                    _this.props.onPressOut(e);
                }
            }
            _this._ignoreTouchEnd = false;
            if (_this._longPressTimer) {
                Timers_1.default.clearTimeout(_this._longPressTimer);
            }
        };
        _this._onMouseEnter = function (e) {
            _this._isMouseOver = true;
            _this._onHoverStart(e);
        };
        _this._onMouseLeave = function (e) {
            _this._isMouseOver = false;
            _this._onHoverEnd(e);
            // The mouse is still down. A long press may be just happened. Re-enable the next click.
            _this._ignoreClick = false;
            // Cancel longpress if mouse has left.
            if (_this._longPressTimer) {
                Timers_1.default.clearTimeout(_this._longPressTimer);
            }
        };
        // When we get focus on an element, show the hover effect on the element.
        // This ensures that users using keyboard also get the similar experience as mouse users for accessibility.
        _this._onFocus = function (e) {
            _this._isFocusedWithKeyboard = UserInterface_1.default.isNavigatingWithKeyboard();
            _this._onHoverStart(e);
            if (_this.props.onFocus) {
                _this.props.onFocus(e);
            }
        };
        _this._onBlur = function (e) {
            _this._isFocusedWithKeyboard = false;
            _this._onHoverEnd(e);
            if (_this.props.onBlur) {
                _this.props.onBlur(e);
            }
        };
        _this._onHoverStart = function (e) {
            if (!_this._isHoverStarted && (_this._isMouseOver || _this._isFocusedWithKeyboard)) {
                _this._isHoverStarted = true;
                if (_this.props.onHoverStart) {
                    _this.props.onHoverStart(e);
                }
            }
        };
        _this._onHoverEnd = function (e) {
            if (_this._isHoverStarted && !_this._isMouseOver && !_this._isFocusedWithKeyboard) {
                _this._isHoverStarted = false;
                if (_this.props.onHoverEnd) {
                    _this.props.onHoverEnd(e);
                }
            }
        };
        if (context && context.hasRxButtonAscendant) {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.warn('Button components should not be embedded. Some APIs, e.g. Accessibility, will not work.');
            }
        }
        return _this;
    }
    Button.prototype.getChildContext = function () {
        return { hasRxButtonAscendant: true };
    };
    Button.prototype.render = function () {
        var ariaRole = AccessibilityUtil_1.default.accessibilityTraitToString(this.props.accessibilityTraits, _defaultAccessibilityTrait);
        var ariaSelected = AccessibilityUtil_1.default.accessibilityTraitToAriaSelected(this.props.accessibilityTraits);
        var ariaChecked = AccessibilityUtil_1.default.accessibilityTraitToAriaChecked(this.props.accessibilityTraits);
        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);
        var ariaHasPopup = AccessibilityUtil_1.default.accessibilityTraitToAriaHasPopup(this.props.accessibilityTraits);
        // NOTE: We use tabIndex=0 to support focus.
        return (React.createElement("button", { ref: this._onMount, style: this._getStyles(), role: ariaRole, title: this.props.title, tabIndex: this.props.tabIndex, "aria-label": this.props.accessibilityLabel || this.props.title, "aria-disabled": this.props.disabled, "aria-hidden": isAriaHidden, "aria-selected": ariaSelected, "aria-checked": ariaChecked, onClick: this.onClick, onTouchStart: this._onMouseDown, onTouchMove: this._onTouchMove, onTouchEnd: this._onTouchEnd, onContextMenu: this._onContextMenu, onMouseDown: this._onMouseDown, onMouseUp: this._onMouseUp, onMouseEnter: this._onMouseEnter, onMouseLeave: this._onMouseLeave, onFocus: this._onFocus, onBlur: this._onBlur, onKeyDown: this.props.onKeyPress, disabled: this.props.disabled, "aria-haspopup": ariaHasPopup, "aria-controls": this.props.ariaControls, id: this.props.id, "data-test-id": this.props.testId }, this.props.children));
    };
    Button.prototype.componentDidMount = function () {
        if (this.props.autoFocus) {
            this.requestFocus();
        }
    };
    Button.prototype.requestFocus = function () {
        var _this = this;
        AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () { return _this.focus(); }, function () { return _this._mountedButton !== null; });
    };
    Button.prototype.focus = function () {
        if (this._mountedButton) {
            this._mountedButton.focus();
        }
    };
    Button.prototype.blur = function () {
        if (this._mountedButton) {
            this._mountedButton.blur();
        }
    };
    Button.prototype._getStyles = function () {
        var buttonStyleMutations = {};
        var buttonStyles = Styles_1.default.combine(this.props.style);
        // Specify default style for padding only if padding is not already specified
        if (buttonStyles && buttonStyles.padding === undefined &&
            buttonStyles.paddingRight === undefined && buttonStyles.paddingLeft === undefined &&
            buttonStyles.paddingBottom === undefined && buttonStyles.paddingTop === undefined &&
            buttonStyles.paddingHorizontal === undefined && buttonStyles.paddingVertical === undefined) {
            buttonStyleMutations.padding = 0;
        }
        if (this.props.disabled) {
            buttonStyleMutations.opacity = this.props.disabledOpacity !== undefined ? this.props.disabledOpacity : 0.5;
        }
        // Default to 'pointer' cursor for enabled buttons unless otherwise specified.
        if (!buttonStyles || !buttonStyles.cursor) {
            buttonStyleMutations.cursor = this.props.disabled ? 'default' : 'pointer';
        }
        return Styles_1.default.combine([_styles.defaultButton, buttonStyles, buttonStyleMutations]);
    };
    Button.contextTypes = {
        hasRxButtonAscendant: PropTypes.bool,
        focusArbitrator: PropTypes.object
    };
    Button.childContextTypes = {
        hasRxButtonAscendant: PropTypes.bool
    };
    return Button;
}(Interfaces_1.Button));
exports.Button = Button;
FocusManager_1.applyFocusableComponentMixin(Button);
exports.default = Button;

},{"prop-types":"Iix9","react":"HdMw","../common/AppConfig":"IaP6","../common/utils/AutoFocusHelper":"uohT","../common/Interfaces":"rFlL","../common/utils/Timers":"tBdH","./AccessibilityUtil":"w171","./utils/FocusManager":"HWpt","./Styles":"FK4c","./UserInterface":"BHAl"}],"SEaK":[function(require,module,exports) {
"use strict";
/**
 * Modal.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Modal abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = require("../common/assert");
var RX = require("../common/Interfaces");
var FrontLayerViewManager_1 = require("./FrontLayerViewManager");
var Modal = /** @class */ (function (_super) {
    __extends(Modal, _super);
    function Modal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Modal.prototype.isDisplayed = function (modalId) {
        return FrontLayerViewManager_1.default.isModalDisplayed(modalId);
    };
    Modal.prototype.show = function (modal, modalId, options) {
        assert_1.default(modal, "modal must be valid. Actual " + modal);
        assert_1.default(modalId, "modalId must be a non-empty string. Actual: " + modalId);
        FrontLayerViewManager_1.default.showModal(modal, modalId, options);
    };
    Modal.prototype.dismiss = function (modalId) {
        assert_1.default(modalId, "modalId must be a non-empty string. Actual: " + modalId);
        FrontLayerViewManager_1.default.dismissModal(modalId);
    };
    Modal.prototype.dismissAll = function () {
        FrontLayerViewManager_1.default.dismissAllModals();
    };
    return Modal;
}(RX.Modal));
exports.Modal = Modal;
exports.default = new Modal();

},{"../common/assert":"zDnP","../common/Interfaces":"rFlL","./FrontLayerViewManager":"mOoD"}],"rfZP":[function(require,module,exports) {
"use strict";
/**
 * Text.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Text abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var Interfaces_1 = require("../common/Interfaces");
var AccessibilityUtil_1 = require("./AccessibilityUtil");
var Styles_1 = require("./Styles");
// Adding a CSS rule to display non-selectable texts. Those texts
// will be displayed as pseudo elements to prevent them from being copied
// to clipboard. It's not possible to style pseudo elements with inline
// styles, so, we're dynamically creating a <style> tag with the rule.
if (typeof document !== 'undefined') {
    var textAsPseudoElement = '[data-text-as-pseudo-element]::before { content: attr(data-text-as-pseudo-element); }';
    var style = document.createElement('style');
    style.type = 'text/css';
    style.appendChild(document.createTextNode(textAsPseudoElement));
    document.head.appendChild(style);
}
// Cast to any to allow merging of web and RX styles
var _styles = {
    defaultStyle: {
        position: 'relative',
        display: 'inline',
        flexGrow: 0,
        flexShrink: 0,
        overflow: 'hidden',
        whiteSpace: 'pre-wrap',
        overflowWrap: 'break-word'
    },
    ellipsis: {
        position: 'relative',
        display: 'inline',
        flexGrow: 0,
        flexShrink: 0,
        overflow: 'hidden',
        whiteSpace: 'pre',
        textOverflow: 'ellipsis'
    }
};
var Text = /** @class */ (function (_super) {
    __extends(Text, _super);
    function Text() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._mountedText = null;
        _this._onMount = function (ref) {
            _this._mountedText = ref;
        };
        return _this;
    }
    Text.prototype.getChildContext = function () {
        // Let descendant Types components know that their nearest Types ancestor is an Types.Text.
        // Because they're in an Types.Text, they should style themselves specially for appearing
        // inline with text.
        return { isRxParentAText: true };
    };
    Text.prototype.render = function () {
        // Handle special case
        if (typeof this.props.children === 'string' && this.props.children === '\n') {
            return React.createElement("br", null);
        }
        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);
        if (this.props.selectable || typeof this.props.children !== 'string') {
            return (React.createElement("div", { ref: this._onMount, style: this._getStyles(), "aria-hidden": isAriaHidden, onClick: this.props.onPress, id: this.props.id, onContextMenu: this.props.onContextMenu, "data-test-id": this.props.testId }, this.props.children));
        }
        else {
            // user-select CSS property doesn't prevent the text from being copied to clipboard.
            // To avoid getting to clipboard, the text from data-text-as-pseudo-element attribute
            // will be displayed as pseudo element.
            return (React.createElement("div", { ref: this._onMount, style: this._getStyles(), "aria-hidden": isAriaHidden, onClick: this.props.onPress, onContextMenu: this.props.onContextMenu, "data-text-as-pseudo-element": this.props.children, id: this.props.id, "data-test-id": this.props.testId }));
        }
    };
    Text.prototype.componentDidMount = function () {
        if (this.props.autoFocus) {
            this.requestFocus();
        }
    };
    Text.prototype._getStyles = function () {
        // There's no way in HTML to properly handle numberOfLines > 1,
        // but we can correctly handle the common case where numberOfLines is 1.
        var combinedStyles = Styles_1.default.combine([this.props.numberOfLines === 1 ?
                _styles.ellipsis : _styles.defaultStyle, this.props.style]);
        if (this.props.selectable) {
            combinedStyles.userSelect = 'text';
            combinedStyles.WebkitUserSelect = 'text';
            combinedStyles.MozUserSelect = 'text';
            combinedStyles.msUserSelect = 'text';
        }
        // Handle cursor styles
        if (!combinedStyles.cursor) {
            if (this.props.selectable) {
                combinedStyles.cursor = 'text';
            }
            else {
                combinedStyles.cursor = 'inherit';
            }
            if (this.props.onPress) {
                combinedStyles.cursor = 'pointer';
            }
        }
        return combinedStyles;
    };
    Text.prototype.blur = function () {
        if (this._mountedText) {
            this._mountedText.blur();
        }
    };
    Text.prototype.requestFocus = function () {
        var _this = this;
        AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () { return _this.focus(); }, function () { return _this._mountedText !== null; });
    };
    Text.prototype.focus = function () {
        if (this._mountedText) {
            this._mountedText.focus();
        }
    };
    Text.prototype.getSelectedText = function () {
        return ''; // Not implemented yet.
    };
    Text.contextTypes = {
        focusArbitrator: PropTypes.object
    };
    Text.childContextTypes = {
        isRxParentAText: PropTypes.bool.isRequired
    };
    return Text;
}(Interfaces_1.Text));
exports.Text = Text;
exports.default = Text;

},{"prop-types":"Iix9","react":"HdMw","../common/utils/AutoFocusHelper":"uohT","../common/Interfaces":"rFlL","./AccessibilityUtil":"w171","./Styles":"FK4c"}],"jZ3P":[function(require,module,exports) {
"use strict";
/**
 * executeTransition.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Provides a convenient API for applying a CSS transition to a DOM element and
 * notifying when the transition is complete.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Timers_1 = require("../../common/utils/Timers");
var _ = require("./../utils/lodashMini");
// Convenient API for applying a CSS transition to a DOM element. Calls `done` when the transition is completed.
function executeTransition(element, transitions, done) {
    var longestDurationPlusDelay = 0;
    var longestDurationProperty = '';
    var cssTransitions = [];
    _.each(transitions, function (transition) {
        var property = transition.property;
        var duration = transition.duration;
        var timing = transition.timing === undefined ? 'linear' : transition.timing;
        var delay = transition.delay === undefined ? 0 : transition.delay;
        var from = transition.from;
        if (duration + delay > longestDurationPlusDelay) {
            longestDurationPlusDelay = duration + delay;
            longestDurationProperty = property;
        }
        // Initial state
        element.style[property] = from;
        // Resolve styles. This is a trick to force the browser to refresh the
        // computed styles. Without this, it won't pick up the new "from" value
        // that we just set above.
        // tslint:disable-next-line
        getComputedStyle(element).opacity;
        // TODO: Cross-browser equivalent of 'transition' style (e.g. vendor prefixed).
        cssTransitions.push(property + ' ' + duration + 'ms ' + timing + ' ' + delay + 'ms');
    });
    element.style.transition = cssTransitions.join(', ');
    var finish;
    var onTransitionEnd = function (ev) {
        if (ev.target === element && ev.propertyName === longestDurationProperty) {
            finish();
        }
    };
    // TODO: Cross-browser equivalent of 'transitionEnd' event (e.g. vendor prefixed).
    element.addEventListener('webkitTransitionEnd', onTransitionEnd);
    element.addEventListener('transitionEnd', onTransitionEnd);
    var timeoutId = 0;
    var didFinish = false;
    finish = function () {
        if (!didFinish) {
            Timers_1.default.clearTimeout(timeoutId);
            // Only complete the transition if we are ending the same transition it was initially set.
            // There are cases where transitions may be overriden before the transition ends.
            if (element.dataset.transitionId === timeoutId.toString()) {
                // TODO: Cross-browser equivalent of 'transitionEnd' event (e.g. vendor prefixed).
                element.removeEventListener('webkitTransitionEnd', onTransitionEnd);
                element.removeEventListener('transitionEnd', onTransitionEnd);
                delete element.dataset.transitionId;
                element.style.transition = 'none';
                didFinish = true;
                done();
            }
        }
    };
    // Watchdog timeout for cases where transitionEnd event doesn't fire.
    timeoutId = Timers_1.default.setTimeout(function () {
        // If the item was removed from the DOM (which can happen if a
        // rerender occurred), don't bother finishing. We don't want to do
        // this in the transition event finish path because it's expensive
        // and unnecessary in that case because the transition event
        // implies that the element is still in the DOC
        if (document.body.contains(element)) {
            finish();
        }
    }, longestDurationPlusDelay + 10);
    element.dataset.transitionId = timeoutId.toString();
    // Set the "to" values.
    _.each(transitions, function (transition) {
        var property = transition.property;
        var to = transition.to;
        element.style[property] = to;
    });
}
exports.executeTransition = executeTransition;
exports.default = executeTransition;

},{"../../common/utils/Timers":"tBdH","./../utils/lodashMini":"Wdkl"}],"EAUU":[function(require,module,exports) {
"use strict";
/**
 * MonitorListEdits.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Looks for insertions, removals, and moves each time the component receives new
 * children. Communicates these list edits to the consumer giving it the opportunity
 * to animate the edits.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var assert_1 = require("../../common/assert");
var _ = require("./../utils/lodashMini");
function getPosition(el) {
    return {
        left: el.offsetLeft,
        top: el.offsetTop
    };
}
function extractChildrenKeys(children) {
    var keys = [];
    if (children) {
        React.Children.forEach(children, function (child, index) {
            if (child) {
                var childReactElement = child;
                assert_1.default(childReactElement.key !== undefined && childReactElement.key !== null, 'Children passed to a `View` with child animations enabled must have a `key`');
                if (childReactElement.key !== null) {
                    keys.push(childReactElement.key);
                }
            }
        });
    }
    return keys;
}
// Returns true if the children were edited (e.g. an item was added, moved, or removed).
// We use this information to determine whether or not we'll need to play any list edit
// animations.
function childrenEdited(prevChildrenKeys, nextChildrenKeys) {
    return !_.isEqual(prevChildrenKeys, nextChildrenKeys);
}
function createChildrenMap(children) {
    var map = {};
    if (children) {
        React.Children.forEach(children, function (child, index) {
            if (child) {
                var childReactElement = child;
                assert_1.default('key' in childReactElement, 'Children passed to a `View` with child animations enabled must have a `key`');
                var index_1 = childReactElement.key;
                if (index_1 !== null) {
                    map[index_1] = childReactElement;
                }
            }
        });
    }
    return map;
}
function computePositions(refs) {
    var positions = {};
    _.each(refs, function (ref, key) {
        positions[key] = getPosition(ref.domElement);
    });
    return positions;
}
// The states the React component can be in.
var ComponentPhaseEnum;
(function (ComponentPhaseEnum) {
    // The rest state. The component is not in the middle of anything.
    ComponentPhaseEnum[ComponentPhaseEnum["rest"] = 0] = "rest";
    // The component is about to play an animation. This occurs when the component
    // detected a list edit in componentWillUpdate but hasn't yet gotten the opportunity
    // to start the animation in componentDidUpdate.
    ComponentPhaseEnum[ComponentPhaseEnum["willAnimate"] = 1] = "willAnimate";
    // The component is in the middle of playing an animation. The component should not
    // rerender while in this state.
    ComponentPhaseEnum[ComponentPhaseEnum["animating"] = 2] = "animating";
})(ComponentPhaseEnum || (ComponentPhaseEnum = {}));
var MonitorListEdits = /** @class */ (function (_super) {
    __extends(MonitorListEdits, _super);
    function MonitorListEdits() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._itemRefs = {}; // Updated after render but before componentDidUpdate
        _this._refReplacementCache = {};
        _this._isMounted = false;
        _this._phase = ComponentPhaseEnum.rest;
        return _this;
    }
    MonitorListEdits.prototype.UNSAFE_componentWillMount = function () {
        this._childrenKeys = extractChildrenKeys(this.props.children);
        this._childrenMap = createChildrenMap(this.props.children);
    };
    MonitorListEdits.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    MonitorListEdits.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    MonitorListEdits.prototype.shouldComponentUpdate = function () {
        return this._phase !== ComponentPhaseEnum.animating;
    };
    MonitorListEdits.prototype.UNSAFE_componentWillUpdate = function (nextProps) {
        assert_1.default(this._phase !== ComponentPhaseEnum.animating, 'componentWillUpdate should never run while the component is animating due to the implementation of shouldComponentUpdate');
        var prevChildrenKeys = this._childrenKeys;
        var nextChildrenKeys = extractChildrenKeys(nextProps.children);
        this._childrenKeys = nextChildrenKeys;
        if (childrenEdited(prevChildrenKeys, nextChildrenKeys)) {
            var prevChildrenMap_1 = this._childrenMap;
            var nextChildrenMap_1 = createChildrenMap(nextProps.children);
            this._childrenMap = nextChildrenMap_1;
            var removed_1 = [];
            var added_1 = [];
            var other_1 = [];
            Object.keys(prevChildrenMap_1).forEach(function (key) {
                if (!(key in nextChildrenMap_1)) {
                    removed_1.push(prevChildrenMap_1[key]);
                }
            });
            Object.keys(nextChildrenMap_1).forEach(function (key) {
                if (!(key in prevChildrenMap_1)) {
                    added_1.push(nextChildrenMap_1[key]);
                }
                else {
                    other_1.push(nextChildrenMap_1[key]);
                }
            });
            this._phase = ComponentPhaseEnum.willAnimate;
            this._willAnimatePhaseInfo = {
                added: added_1,
                removed: removed_1,
                other: other_1,
                prevPositions: computePositions(this._itemRefs),
                prevChildrenMap: prevChildrenMap_1
            };
        }
    };
    MonitorListEdits.prototype.render = function () {
        var _this = this;
        this._childrenToRender = [];
        // We need to cast this to "any" because of a recent bug introduced
        // into React @types where children is redfined as ReactNode rather
        // than ReactNode[].
        _.each(this.props.children, function (child) {
            if (child) {
                var childElement_1 = child;
                var refData = _this._refReplacementCache[childElement_1.key];
                // Reuse the cached replacement ref function instead of recreating it every render, unless the child's ref changes.
                if (!refData || refData.exisiting !== childElement_1.ref) {
                    refData = {
                        replacement: function (refValue) { _this._saveRef(childElement_1, refValue); },
                        exisiting: childElement_1.ref
                    };
                    _this._refReplacementCache[childElement_1.key] = refData;
                }
                _this._childrenToRender.push(React.cloneElement(childElement_1, { ref: refData.replacement }));
            }
        });
        if (this._phase === ComponentPhaseEnum.willAnimate) {
            _.each(this._willAnimatePhaseInfo.removed, function (childElement) {
                if (childElement) {
                    _this._childrenToRender.push(React.cloneElement(childElement, {
                        ref: function (refValue) {
                            _this._saveRef(childElement, refValue);
                        }
                    }));
                }
            });
        }
        // Do a shallow clone and remove the props that don't
        // apply to div elements.
        var props = _.clone(this.props);
        delete props.componentWillAnimate;
        delete props.testId;
        return (React.createElement("div", __assign({}, props, { "data-test-id": this.props.testId }), this._childrenToRender));
    };
    MonitorListEdits.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        assert_1.default(this._phase !== ComponentPhaseEnum.animating, 'componentDidUpdate should never run while the component is animating due to the implementation of shouldComponentUpdate');
        if (this._phase === ComponentPhaseEnum.willAnimate) {
            var phaseInfo_1 = this._willAnimatePhaseInfo;
            var prevPositions_1 = phaseInfo_1.prevPositions;
            var nextPositions_1 = computePositions(this._itemRefs);
            var added = phaseInfo_1.added.map(function (child) {
                return {
                    element: _this._itemRefs[child.key].reactElement
                };
            });
            var removed = phaseInfo_1.removed.map(function (child) {
                var key = child.key;
                var prevPos = prevPositions_1[key];
                var nextPos = nextPositions_1[key];
                return {
                    leftDelta: nextPos.left - prevPos.left,
                    topDelta: nextPos.top - prevPos.top,
                    element: _this._itemRefs[key].reactElement
                };
            });
            var moved_1 = [];
            phaseInfo_1.other.map(function (child) {
                var key = child.key;
                var prevPos = prevPositions_1[key];
                var nextPos = nextPositions_1[key];
                if (prevPos.left !== nextPos.left || prevPos.top !== nextPos.top) {
                    moved_1.push({
                        leftDelta: nextPos.left - prevPos.left,
                        topDelta: nextPos.top - prevPos.top,
                        element: _this._itemRefs[key].reactElement
                    });
                }
            });
            this._phase = ComponentPhaseEnum.animating;
            this._willAnimatePhaseInfo = undefined;
            this.props.componentWillAnimate({
                added: added,
                moved: moved_1,
                removed: removed
            }, function () {
                _this._phase = ComponentPhaseEnum.rest;
                if (_this._isMounted) {
                    _this.forceUpdate();
                }
                phaseInfo_1.removed.forEach(function (child) {
                    var key = child.key;
                    delete _this._refReplacementCache[key];
                });
            });
        }
    };
    MonitorListEdits.prototype._saveRef = function (reactElement, refValue) {
        if (refValue === null) {
            delete this._itemRefs[reactElement.key];
        }
        else {
            // Cache both the react component reference and the corresponding HTML DOM node (for perf reasons).
            this._itemRefs[reactElement.key] = {
                reactElement: refValue,
                domElement: ReactDOM.findDOMNode(refValue)
            };
        }
        assert_1.default(typeof reactElement.ref === 'function' || reactElement.ref === undefined || reactElement.ref === null, 'Invalid ref: ' + reactElement.ref + '. Only callback refs are supported when using child animations on a `View`');
        // If the creator of the reactElement also provided a ref, call it.
        if (typeof reactElement.ref === 'function') {
            reactElement.ref(refValue);
        }
    };
    return MonitorListEdits;
}(React.Component));
exports.MonitorListEdits = MonitorListEdits;

},{"react":"HdMw","react-dom":"X9zx","../../common/assert":"zDnP","./../utils/lodashMini":"Wdkl"}],"OraB":[function(require,module,exports) {
"use strict";
/**
 * AnimateListEdits.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Each time the component receives new children, animates insertions, removals,
 * and moves that occurred since the previous render.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var executeTransition_1 = require("../animated/executeTransition");
var lodashMini_1 = require("./../utils/lodashMini");
var MonitorListEdits_1 = require("./MonitorListEdits");
var AnimateListEdits = /** @class */ (function (_super) {
    __extends(AnimateListEdits, _super);
    function AnimateListEdits() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimateListEdits.prototype._handleWillAnimate = function (edits, done) {
        var counter = 1;
        var animationCompleted = function () {
            --counter;
            if (counter === 0) {
                done();
            }
        };
        var delay = 0;
        if (edits.removed.length > 0 && this.props.animateChildLeave) {
            edits.removed.forEach(function (move) {
                try {
                    var domNode = ReactDOM.findDOMNode(move.element);
                    if (domNode) {
                        domNode.style.transform = 'translateY(' + -move.topDelta + 'px)';
                        counter++;
                        executeTransition_1.default(domNode, [{
                                property: 'opacity',
                                from: 1,
                                to: 0,
                                delay: delay,
                                duration: 150,
                                timing: 'linear'
                            }], animationCompleted);
                    }
                }
                catch (_a) {
                    // Exception probably due to race condition in unmounting. Ignore.
                }
            });
            delay += 75;
        }
        if (edits.moved.length > 0 && this.props.animateChildMove) {
            edits.moved.forEach(function (move) {
                counter++;
                try {
                    var domNode = ReactDOM.findDOMNode(move.element);
                    if (domNode) {
                        executeTransition_1.default(domNode, [{
                                property: 'transform',
                                from: 'translateY(' + -move.topDelta + 'px)',
                                to: '',
                                delay: delay,
                                duration: 300,
                                timing: 'ease-out'
                            }], animationCompleted);
                    }
                }
                catch (_a) {
                    // Exception probably due to race condition in unmounting. Ignore.
                }
            });
        }
        delay += 75;
        if (edits.added.length > 0 && this.props.animateChildEnter) {
            edits.added.forEach(function (move) {
                counter++;
                try {
                    var domNode = ReactDOM.findDOMNode(move.element);
                    if (domNode) {
                        executeTransition_1.default(domNode, [{
                                property: 'opacity',
                                from: 0,
                                to: 1,
                                delay: delay,
                                duration: 150,
                                timing: 'linear'
                            }], animationCompleted);
                    }
                }
                catch (_a) {
                    // Exception probably due to race condition in unmounting. Ignore.
                }
            });
        }
        animationCompleted();
    };
    AnimateListEdits.prototype.render = function () {
        var _this = this;
        // Do a shallow clone and remove the props that don't
        // apply to the MontiroListEdits component.
        var props = lodashMini_1.clone(this.props);
        delete props.animateChildEnter;
        delete props.animateChildLeave;
        delete props.animateChildMove;
        return (React.createElement(MonitorListEdits_1.MonitorListEdits, __assign({ componentWillAnimate: function (edits, done) { return _this._handleWillAnimate(edits, done); } }, props), this.props.children));
    };
    return AnimateListEdits;
}(React.Component));
exports.AnimateListEdits = AnimateListEdits;
exports.default = AnimateListEdits;

},{"react":"HdMw","react-dom":"X9zx","../animated/executeTransition":"jZ3P","./../utils/lodashMini":"Wdkl","./MonitorListEdits":"EAUU"}],"xhV4":[function(require,module,exports) {
"use strict";
/**
 * restyleForInlineText.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * When a ReactXP component appears as a child of an RX.Text, it needs to be styled
 * specially so that it appears inline with the text rather than introducing line
 * breaks.
 *
 * This utility restyles the component that is passed to it as inline so it flows
 * with the text. When a ReactXP component is a child of a text, pass the return value
 * of its render method to this utility. See RX.View for an example.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var assert_1 = require("../../common/assert");
var lodashMini_1 = require("./../utils/lodashMini");
function restyleForInlineText(reactElement) {
    var style = reactElement.props.style;
    assert_1.default(style &&
        style.width !== undefined &&
        style.height !== undefined, 'Children of an <RX.Text> must have a defined height and width');
    /*
      We'll use display: inline-block for inline element because
      inline-flex will introduce new lines into the text that is
      copied to the clipboard. In most our use-cases inline-block
      is fine and should behave same as inline-flex.

      Example:
        <flex>
          <inline> // InlineView
            <inline text node>
            <inline-flex> // set by this function - will introduce new line when copied
              <inline transparent text with emoticon text representation>
              <inline-block sprite clipping element>
                <inline-block sprite background texture>
            <inline text node>

        result into selection: "[text node][transparent text][new line][text node]"
        with inline-block this will properly resolve as "[text node][transparent text][text node]"
    */
    return React.cloneElement(reactElement, {
        style: lodashMini_1.assign({}, style, {
            display: 'inline-block',
            // Reset the line height so the value from outside
            // the inlined item doesn't cascade into this element.
            lineHeight: 'normal'
        })
    });
}
exports.default = restyleForInlineText;

},{"react":"HdMw","../../common/assert":"zDnP","./../utils/lodashMini":"Wdkl"}],"m77O":[function(require,module,exports) {
"use strict";
/**
 * ViewBase.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * A base class for the Web-specific implementation of the cross-platform View abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../common/AppConfig");
var RX = require("../common/Interfaces");
var PromiseDefer_1 = require("../common/utils/PromiseDefer");
var Timers_1 = require("../common/utils/Timers");
var FrontLayerViewManager_1 = require("./FrontLayerViewManager");
var _ = require("./utils/lodashMini");
// We create a periodic timer to detect layout changes that are performed behind
// our back by the browser's layout engine. We do this more aggressively when
// the app is known to be active and in the foreground.
var _layoutTimerActiveDuration = 1000;
var _layoutTimerInactiveDuration = 10000;
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isMounted = false;
        _this._isPopupDisplayed = false;
        _this._lastX = 0;
        _this._lastY = 0;
        _this._lastWidth = 0;
        _this._lastHeight = 0;
        return _this;
    }
    // Sets the activation state so we can stop our periodic timer
    // when the app is in the background.
    ViewBase.setActivationState = function (newState) {
        if (ViewBase._appActivationState !== newState) {
            ViewBase._appActivationState = newState;
            // Cancel any existing timers.
            if (ViewBase._viewCheckingTimer) {
                Timers_1.default.clearInterval(ViewBase._viewCheckingTimer);
                ViewBase._viewCheckingTimer = undefined;
            }
            if (ViewBase._viewCheckingList.length > 0) {
                // If we're becoming active, check and report layout changes immediately.
                if (newState === RX.Types.AppActivationState.Active) {
                    ViewBase._checkViews();
                }
                ViewBase._viewCheckingTimer = Timers_1.default.setInterval(ViewBase._checkViews, newState === RX.Types.AppActivationState.Active ?
                    _layoutTimerActiveDuration : _layoutTimerInactiveDuration);
            }
        }
    };
    ViewBase.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        if (!!this.props.onLayout !== !!nextProps.onLayout) {
            if (this.props.onLayout) {
                this._checkViewCheckerUnbuild();
            }
            if (nextProps.onLayout) {
                this._checkViewCheckerBuild();
            }
        }
    };
    ViewBase._checkViews = function () {
        _.each(ViewBase._viewCheckingList, function (view) {
            view._checkAndReportLayout().catch(function (e) {
                console.warn('ScrollView onLayout exception: ' + JSON.stringify(e));
            });
        });
    };
    ViewBase._reportLayoutChange = function (func) {
        this._layoutReportList.push(func);
        if (!ViewBase._layoutReportingTimer) {
            ViewBase._layoutReportingTimer = Timers_1.default.setTimeout(function () {
                ViewBase._layoutReportingTimer = undefined;
                ViewBase._reportDeferredLayoutChanges();
            }, 0);
        }
    };
    ViewBase._reportDeferredLayoutChanges = function () {
        var reportList = this._layoutReportList;
        this._layoutReportList = [];
        _.each(reportList, function (func) {
            try {
                func();
            }
            catch (e) {
                if (AppConfig_1.default.isDevelopmentMode()) {
                    console.error('Caught exception on onLayout response: ', e);
                }
            }
        });
    };
    // Returns a promise to indicate when firing of onLayout event has completed (if any)
    ViewBase.prototype._checkAndReportLayout = function () {
        var _this = this;
        if (!this._isMounted) {
            return Promise.resolve(void 0);
        }
        var container = this._getContainer();
        if (!container) {
            return Promise.resolve(void 0);
        }
        var newX = container.offsetLeft;
        var newY = container.offsetTop;
        var marginTop = !container.style.marginTop ? 0 : parseInt(container.style.marginTop, 10) || 0;
        var marginBottom = !container.style.marginBottom ? 0 : parseInt(container.style.marginBottom, 10) || 0;
        var marginRight = !container.style.marginRight ? 0 : parseInt(container.style.marginRight, 10) || 0;
        var marginLeft = !container.style.marginLeft ? 0 : parseInt(container.style.marginLeft, 10) || 0;
        var newWidth = container.offsetWidth + marginRight + marginLeft;
        var newHeight = container.offsetHeight + marginTop + marginBottom;
        if (this._lastX !== newX || this._lastY !== newY || this._lastWidth !== newWidth || this._lastHeight !== newHeight) {
            this._lastX = newX;
            this._lastY = newY;
            this._lastWidth = newWidth;
            this._lastHeight = newHeight;
            var deferred_1 = new PromiseDefer_1.Defer();
            ViewBase._reportLayoutChange(function () {
                if (!_this._isMounted || !_this.props.onLayout) {
                    deferred_1.resolve(void 0);
                    return;
                }
                _this.props.onLayout({
                    x: newX,
                    y: newY,
                    width: _this._lastWidth,
                    height: _this._lastHeight
                });
                deferred_1.resolve(void 0);
            });
            return deferred_1.promise();
        }
        return Promise.resolve(void 0);
    };
    ViewBase.prototype._checkViewCheckerBuild = function () {
        // Enable the timer to check for layout changes. Use a different duration
        // when the app is active versus inactive.
        if (!ViewBase._viewCheckingTimer) {
            ViewBase._viewCheckingTimer = Timers_1.default.setInterval(ViewBase._checkViews, ViewBase._appActivationState === RX.Types.AppActivationState.Active ?
                _layoutTimerActiveDuration : _layoutTimerInactiveDuration);
        }
        if (!ViewBase._isResizeHandlerInstalled) {
            window.addEventListener('resize', ViewBase._onResize);
            ViewBase._isResizeHandlerInstalled = true;
        }
        ViewBase._viewCheckingList.push(this);
    };
    ViewBase.prototype._checkViewCheckerUnbuild = function () {
        var _this = this;
        ViewBase._viewCheckingList = _.filter(ViewBase._viewCheckingList, function (v) { return v !== _this; });
        if (ViewBase._viewCheckingList.length === 0) {
            if (ViewBase._viewCheckingTimer) {
                Timers_1.default.clearInterval(ViewBase._viewCheckingTimer);
                ViewBase._viewCheckingTimer = undefined;
            }
            if (ViewBase._isResizeHandlerInstalled) {
                window.removeEventListener('resize', ViewBase._onResize);
                ViewBase._isResizeHandlerInstalled = false;
            }
        }
    };
    ViewBase.prototype.componentDidMount = function () {
        this._isMounted = true;
        if (this.props.onLayout) {
            this._checkViewCheckerBuild();
        }
        // Chain through to the same render-checking code
        this.componentDidUpdate();
    };
    ViewBase.prototype.componentDidUpdate = function () {
        var _this = this;
        var isPopupDisplayed = FrontLayerViewManager_1.default.isPopupDisplayed();
        if (this.props.onLayout) {
            if (isPopupDisplayed && !this._isPopupDisplayed) {
                // A popup was just added to DOM. Checking layout now would stall script
                // execution because the browser would have to do a reflow. Avoid that
                // by deferring the work.
                setTimeout(function () {
                    _this._checkAndReportLayout().catch(function (e) {
                        console.warn('ScrollView onLayout exception: ' + JSON.stringify(e));
                    });
                }, 0);
            }
            else {
                this._checkAndReportLayout().catch(function (e) {
                    console.warn('ScrollView onLayout exception: ' + JSON.stringify(e));
                });
            }
        }
        this._isPopupDisplayed = isPopupDisplayed;
    };
    ViewBase._onResize = function () {
        // Often views change size in response to an overall window resize. Rather than
        // wait for the next timer to fire, do it immediately.
        ViewBase._checkViews();
    };
    ViewBase.prototype.componentWillUnmount = function () {
        this._isMounted = false;
        if (this.props.onLayout) {
            this._checkViewCheckerUnbuild();
        }
    };
    ViewBase._isResizeHandlerInstalled = false;
    ViewBase._viewCheckingList = [];
    ViewBase._appActivationState = RX.Types.AppActivationState.Active;
    ViewBase._layoutReportList = [];
    return ViewBase;
}(RX.ViewBase));
exports.ViewBase = ViewBase;
exports.default = ViewBase;

},{"../common/AppConfig":"IaP6","../common/Interfaces":"rFlL","../common/utils/PromiseDefer":"DXNi","../common/utils/Timers":"tBdH","./FrontLayerViewManager":"mOoD","./utils/lodashMini":"Wdkl"}],"J474":[function(require,module,exports) {
"use strict";
/**
 * View.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform View abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var ReactDOM = require("react-dom");
var AppConfig_1 = require("../common/AppConfig");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var FocusManager_1 = require("../common/utils/FocusManager");
var RX = require("../common/Interfaces");
var AccessibilityUtil_1 = require("./AccessibilityUtil");
var AnimateListEdits_1 = require("./listAnimations/AnimateListEdits");
var FocusManager_2 = require("./utils/FocusManager");
var restyleForInlineText_1 = require("./utils/restyleForInlineText");
var Styles_1 = require("./Styles");
var ViewBase_1 = require("./ViewBase");
// Cast to any to allow merging of web and RX styles
var _styles = {
    defaultStyle: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'column',
        flexGrow: 0,
        flexShrink: 0,
        overflow: 'hidden',
        alignItems: 'stretch'
    },
    // See resize detector comments in renderResizeDetectorIfNeeded() method below.
    resizeDetectorContainerStyles: {
        position: 'absolute',
        left: '0',
        top: '0',
        right: '0',
        bottom: '0',
        overflow: 'scroll',
        zIndex: '-1',
        visibility: 'hidden'
    },
    resizeGrowDetectorStyles: {
        position: 'absolute',
        left: '100500px',
        top: '100500px',
        width: '1px',
        height: '1px'
    },
    resizeShrinkDetectorStyles: {
        position: 'absolute',
        width: '150%',
        height: '150%'
    }
};
if (typeof document !== 'undefined') {
    var ignorePointerEvents = '.reactxp-ignore-pointer-events  * { pointer-events: auto; }';
    var blockPointerEvents = '.reactxp-block-pointer-events * { pointer-events: none !important; }';
    var head = document.head;
    var style = document.createElement('style');
    style.type = 'text/css';
    style.appendChild(document.createTextNode(ignorePointerEvents));
    style.appendChild(document.createTextNode(blockPointerEvents));
    head.appendChild(style);
}
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    function View(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._limitFocusWithin = false;
        _this._isFocusLimited = false;
        _this._resizeDetectorNodes = {};
        _this._onResizeDetectorGrowRef = function (node) {
            _this._resizeDetectorNodes.grow = node || undefined;
            _this._resizeDetectorOnScroll();
        };
        _this._onResizeDetectorShrinkRef = function (node) {
            _this._resizeDetectorNodes.shrink = node || undefined;
            _this._resizeDetectorOnScroll();
        };
        _this._resizeDetectorOnScroll = function () {
            if (_this._resizeDetectorAnimationFrame) {
                // Do not execute action more often than once per animation frame.
                return;
            }
            _this._resizeDetectorAnimationFrame = window.requestAnimationFrame(function () {
                if (_this._isMounted) {
                    _this._resizeDetectorReset();
                    _this._resizeDetectorAnimationFrame = undefined;
                    ViewBase_1.default._checkViews();
                }
            });
        };
        _this._limitFocusWithin =
            (props.limitFocusWithin === RX.Types.LimitFocusType.Limited) ||
                (props.limitFocusWithin === RX.Types.LimitFocusType.Accessible);
        if (_this.props.restrictFocusWithin || _this._limitFocusWithin) {
            _this._focusManager = new FocusManager_2.FocusManager(context && context.focusManager);
            if (_this._limitFocusWithin) {
                _this.setFocusLimited(true);
            }
        }
        _this._popupContainer = context && context.popupContainer;
        if (props.arbitrateFocus) {
            _this._updateFocusArbitratorProvider(props);
        }
        return _this;
    }
    View.prototype._renderResizeDetectorIfNeeded = function (containerStyles) {
        // If needed, additional invisible DOM elements will be added inside the
        // view to track the size changes that are performed behind our back by
        // the browser's layout engine faster (ViewBase checks for the layout
        // updates once a second and sometimes it's not fast enough).
        // Unfortunately <div> doesn't have `resize` event, so we're trying to
        // detect the fact that the view has been resized with `scroll` events.
        // To do that, we create two scrollable <div>s and we put them into a
        // state in which `scroll` event is triggered by the browser when the
        // container gets resized (one element triggers `scroll` when the
        // container gets bigger, another triggers `scroll` when the container
        // gets smaller).
        if (!this.props.importantForLayout) {
            return null;
        }
        if (containerStyles.position !== 'relative') {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.error('View: importantForLayout property is applicable only for a view with relative position');
            }
            return null;
        }
        return [
            (React.createElement("div", { key: 'grow', style: _styles.resizeDetectorContainerStyles, ref: this._onResizeDetectorGrowRef, onScroll: this._resizeDetectorOnScroll },
                React.createElement("div", { style: _styles.resizeGrowDetectorStyles }))),
            (React.createElement("div", { key: 'shrink', style: _styles.resizeDetectorContainerStyles, ref: this._onResizeDetectorShrinkRef, onScroll: this._resizeDetectorOnScroll },
                React.createElement("div", { style: _styles.resizeShrinkDetectorStyles })))
        ];
    };
    View.prototype._resizeDetectorReset = function () {
        // Scroll the detectors to the bottom-right corner so
        // that `scroll` events will be triggered when the container
        // is resized.
        var scrollMax = 100500;
        var node = this._resizeDetectorNodes.grow;
        if (node) {
            node.scrollLeft = scrollMax;
            node.scrollTop = scrollMax;
        }
        node = this._resizeDetectorNodes.shrink;
        if (node) {
            node.scrollLeft = scrollMax;
            node.scrollTop = scrollMax;
        }
    };
    View.prototype.getChildContext = function () {
        // Let descendant Types components know that their nearest Types ancestor is not an Types.Text.
        // Because they're in an Types.View, they should use their normal styling rather than their
        // special styling for appearing inline with text.
        var childContext = {
            isRxParentAText: false
        };
        // Provide the descendants with the focus manager and popup container (if any).
        if (this._focusManager) {
            childContext.focusManager = this._focusManager;
        }
        if (this._popupContainer) {
            childContext.popupContainer = this._popupContainer;
        }
        if (this._focusArbitratorProvider) {
            childContext.focusArbitrator = this._focusArbitratorProvider;
        }
        return childContext;
    };
    View.prototype._getContainer = function () {
        if (!this._isMounted) {
            return null;
        }
        try {
            return ReactDOM.findDOMNode(this);
        }
        catch (_a) {
            // Handle exception due to potential unmount race condition.
            return null;
        }
    };
    View.prototype._isHidden = function () {
        return !!this._popupContainer && this._popupContainer.isHidden();
    };
    View.prototype._updateFocusArbitratorProvider = function (props) {
        if (props.arbitrateFocus) {
            if (this._focusArbitratorProvider) {
                this._focusArbitratorProvider.setCallback(props.arbitrateFocus);
            }
            else {
                this._focusArbitratorProvider = new AutoFocusHelper_1.FocusArbitratorProvider(this, props.arbitrateFocus);
            }
        }
        else if (this._focusArbitratorProvider) {
            delete this._focusArbitratorProvider;
        }
    };
    View.prototype.setFocusRestricted = function (restricted) {
        if (!this._focusManager || !this.props.restrictFocusWithin) {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.error('View: setFocusRestricted method requires restrictFocusWithin property to be set');
            }
            return;
        }
        if (!this._isHidden()) {
            if (restricted) {
                this._focusManager.restrictFocusWithin(FocusManager_1.RestrictFocusType.RestrictedFocusFirst);
            }
            else {
                this._focusManager.removeFocusRestriction();
            }
        }
        this._isFocusRestricted = restricted;
    };
    View.prototype.setFocusLimited = function (limited) {
        if (!this._focusManager || !this._limitFocusWithin) {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.error('View: setFocusLimited method requires limitFocusWithin property to be set');
            }
            return;
        }
        if (!this._isHidden()) {
            if (limited && !this._isFocusLimited) {
                this._focusManager.limitFocusWithin(this.props.limitFocusWithin);
            }
            else if (!limited && this._isFocusLimited) {
                this._focusManager.removeFocusLimitation();
            }
        }
        this._isFocusLimited = limited;
    };
    View.prototype.render = function () {
        var combinedStyles = Styles_1.default.combine([_styles.defaultStyle, this.props.style]);
        var ariaRole = AccessibilityUtil_1.default.accessibilityTraitToString(this.props.accessibilityTraits);
        var tabIndex = this.props.tabIndex;
        var ariaSelected = AccessibilityUtil_1.default.accessibilityTraitToAriaSelected(this.props.accessibilityTraits);
        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);
        var accessibilityLabel = this.props.accessibilityLabel;
        var ariaLabelledBy = this.props.ariaLabelledBy;
        var ariaRoleDescription = this.props.ariaRoleDescription;
        var ariaLive = this.props.accessibilityLiveRegion ?
            AccessibilityUtil_1.default.accessibilityLiveRegionToString(this.props.accessibilityLiveRegion) :
            undefined;
        var ariaValueNow = this.props.ariaValueNow;
        if (!ariaRole && !accessibilityLabel && !ariaLabelledBy && !ariaRoleDescription && !ariaLive &&
            (ariaSelected === undefined) && (ariaValueNow === undefined) && (tabIndex === undefined)) {
            // When the accessibility properties are not specified, set role to none.
            // It tells the screen readers to skip the node, but unlike setting
            // aria-hidden to true, allows the sub DOM to be processed further.
            // This signigicantly improves the screen readers performance.
            ariaRole = 'none';
        }
        var props = {
            role: ariaRole,
            tabIndex: tabIndex,
            style: combinedStyles,
            title: this.props.title,
            'aria-label': accessibilityLabel,
            'aria-hidden': isAriaHidden,
            'aria-selected': ariaSelected,
            'aria-labelledby': ariaLabelledBy,
            'aria-roledescription': ariaRoleDescription,
            'aria-live': ariaLive,
            'aria-valuenow': ariaValueNow,
            onContextMenu: this.props.onContextMenu,
            onMouseEnter: this.props.onMouseEnter,
            onMouseLeave: this.props.onMouseLeave,
            onMouseOver: this.props.onMouseOver,
            onMouseMove: this.props.onMouseMove,
            // Weird things happen: ReactXP.Types.Touch is not assignable to React.Touch
            onTouchStart: this.props.onResponderStart,
            onTouchStartCapture: this.props.onTouchStartCapture,
            onTouchMove: this.props.onResponderMove,
            onTouchMoveCapture: this.props.onTouchMoveCapture,
            onTouchEnd: this.props.onResponderRelease,
            onTouchCancel: this.props.onResponderTerminate,
            draggable: this.props.onDragStart ? true : undefined,
            onDragStart: this.props.onDragStart,
            onDrag: this.props.onDrag,
            onDragEnd: this.props.onDragEnd,
            onDragEnter: this.props.onDragEnter,
            onDragOver: this.props.onDragOver,
            onDragLeave: this.props.onDragLeave,
            onDrop: this.props.onDrop,
            onClick: this.props.onPress,
            onFocus: this.props.onFocus,
            onBlur: this.props.onBlur,
            onKeyDown: this.props.onKeyPress,
            id: this.props.id
        };
        if (this.props.blockPointerEvents) {
            // Make this element and all children transparent to pointer events
            props.className = 'reactxp-block-pointer-events';
            combinedStyles.pointerEvents = 'none';
        }
        else if (this.props.ignorePointerEvents) {
            // Make this element transparent to pointer events, but allow children to still receive events
            props.className = 'reactxp-ignore-pointer-events';
            combinedStyles.pointerEvents = 'none';
        }
        var reactElement;
        var childAnimationsEnabled = this.props.animateChildEnter || this.props.animateChildMove || this.props.animateChildLeave;
        if (childAnimationsEnabled) {
            reactElement = (React.createElement(AnimateListEdits_1.default, __assign({}, props, { "data-test-id": this.props.testId, animateChildEnter: this.props.animateChildEnter, animateChildMove: this.props.animateChildMove, animateChildLeave: this.props.animateChildLeave }), this.props.children));
        }
        else {
            reactElement = (React.createElement("div", __assign({}, props, { "data-test-id": this.props.testId }),
                this._renderResizeDetectorIfNeeded(combinedStyles),
                this.props.children));
        }
        return this.context.isRxParentAText ?
            restyleForInlineText_1.default(reactElement) :
            reactElement;
    };
    View.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        _super.prototype.UNSAFE_componentWillReceiveProps.call(this, nextProps);
        if (AppConfig_1.default.isDevelopmentMode()) {
            if (this.props.restrictFocusWithin !== nextProps.restrictFocusWithin) {
                console.error('View: restrictFocusWithin is readonly and changing it during the component life cycle has no effect');
            }
            if (this.props.limitFocusWithin !== nextProps.limitFocusWithin) {
                console.error('View: limitFocusWithin is readonly and changing it during the component life cycle has no effect');
            }
        }
        if (('arbitrateFocus' in nextProps) && (this.props.arbitrateFocus !== nextProps.arbitrateFocus)) {
            this._updateFocusArbitratorProvider(nextProps);
        }
    };
    View.prototype.enableFocusManager = function () {
        if (this._focusManager) {
            if (this.props.restrictFocusWithin && this._isFocusRestricted !== false) {
                this._focusManager.restrictFocusWithin(FocusManager_1.RestrictFocusType.RestrictedFocusFirst);
            }
            if (this._limitFocusWithin && this._isFocusLimited) {
                this._focusManager.limitFocusWithin(this.props.limitFocusWithin);
            }
        }
    };
    View.prototype.disableFocusManager = function () {
        if (this._focusManager) {
            this._focusManager.release();
        }
    };
    View.prototype.componentDidMount = function () {
        var _this = this;
        _super.prototype.componentDidMount.call(this);
        if (this.props.autoFocus) {
            this.requestFocus();
        }
        // If we are mounted as visible, do our initialization now. If we are hidden, it will
        // be done later when the popup is shown.
        if (!this._isHidden()) {
            this.enableFocusManager();
        }
        if (this._focusManager && this._popupContainer) {
            this._popupToken = this._popupContainer.registerPopupComponent(function () { return _this.enableFocusManager(); }, function () { return _this.disableFocusManager(); });
        }
    };
    View.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        this.disableFocusManager();
        if (this._popupToken) {
            this._popupContainer.unregisterPopupComponent(this._popupToken);
        }
    };
    View.prototype.blur = function () {
        var el = this._getContainer();
        if (el) {
            el.blur();
        }
    };
    View.prototype.requestFocus = function () {
        var _this = this;
        AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () { return _this.focus(); }, function () { return _this._isMounted; });
    };
    View.prototype.focus = function () {
        var el = this._getContainer();
        if (el) {
            el.focus();
        }
    };
    View.contextTypes = {
        isRxParentAText: PropTypes.bool,
        focusManager: PropTypes.object,
        popupContainer: PropTypes.object,
        focusArbitrator: PropTypes.object
    };
    View.childContextTypes = {
        isRxParentAText: PropTypes.bool.isRequired,
        focusManager: PropTypes.object,
        popupContainer: PropTypes.object,
        focusArbitrator: PropTypes.object
    };
    return View;
}(ViewBase_1.default));
exports.View = View;
FocusManager_2.applyFocusableComponentMixin(View, function (nextProps) {
    // VoiceOver with the VoiceOver key combinations (Ctrl+Option+Left/Right) focuses
    // <div>s when whatever tabIndex is set (even if tabIndex=-1). So, View is focusable
    // when tabIndex is not undefined.
    var tabIndex = nextProps && ('tabIndex' in nextProps) ? nextProps.tabIndex : this.props.tabIndex;
    return tabIndex !== undefined;
});
exports.default = View;

},{"prop-types":"Iix9","react":"HdMw","react-dom":"X9zx","../common/AppConfig":"IaP6","../common/utils/AutoFocusHelper":"uohT","../common/utils/FocusManager":"HkPx","../common/Interfaces":"rFlL","./AccessibilityUtil":"w171","./listAnimations/AnimateListEdits":"OraB","./utils/FocusManager":"HWpt","./utils/restyleForInlineText":"xhV4","./Styles":"FK4c","./ViewBase":"m77O"}],"Y12y":[function(require,module,exports) {
"use strict";
/**
 * AlertModalContent.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web Alert dialog boxes modal content.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var RX = require("../common/Interfaces");
var Button_1 = require("./Button");
var Modal_1 = require("./Modal");
var Styles_1 = require("./Styles");
var Text_1 = require("./Text");
var View_1 = require("./View");
var _styles = {
    background: Styles_1.default.createViewStyle({
        flex: 1,
        backgroundColor: 'rgba(0, 0, 0, 0.1)',
        alignItems: 'center',
        alignSelf: 'stretch'
    }),
    verticalRoot: Styles_1.default.createViewStyle({
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center'
    }),
    defaultBody: Styles_1.default.createViewStyle({
        width: 300,
        backgroundColor: '#fff',
        borderColor: '#bbb',
        borderWidth: 1,
        alignItems: 'stretch',
        paddingHorizontal: 8,
        paddingVertical: 4
    }),
    defaultTitleText: Styles_1.default.createTextStyle({
        fontSize: 20,
        fontWeight: 'bold',
        alignSelf: 'center',
        padding: 12,
        flex: 1
    }),
    defaultMessageText: Styles_1.default.createTextStyle({
        fontSize: 16,
        alignSelf: 'center',
        padding: 12,
        flex: 1
    }),
    defaultButtonContainer: Styles_1.default.createButtonStyle({
        padding: 8,
        flex: 1
    }),
    defaultButton: Styles_1.default.createButtonStyle({
        alignItems: 'center',
        flex: 1,
        borderWidth: 1,
        borderRadius: 8,
        borderColor: '#bbb'
    }),
    defaultButtonHover: Styles_1.default.createButtonStyle({
        backgroundColor: '#eee'
    }),
    defaultCancelButton: Styles_1.default.createButtonStyle({
        borderColor: 'red'
    }),
    defaultBtnText: Styles_1.default.createTextStyle({
        fontSize: 14,
        padding: 8,
        color: '#333'
    }),
    defaultCancelBtnText: Styles_1.default.createTextStyle({
        color: 'red'
    })
};
var AlertModalContent = /** @class */ (function (_super) {
    __extends(AlertModalContent, _super);
    function AlertModalContent(props) {
        var _this = _super.call(this, props) || this;
        _this._onPressBody = function (e) {
            e.stopPropagation();
        };
        _this._onPressBackground = function (e) {
            if (!_this.props.preventDismissOnPress) {
                Modal_1.default.dismiss(_this.props.modalId);
            }
        };
        _this.state = {
            hoverIndex: -1
        };
        return _this;
    }
    AlertModalContent.prototype.render = function () {
        var _this = this;
        var theme = this.props.theme;
        var buttons = this.props.buttons && this.props.buttons.map(function (btnSpec, i) {
            var isCancel = btnSpec.style === 'cancel';
            var buttonStyle = [_styles.defaultButton, isCancel ? _styles.defaultCancelButton : undefined];
            var buttonTextStyle = [_styles.defaultBtnText, isCancel ? _styles.defaultCancelBtnText : undefined];
            // Is the mouse pointer currently hovering over this button?
            if (_this.state.hoverIndex === i) {
                buttonStyle.push(_styles.defaultButtonHover);
            }
            if (theme) {
                buttonStyle.push(theme.buttonStyle);
                buttonTextStyle.push(theme.buttonTextStyle);
                if (isCancel) {
                    buttonStyle.push(theme.cancelButtonStyle);
                    buttonTextStyle.push(theme.cancelButtonTextStyle);
                }
                if (_this.state.hoverIndex === i) {
                    buttonStyle.push(isCancel ? theme.cancelButtonHoverStyle : theme.buttonHoverStyle);
                }
            }
            return (React.createElement(View_1.default, { key: 'button_' + i, style: _styles.defaultButtonContainer },
                React.createElement(Button_1.default, { onPress: function (e) { return _this._onPressButton(btnSpec); }, onHoverStart: function () { return _this.setState({ hoverIndex: i }); }, onHoverEnd: function () { return _this.setState({ hoverIndex: -1 }); }, style: buttonStyle },
                    React.createElement(Text_1.default, { style: buttonTextStyle }, btnSpec.text))));
        });
        return (React.createElement(View_1.default, { style: _styles.background, onPress: this._onPressBackground },
            React.createElement(View_1.default, { style: _styles.verticalRoot },
                React.createElement(View_1.default, { style: [_styles.defaultBody, theme && theme.bodyStyle], onPress: this._onPressBody },
                    React.createElement(View_1.default, null,
                        React.createElement(Text_1.default, { style: [_styles.defaultTitleText, theme && theme.titleTextStyle] }, this.props.title)),
                    React.createElement(View_1.default, null,
                        React.createElement(Text_1.default, { style: [_styles.defaultMessageText, theme && theme.messageTextStyle] }, this.props.message)),
                    buttons))));
    };
    AlertModalContent.prototype._onPressButton = function (btnSpec) {
        Modal_1.default.dismiss(this.props.modalId);
        if (btnSpec.onPress) {
            btnSpec.onPress();
        }
    };
    return AlertModalContent;
}(RX.Component));
exports.AlertModalContent = AlertModalContent;
exports.default = AlertModalContent;

},{"react":"HdMw","../common/Interfaces":"rFlL","./Button":"Dkk0","./Modal":"SEaK","./Styles":"FK4c","./Text":"rfZP","./View":"J474"}],"EAgw":[function(require,module,exports) {
"use strict";
/**
 * Alert.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web Alert dialog boxes.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var RX = require("../common/Interfaces");
var AlertModalContent_1 = require("./AlertModalContent");
var Modal_1 = require("./Modal");
// Web/HTML implementation for alert dialog boxes
var Alert = /** @class */ (function (_super) {
    __extends(Alert, _super);
    function Alert() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._modalId = 'RX.Alert_WebModal';
        return _this;
    }
    Alert.prototype.show = function (title, message, buttons, options) {
        Modal_1.default.show((React.createElement(AlertModalContent_1.AlertModalContent, { modalId: this._modalId, buttons: buttons, title: title, message: message, theme: options && options.theme, preventDismissOnPress: options && options.preventDismissOnPress })), this._modalId);
    };
    return Alert;
}(RX.Alert));
exports.Alert = Alert;
exports.default = new Alert();

},{"react":"HdMw","../common/Interfaces":"rFlL","./AlertModalContent":"Y12y","./Modal":"SEaK"}],"Qias":[function(require,module,exports) {
"use strict";
/**
 * https://github.com/gre/bezier-easing
 * BezierEasing - use bezier curve for transition easing function
 * by Gaëtan Renaudeau 2014 - 2015 – MIT License
 */
Object.defineProperty(exports, "__esModule", { value: true });
// These values are established by empiricism with tests (tradeoff: performance VS precision)
var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;
var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);
var float32ArraySupported = typeof Float32Array === 'function';
function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }
function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }
function C(aA1) { return 3.0 * aA1; }
// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }
// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }
function binarySubdivide(aX, aA, aB, mX1, mX2) {
    var currentX = 0;
    var currentT = 0;
    var i = 0;
    do {
        currentT = aA + (aB - aA) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - aX;
        if (currentX > 0.0) {
            aB = currentT;
        }
        else {
            aA = currentT;
        }
    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
    return currentT;
}
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
        var currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0.0) {
            return aGuessT;
        }
        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
}
function bezier(mX1, mY1, mX2, mY2) {
    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { // eslint-disable-line yoda
        throw new Error('bezier x values must be in [0, 1] range');
    }
    // Precompute samples table
    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
    if (mX1 !== mY1 || mX2 !== mY2) {
        for (var i = 0; i < kSplineTableSize; ++i) {
            sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
        }
    }
    function getTForX(aX) {
        var intervalStart = 0.0;
        var currentSample = 1;
        var lastSample = kSplineTableSize - 1;
        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
            intervalStart += kSampleStepSize;
        }
        --currentSample;
        // Interpolate to provide an initial guess for t
        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
        var guessForT = intervalStart + dist * kSampleStepSize;
        var initialSlope = getSlope(guessForT, mX1, mX2);
        if (initialSlope >= NEWTON_MIN_SLOPE) {
            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
        }
        else if (initialSlope === 0.0) {
            return guessForT;
        }
        else {
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
        }
    }
    return function BezierEasing(x) {
        if (mX1 === mY1 && mX2 === mY2) {
            return x; // linear
        }
        // Because JavaScript number are imprecise, we should guarantee the extremes are right.
        if (x === 0) {
            return 0;
        }
        if (x === 1) {
            return 1;
        }
        return calcBezier(getTForX(x), mY1, mY2);
    };
}
exports.bezier = bezier;

},{}],"jjbw":[function(require,module,exports) {
"use strict";
/**
 * Easing.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Easing functions for animations.
 */
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable: function-name
var Bezier = require("./Bezier");
var Easing = /** @class */ (function () {
    function Easing() {
    }
    Easing.prototype.CubicBezier = function (x1, y1, x2, y2) {
        return {
            cssName: 'cubic-bezier(' + x1.toString() + ', ' + y1.toString() + ', ' + x2.toString() + ', ' + y2.toString() + ')',
            function: Bezier.bezier(x1, y1, x2, y2)
        };
    };
    Easing.prototype.Default = function () {
        var bezier = this.CubicBezier(0.42, 0, 1, 1);
        return {
            cssName: 'ease',
            function: bezier.function
        };
    };
    Easing.prototype.Linear = function () {
        return {
            cssName: 'linear',
            function: function (input) { return input; }
        };
    };
    Easing.prototype.Out = function () {
        var bezier = this.CubicBezier(0, 0, 0.58, 1);
        return {
            cssName: 'ease-out',
            function: bezier.function
        };
    };
    Easing.prototype.In = function () {
        var bezier = this.CubicBezier(0.42, 0, 1, 1);
        return {
            cssName: 'ease-in',
            function: bezier.function
        };
    };
    Easing.prototype.InOut = function () {
        var bezier = this.CubicBezier(0.42, 0, 0.58, 1);
        return {
            cssName: 'ease-in-out',
            function: bezier.function
        };
    };
    Easing.prototype.OutBack = function () {
        var bezier = this.CubicBezier(0.175, 0.885, 0.320, 1.275);
        return {
            cssName: bezier.cssName,
            function: bezier.function
        };
    };
    Easing.prototype.InBack = function () {
        var bezier = this.CubicBezier(0.600, -0.280, 0.735, 0.045);
        return {
            cssName: bezier.cssName,
            function: bezier.function
        };
    };
    Easing.prototype.InOutBack = function () {
        var bezier = this.CubicBezier(0.680, -0.550, 0.265, 1.550);
        return {
            cssName: bezier.cssName,
            function: bezier.function
        };
    };
    Easing.prototype.Steps = function (intervals, end) {
        if (end === void 0) { end = true; }
        return {
            cssName: 'steps(' + intervals.toString() + ', ' + (end ? 'end' : 'start') + ')',
            function: function (input) {
                var interval = intervals * input;
                if (end) {
                    interval = Math.floor(interval);
                }
                else {
                    interval = Math.ceil(interval);
                }
                return interval / intervals;
            }
        };
    };
    Easing.prototype.StepStart = function () {
        var steps = this.Steps(1, false);
        return {
            cssName: 'steps(1, start)',
            function: steps.function
        };
    };
    Easing.prototype.StepEnd = function () {
        var steps = this.Steps(1, true);
        return {
            cssName: 'steps(1, end)',
            function: steps.function
        };
    };
    return Easing;
}());
exports.Easing = Easing;
exports.default = new Easing();

},{"./Bezier":"Qias"}],"PXKq":[function(require,module,exports) {
"use strict";
/**
 * Image.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Constants for images.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_RESIZE_MODE = 'contain';

},{}],"E4vj":[function(require,module,exports) {
"use strict";
/**
 * Image.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Image abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var assert_1 = require("../common/assert");
var Image_1 = require("../common/Image");
var PromiseDefer_1 = require("../common/utils/PromiseDefer");
var _ = require("./utils/lodashMini");
var restyleForInlineText_1 = require("./utils/restyleForInlineText");
var Styles_1 = require("./Styles");
var _styles = {
    image: {
        position: 'absolute',
        display: 'flex',
        flexDirection: 'column',
        opacity: 0,
        maxWidth: '100%',
        maxHeight: '100%'
    },
    defaultContainer: Styles_1.default.createImageStyle({
        position: 'relative',
        flex: 0,
        overflow: 'visible',
        backgroundColor: 'transparent'
    })
};
var XhrBlobUrlCache = /** @class */ (function () {
    function XhrBlobUrlCache() {
    }
    XhrBlobUrlCache.get = function (source) {
        if (this._cachedXhrBlobUrls[source]) {
            this._cachedXhrBlobUrls[source].refCount++;
            return this._cachedXhrBlobUrls[source].xhrBlobUrl;
        }
        return undefined;
    };
    XhrBlobUrlCache.insert = function (source, xhrBlobUrl) {
        XhrBlobUrlCache._cleanupIfCapacityExceeded();
        if (this._cachedXhrBlobUrls[source]) {
            XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount++;
        }
        else {
            var xhrBlobUrlCacheEntry = {
                xhrBlobUrl: xhrBlobUrl,
                insertionDate: Date.now(),
                refCount: 1
            };
            XhrBlobUrlCache._cachedXhrBlobUrls[source] = xhrBlobUrlCacheEntry;
        }
    };
    XhrBlobUrlCache.release = function (source) {
        // Keep track of which cache entries are being used as we don't want to clean up a resource that someone is
        // still relying on.
        if (this._cachedXhrBlobUrls[source]) {
            XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount--;
        }
    };
    XhrBlobUrlCache._cleanupIfCapacityExceeded = function () {
        // If we've reached maximum capacity, clean up the oldest freeable cache entry if any. An entry is freeable is
        // it's not currently in use (refCount == 0). Return whether we have room to add more entries to the cache.
        if (Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).length + 1 > XhrBlobUrlCache._maximumItems) {
            var oldestFreeableKey_1;
            var oldestFreeableEntry_1;
            Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).forEach(function (key) {
                if ((!oldestFreeableEntry_1 || XhrBlobUrlCache._cachedXhrBlobUrls[key].insertionDate < oldestFreeableEntry_1.insertionDate) &&
                    XhrBlobUrlCache._cachedXhrBlobUrls[key].refCount === 0) {
                    oldestFreeableKey_1 = key;
                    oldestFreeableEntry_1 = XhrBlobUrlCache._cachedXhrBlobUrls[key];
                }
            });
            if (oldestFreeableKey_1) {
                URL.revokeObjectURL(oldestFreeableEntry_1.xhrBlobUrl);
                delete XhrBlobUrlCache._cachedXhrBlobUrls[oldestFreeableKey_1];
            }
        }
    };
    // Use a global cache to work around the image loading delays introduced by the xhr requests. This is especially
    // visible when scrolling a virtual list view which contains xhr images.
    XhrBlobUrlCache._maximumItems = 128;
    XhrBlobUrlCache._cachedXhrBlobUrls = {};
    return XhrBlobUrlCache;
}());
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image(props) {
        var _this = _super.call(this, props) || this;
        _this._mountedComponent = null;
        _this._isMounted = false;
        _this._onMount = function (component) {
            _this._mountedComponent = component;
        };
        _this._onLoad = function () {
            if (!_this._isMounted || !_this._mountedComponent) {
                return;
            }
            var imageDOM = _this._mountedComponent;
            // Measure the natural width & height of the image.
            _this._nativeImageWidth = undefined;
            _this._nativeImageHeight = undefined;
            _this._nativeImageWidth = imageDOM.naturalWidth;
            _this._nativeImageHeight = imageDOM.naturalHeight;
            // We can hide the img now. We assume that if the img. URL resolved without error,
            // then the background img. URL also did.
            _this.setState({
                showImgTag: false
            });
            if (_this.props.onLoad) {
                _this.props.onLoad({ width: _this._nativeImageWidth, height: _this._nativeImageHeight });
            }
        };
        _this._imgOnError = function () {
            _this._onError();
        };
        _this._onMouseUp = function (e) {
            if (e.button === 0) {
                // Types.Image doesn't officially support an onClick prop, but when it's
                // contained within a button, it may have this prop.
                var onClick = _this.props.onClick;
                if (onClick) {
                    onClick(e);
                }
            }
        };
        var performXhrRequest = _this._initializeAndSetState(props, true);
        if (performXhrRequest) {
            _this._startXhrImageFetch(props);
        }
        return _this;
    }
    Image.prototype.getChildContext = function () {
        // Let descendant RX components know that their nearest RX ancestor is not an RX.Text.
        // Because they're in an RX.Image, they should use their normal styling rather than their
        // special styling for appearing inline with text.
        return { isRxParentAText: false };
    };
    Image.prefetch = function (url) {
        var defer = new PromiseDefer_1.Defer();
        var img = new window.Image();
        img.onload = (function (event) {
            defer.resolve(true);
        });
        img.onerror = (function (event) {
            defer.reject('Failed to prefetch url ' + url);
        });
        img.onabort = (function (event) {
            defer.reject('Prefetch cancelled for url ' + url);
        });
        img.src = url;
        return defer.promise();
    };
    Image.getMetadata = function (url) {
        var defer = new PromiseDefer_1.Defer();
        var img = new window.Image();
        img.onload = (function (event) {
            defer.resolve({
                width: img.naturalWidth,
                height: img.naturalHeight
            });
        });
        img.onerror = (function (event) {
            defer.reject('Failed to prefetch url ' + url);
        });
        img.onabort = (function (event) {
            defer.reject('Prefetch cancelled for url ' + url);
        });
        img.src = url;
        return defer.promise();
    };
    Image.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        var sourceOrHeaderChanged = (nextProps.source !== this.props.source ||
            !_.isEqual(nextProps.headers || {}, this.props.headers || {}));
        if (!nextProps.onLoad !== !this.props.onLoad || !nextProps.onError !== !this.props.onError || sourceOrHeaderChanged) {
            var performXhrRequest = this._initializeAndSetState(nextProps, false);
            if (sourceOrHeaderChanged && performXhrRequest) {
                this._startXhrImageFetch(nextProps);
            }
        }
    };
    Image.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    Image.prototype.componentWillUnmount = function () {
        this._isMounted = false;
        if (this.state.displayUrl && this.state.xhrRequest) {
            XhrBlobUrlCache.release(this.props.source);
        }
    };
    Image.prototype._initializeAndSetState = function (props, initial) {
        // Retrieve the xhr blob url from the cache if it exists. This is a performance optimization as we've seen xhr
        // requests take some time and cause flicker during rendering. Even when we're hitting the browser cache, we've
        // seen it stall and take some time.
        var cachedXhrBlobUrl = props.headers ? XhrBlobUrlCache.get(props.source) : null;
        var displayUrl = !!cachedXhrBlobUrl ? cachedXhrBlobUrl :
            !!props.headers ? '' : props.source;
        // Only make the xhr request if headers are specified and there was no cache hit.
        var performXhrRequest = !!props.headers && !cachedXhrBlobUrl;
        // We normally don't show an img tag because we use background images.  However, if the caller has supplied an
        // onLoad or onError callback, we'll use the img tag until we receive an onLoad or onError.  But if we need to
        // perform an XHR first to convert to a blob url, then wait on showing the img tag until we get the blob url
        // since the basic IMG tag will fail to load it without headers.
        var newState = {
            showImgTag: (!performXhrRequest || !!cachedXhrBlobUrl) && (!!props.onLoad || !!props.onError),
            xhrRequest: !!props.headers,
            displayUrl: displayUrl
        };
        if (initial) {
            this.state = newState;
        }
        else {
            this.setState(newState);
        }
        return performXhrRequest;
    };
    Image.prototype._handleXhrBlob = function (blob) {
        if (!this._isMounted) {
            return;
        }
        var newUrl = URL.createObjectURL(blob);
        // Save the newly fetched xhr blob url in the cache.
        XhrBlobUrlCache.insert(this.props.source, newUrl);
        this.setState({
            displayUrl: newUrl,
            // If we have an onload handler, we need to now load the img tag to get dimensions for the load.
            showImgTag: !!this.props.onLoad
        });
    };
    Image.prototype._startXhrImageFetch = function (props) {
        // Test hook to simulate a slower hxr request.
        // Timers.setTimeout(() => this._actuallyStartXhrImageFetch(props), 2500);
        this._actuallyStartXhrImageFetch(props);
    };
    Image.prototype._actuallyStartXhrImageFetch = function (props) {
        // Fetch Implementation
        var _this = this;
        // If an 'origin' header is passed, we assume this is intended to be a crossorigin request.
        // In order to send the cookies with the request, the withCredentials: true / credentials: 'include' flag needs to be set.
        var withCredentials = props.headers
            && Object.keys(props.headers).some(function (header) { return header.toLowerCase() === 'origin'; });
        if (window.fetch) {
            var headers_1 = new Headers();
            if (props.headers) {
                Object.keys(props.headers).forEach(function (key) {
                    headers_1.append(key, props.headers[key]);
                });
            }
            var xhr = new Request(props.source, {
                credentials: withCredentials ? 'include' : 'same-origin',
                method: 'GET',
                mode: 'cors',
                headers: headers_1
            });
            fetch(xhr)
                .then(function (response) {
                if (!response.ok) {
                    _this._onError(new Error(response.statusText));
                }
                return response.blob().then(function (blob) {
                    _this._handleXhrBlob(blob);
                });
            }, function (err) {
                _this._onError(err);
            });
        }
        else {
            var req_1 = new XMLHttpRequest();
            req_1.open('GET', props.source, true);
            if (withCredentials) {
                req_1.withCredentials = true;
            }
            req_1.responseType = 'blob';
            if (props.headers) {
                Object.keys(props.headers).forEach(function (key) {
                    req_1.setRequestHeader(key, props.headers[key]);
                });
            }
            req_1.onload = function () {
                if (req_1.status >= 400 || req_1.status < 600) {
                    _this._onError(new Error(req_1.statusText));
                }
                else {
                    _this._handleXhrBlob(req_1.response);
                }
            };
            req_1.onerror = function () {
                _this._onError(new Error('Network issue downloading the image.'));
            };
            req_1.send();
        }
    };
    Image.prototype.render = function () {
        var source = this.props.source;
        var isSourceValid = !(typeof source !== 'string' && typeof source !== 'undefined');
        // Prepare image source (necessary as iOS implementation also allows objects)
        assert_1.default(isSourceValid, "Types/web/Image only accepts string sources! You passed: " + source + " of type " + typeof source);
        var optionalImg = null;
        if (this.state.showImgTag) {
            optionalImg = (React.createElement("img", { style: _styles.image, src: this.state.displayUrl, alt: this.props.accessibilityLabel, onError: this._imgOnError, onLoad: this._onLoad, ref: this._onMount }));
        }
        var reactElement = (React.createElement("div", { style: this._getStyles(), title: this.props.title, "data-test-id": this.props.testId, onMouseUp: this._onMouseUp },
            optionalImg,
            this.props.children));
        return this.context.isRxParentAText ?
            restyleForInlineText_1.default(reactElement) :
            reactElement;
    };
    Image.prototype._getStyles = function () {
        var resizeMode = this.props.resizeMode;
        var styles = (Styles_1.default.combine([_styles.defaultContainer, this.props.style]) || {});
        var backgroundRepeat = resizeMode === 'repeat' ? 'repeat' : 'no-repeat';
        var backgroundSize = this._buildBackgroundSize(resizeMode);
        // It is necessary to wrap the url in quotes as in url("a.jpg?q=(a and b)").
        // If the url is unquoted and contains paranthesis, e.g. a.jpg?q=(a and b), it will become url(a.jpg?q=(a and b))
        // which will not render on the screen.
        var backgroundImage = "url(\"" + this.state.displayUrl + "\")";
        // Types doesn't support border styles other than "solid" for images.
        var borderStyle = styles.borderWidth ? 'solid' : 'none';
        return __assign(__assign({}, styles), { backgroundPosition: 'center center', backgroundRepeat: backgroundRepeat,
            backgroundImage: backgroundImage,
            backgroundSize: backgroundSize,
            borderStyle: borderStyle, display: 'flex' });
    };
    Image.prototype._buildBackgroundSize = function (resizeMode) {
        if (resizeMode === void 0) { resizeMode = Image_1.DEFAULT_RESIZE_MODE; }
        switch (resizeMode) {
            case 'repeat':
                return 'auto';
            case 'stretch':
                return '100% 100%';
            // contain | cover | auto are valid BackgroundSize values
            case 'contain':
            case 'cover':
            case 'auto':
                return resizeMode;
            // Prevents unknown resizeMode values
            default:
                return Image_1.DEFAULT_RESIZE_MODE;
        }
    };
    Image.prototype._onError = function (err) {
        if (!this._isMounted) {
            return;
        }
        // We can hide the img now. We assume that if the img. URL failed to resolve,
        // then the background img. URL also did.
        this.setState({
            showImgTag: false
        });
        if (this.props.onError) {
            this.props.onError(err);
        }
    };
    // Note: This works only if you have an onLoaded handler and wait for the image to load.
    Image.prototype.getNativeWidth = function () {
        return this._nativeImageWidth;
    };
    Image.prototype.getNativeHeight = function () {
        return this._nativeImageHeight;
    };
    Image.contextTypes = {
        isRxParentAText: PropTypes.bool
    };
    Image.childContextTypes = {
        isRxParentAText: PropTypes.bool.isRequired
    };
    return Image;
}(React.Component));
exports.Image = Image;
exports.default = Image;

},{"prop-types":"Iix9","react":"HdMw","../common/assert":"zDnP","../common/Image":"PXKq","../common/utils/PromiseDefer":"DXNi","./utils/lodashMini":"Wdkl","./utils/restyleForInlineText":"xhV4","./Styles":"FK4c"}],"JiYf":[function(require,module,exports) {
"use strict";
/**
 * TextInput.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform TextInput abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var FocusManager_1 = require("./utils/FocusManager");
var lodashMini_1 = require("./utils/lodashMini");
var Styles_1 = require("./Styles");
var _isMac = (typeof navigator !== 'undefined') && (typeof navigator.platform === 'string') && (navigator.platform.indexOf('Mac') >= 0);
// Cast to any to allow merging of web and RX styles
var _styles = {
    defaultStyle: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'row',
        flexBasis: 'auto',
        flexGrow: 0,
        flexShrink: 0,
        overflowX: 'hidden',
        overflowY: 'auto',
        alignItems: 'stretch'
    },
    formStyle: {
        display: 'flex',
        flex: 1
    }
};
var TextInputPlaceholderSupport = /** @class */ (function () {
    function TextInputPlaceholderSupport() {
    }
    TextInputPlaceholderSupport.getClassName = function (color) {
        var key = this._colorKey(color);
        return "reactxp-placeholder-" + key;
    };
    TextInputPlaceholderSupport.addRef = function (color) {
        if (typeof document === undefined) {
            return;
        }
        var cache = this._cachedStyles;
        var key = this._colorKey(color);
        if (cache.hasOwnProperty(key)) {
            cache[key].refCounter++;
        }
        else {
            var className = this.getClassName(color);
            var style = document.createElement('style');
            style.type = 'text/css';
            style.textContent = this._getStyle(className, color);
            document.head.appendChild(style);
            cache[key] = {
                refCounter: 1,
                styleElement: style
            };
        }
    };
    TextInputPlaceholderSupport.removeRef = function (color) {
        var cache = this._cachedStyles;
        var key = this._colorKey(color);
        if (cache.hasOwnProperty(key)) {
            var item = cache[key];
            if (--item.refCounter < 1) {
                var styleElement = item.styleElement;
                if (styleElement.parentNode) {
                    styleElement.parentNode.removeChild(styleElement);
                }
                delete cache[key];
            }
        }
    };
    TextInputPlaceholderSupport._colorKey = function (color) {
        return color.toLowerCase()
            .replace(/(,|\.|#)/g, '_')
            .replace(/[^a-z0-9_]/g, '');
    };
    TextInputPlaceholderSupport._getStyle = function (className, placeholderColor) {
        var selectors = [
            '::placeholder',
            '::-webkit-input-placeholder',
            '::-moz-placeholder',
            ':-moz-placeholder',
            ':-ms-input-placeholder' // IE 10+
        ];
        return selectors
            .map(function (pseudoSelector) {
            return "." + className + pseudoSelector + " {\n" +
                "  opacity: 1;\n" +
                ("  color: " + placeholderColor + ";\n") +
                "}";
        }).join('\n');
    };
    TextInputPlaceholderSupport._cachedStyles = {};
    return TextInputPlaceholderSupport;
}());
var TextInput = /** @class */ (function (_super) {
    __extends(TextInput, _super);
    function TextInput(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._mountedComponent = null;
        _this._selectionStart = 0;
        _this._selectionEnd = 0;
        _this._isFocused = false;
        _this._ariaLiveEnabled = false;
        _this._onMount = function (comp) {
            _this._mountedComponent = comp;
            if (_this._mountedComponent && _this._mountedComponent instanceof HTMLTextAreaElement) {
                TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);
            }
        };
        _this._onMultilineInput = function (ev) {
            _this._onInput();
            TextInput._updateScrollPositions(ev.currentTarget, !!_this.state.autoResize);
        };
        _this._onInput = function () {
            if (_isMac && _this._mountedComponent && _this._isFocused && !_this._ariaLiveEnabled) {
                // VoiceOver does not handle text inputs properly at the moment, aria-live is a temporary workaround.
                // And we're adding aria-live only for the focused input which is being edited, otherwise it might
                // interrupt some required announcements.
                _this._mountedComponent.setAttribute('aria-live', 'assertive');
                _this._ariaLiveEnabled = true;
            }
        };
        _this._onFocus = function (e) {
            if (_this._mountedComponent) {
                _this._isFocused = true;
                if (_this.props.onFocus) {
                    _this.props.onFocus(e);
                }
            }
        };
        _this._onBlur = function (e) {
            if (_this._mountedComponent) {
                _this._isFocused = false;
                if (_isMac && _this._ariaLiveEnabled) {
                    _this._mountedComponent.removeAttribute('aria-live');
                    _this._ariaLiveEnabled = false;
                }
                if (_this.props.onBlur) {
                    _this.props.onBlur(e);
                }
            }
        };
        _this._onPaste = function (e) {
            if (_this.props.onPaste) {
                _this.props.onPaste(e);
            }
            _this._checkSelectionChanged();
        };
        _this._onInputChanged = function (event) {
            if (!event.defaultPrevented) {
                if (_this._mountedComponent) {
                    // Has the input value changed?
                    var value = _this._mountedComponent.value || '';
                    if (_this.state.inputValue !== value) {
                        // If the parent component didn't specify a value, we'll keep
                        // track of the modified value.
                        if (_this.props.value === undefined) {
                            _this.setState({
                                inputValue: value
                            });
                        }
                        if (_this.props.onChangeText) {
                            _this.props.onChangeText(value);
                        }
                    }
                    _this._checkSelectionChanged();
                }
            }
        };
        _this._checkSelectionChanged = function () {
            if (_this._mountedComponent) {
                if (_this._selectionStart !== _this._mountedComponent.selectionStart ||
                    _this._selectionEnd !== _this._mountedComponent.selectionEnd) {
                    _this._selectionStart = _this._mountedComponent.selectionStart || 0;
                    _this._selectionEnd = _this._mountedComponent.selectionEnd || 0;
                    if (_this.props.onSelectionChange) {
                        _this.props.onSelectionChange(_this._selectionStart, _this._selectionEnd);
                    }
                }
            }
        };
        _this._onKeyDown = function (e) {
            // Generate a "submit editing" event if the user
            // pressed enter or return.
            if (e.keyCode === 13 && (!_this.props.multiline || _this.props.blurOnSubmit)) {
                if (_this.props.onSubmitEditing) {
                    _this.props.onSubmitEditing();
                }
                if (_this.props.blurOnSubmit) {
                    _this.blur();
                }
            }
            if (_this.props.onKeyPress) {
                _this.props.onKeyPress(e);
            }
            _this._checkSelectionChanged();
        };
        _this._onScroll = function (e) {
            var targetElement = e.currentTarget;
            // Fix scrollTop if the TextInput can auto-grow
            // If the item is bounded by max-height, don't scroll since we want input to follow the cursor at that point
            if (_this.state.autoResize && targetElement.scrollHeight < targetElement.clientHeight) {
                targetElement.scrollTop = 0;
            }
            if (_this.props.onScroll) {
                _this.props.onScroll(targetElement.scrollLeft, targetElement.scrollTop);
            }
        };
        _this._focus = function () {
            AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(_this, function () { return _this.focus(); }, function () { return !!_this._mountedComponent; });
        };
        _this.state = {
            inputValue: props.value !== undefined ? props.value : (props.defaultValue || ''),
            autoResize: TextInput._shouldAutoResize(props)
        };
        return _this;
    }
    TextInput.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        var _this = this;
        var nextState = {};
        if (nextProps.value !== undefined && nextProps.value !== this.state.inputValue) {
            nextState.inputValue = nextProps.value;
        }
        if (nextProps.style !== this.props.style || nextProps.multiline !== this.props.multiline) {
            var fixedHeight = TextInput._shouldAutoResize(nextProps);
            if (this.state.autoResize !== fixedHeight) {
                nextState.autoResize = fixedHeight;
            }
        }
        if (nextProps.placeholderTextColor !== this.props.placeholderTextColor) {
            if (nextProps.placeholderTextColor) {
                TextInputPlaceholderSupport.addRef(nextProps.placeholderTextColor);
            }
            if (this.props.placeholderTextColor) {
                TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);
            }
        }
        if (!lodashMini_1.isEmpty(nextState)) {
            this.setState(nextState, function () {
                // Resize as needed after state is set
                if (_this._mountedComponent instanceof HTMLTextAreaElement) {
                    TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);
                }
            });
        }
    };
    TextInput.prototype.componentDidMount = function () {
        if (this.props.placeholderTextColor) {
            TextInputPlaceholderSupport.addRef(this.props.placeholderTextColor);
        }
        if (this.props.autoFocus) {
            this.requestFocus();
        }
    };
    TextInput.prototype.componentWillUnmount = function () {
        if (this.props.placeholderTextColor) {
            TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);
        }
    };
    TextInput.prototype.render = function () {
        var _this = this;
        var combinedStyles = Styles_1.default.combine([_styles.defaultStyle, this.props.style]);
        // Always hide the outline.
        combinedStyles.outline = 'none';
        combinedStyles.resize = 'none';
        // Set the border to zero width if not otherwise specified.
        if (combinedStyles.borderWidth === undefined) {
            combinedStyles.borderWidth = 0;
        }
        // By default, the control is editable.
        var editable = (this.props.editable !== undefined ? this.props.editable : true);
        var spellCheck = (this.props.spellCheck !== undefined ? this.props.spellCheck : this.props.autoCorrect);
        var className = this.props.placeholderTextColor !== undefined ?
            TextInputPlaceholderSupport.getClassName(this.props.placeholderTextColor) : undefined;
        // Use a textarea for multi-line and a regular input for single-line.
        if (this.props.multiline) {
            return (React.createElement("textarea", { ref: this._onMount, style: combinedStyles, value: this.state.inputValue, title: this.props.title, tabIndex: this.props.tabIndex, autoCorrect: this.props.autoCorrect === false ? 'off' : undefined, spellCheck: spellCheck, disabled: !editable, maxLength: this.props.maxLength, placeholder: this.props.placeholder, className: className, onChange: this._onInputChanged, onKeyDown: this._onKeyDown, onKeyUp: this._checkSelectionChanged, onInput: this._onMultilineInput, onFocus: this._onFocus, onBlur: this._onBlur, onMouseDown: this._checkSelectionChanged, onMouseUp: this._checkSelectionChanged, onPaste: this._onPaste, onScroll: this._onScroll, "aria-label": this.props.accessibilityLabel || this.props.title, "data-test-id": this.props.testId }));
        }
        else {
            var _a = this._getKeyboardType(), keyboardTypeValue = _a.keyboardTypeValue, wrapInForm = _a.wrapInForm, pattern = _a.pattern;
            var input = (React.createElement("input", { ref: this._onMount, style: combinedStyles, value: this.state.inputValue, title: this.props.title, tabIndex: this.props.tabIndex, className: className, autoCorrect: this.props.autoCorrect === false ? 'off' : undefined, spellCheck: spellCheck, disabled: !editable, maxLength: this.props.maxLength, placeholder: this.props.placeholder, size: 1, onChange: this._onInputChanged, onKeyDown: this._onKeyDown, onKeyUp: this._checkSelectionChanged, onInput: this._onInput, onFocus: this._onFocus, onBlur: this._onBlur, onMouseDown: this._checkSelectionChanged, onMouseUp: this._checkSelectionChanged, onPaste: this._onPaste, "aria-label": this.props.accessibilityLabel || this.props.title, type: keyboardTypeValue, pattern: pattern, "data-test-id": this.props.testId }));
            if (wrapInForm) {
                // Wrap the input in a form tag if required
                input = (React.createElement("form", { action: '', onSubmit: function (ev) { /* prevent form submission/page reload */ ev.preventDefault(); _this.blur(); }, style: _styles.formStyle }, input));
            }
            return input;
        }
    };
    TextInput._shouldAutoResize = function (props) {
        // Single line boxes don't need auto-resize
        if (!props.multiline) {
            return false;
        }
        var combinedStyles = Styles_1.default.combine(props.style);
        if (!combinedStyles || typeof combinedStyles === 'number') {
            // Number-type styles aren't allowed on web but if they're found we can't decode them so assume not fixed height
            return true;
        }
        else if (Array.isArray(combinedStyles)) {
            // Iterate across the array and see if there's any height value
            // It's possible that the height could be set via another mechanism (like absolute positioning) which would potenailly
            // incorrectly engage the autoResize mode
            return combinedStyles.some(function (style) {
                if (!style || typeof style === 'number') {
                    return true;
                }
                return style.height === undefined;
            });
        }
        else {
            return combinedStyles.height === undefined;
        }
    };
    TextInput._updateScrollPositions = function (element, autoResize) {
        // If the height is fixed, there's nothing more to do
        if (!autoResize) {
            return;
        }
        // When scrolling we need to retain scroll tops of all elements
        var scrollTops = this._getParentElementAndTops(element);
        // Reset height to 1px so that we can detect shrinking TextInputs
        element.style.height = '1px';
        element.style.height = element.scrollHeight + 'px';
        scrollTops.forEach(function (obj) {
            obj.el.scrollTop = obj.top;
        });
    };
    TextInput._getParentElementAndTops = function (textAreaElement) {
        var element = textAreaElement;
        var results = [];
        while (element && element.parentElement) {
            element = element.parentElement;
            results.push({
                el: element,
                top: element.scrollTop
            });
        }
        return results;
    };
    TextInput.prototype._getKeyboardType = function () {
        // Determine the correct virtual keyboardType in HTML 5.
        // Some types require the <input> tag to be wrapped in a form.
        // Pattern is used on numeric keyboardType to display numbers only.
        var keyboardTypeValue = 'text';
        var wrapInForm = false;
        var pattern;
        if (this.props.keyboardType === 'numeric') {
            pattern = '\\d*';
        }
        else if (this.props.keyboardType === 'number-pad') {
            keyboardTypeValue = 'tel';
        }
        else if (this.props.keyboardType === 'email-address') {
            keyboardTypeValue = 'email';
        }
        if (this.props.returnKeyType === 'search') {
            keyboardTypeValue = 'search';
            wrapInForm = true;
        }
        if (this.props.secureTextEntry) {
            keyboardTypeValue = 'password';
        }
        return { keyboardTypeValue: keyboardTypeValue, wrapInForm: wrapInForm, pattern: pattern };
    };
    TextInput.prototype.blur = function () {
        if (this._mountedComponent) {
            this._mountedComponent.blur();
        }
    };
    TextInput.prototype.requestFocus = function () {
        this._focus();
    };
    TextInput.prototype.focus = function () {
        if (this._mountedComponent) {
            this._mountedComponent.focus();
        }
    };
    TextInput.prototype.setAccessibilityFocus = function () {
        this._focus();
    };
    TextInput.prototype.isFocused = function () {
        if (this._mountedComponent) {
            return document.activeElement === this._mountedComponent;
        }
        return false;
    };
    TextInput.prototype.selectAll = function () {
        if (this._mountedComponent) {
            this._mountedComponent.select();
        }
    };
    TextInput.prototype.selectRange = function (start, end) {
        if (this._mountedComponent) {
            var component = this._mountedComponent;
            component.setSelectionRange(start, end);
        }
    };
    TextInput.prototype.getSelectionRange = function () {
        var range = {
            start: 0,
            end: 0
        };
        if (this._mountedComponent) {
            range.start = this._mountedComponent.selectionStart || 0;
            range.end = this._mountedComponent.selectionEnd || 0;
        }
        return range;
    };
    TextInput.prototype.setValue = function (value) {
        var inputValue = value || '';
        if (this.state.inputValue !== inputValue) {
            // It's important to set the actual value in the DOM immediately. This allows us to call other related methods
            // like selectRange synchronously afterward.
            if (this._mountedComponent) {
                this._mountedComponent.value = inputValue;
            }
            this.setState({
                inputValue: inputValue
            });
            if (this.props.onChangeText) {
                this.props.onChangeText(value);
            }
        }
    };
    TextInput.contextTypes = {
        focusArbitrator: PropTypes.object
    };
    return TextInput;
}(React.Component));
exports.TextInput = TextInput;
FocusManager_1.applyFocusableComponentMixin(TextInput);
exports.default = TextInput;

},{"prop-types":"Iix9","react":"HdMw","../common/utils/AutoFocusHelper":"uohT","./utils/FocusManager":"HWpt","./utils/lodashMini":"Wdkl","./Styles":"FK4c"}],"RydV":[function(require,module,exports) {
"use strict";
/**
 * Animated.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Implements animated components for web version of ReactXP.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:function-name
var React = require("react");
var ReactDOM = require("react-dom");
var AppConfig_1 = require("../common/AppConfig");
var Easing_1 = require("../common/Easing");
exports.Easing = Easing_1.default;
var RX = require("../common/Interfaces");
var executeTransition_1 = require("./animated/executeTransition");
var Image_1 = require("./Image");
var _ = require("./utils/lodashMini");
var Styles_1 = require("./Styles");
var Text_1 = require("./Text");
var TextInput_1 = require("./TextInput");
var View_1 = require("./View");
// Animated Css Property Units - check /common/Types for the list of available
// css animated properties
var animatedPropUnits = {
    // AnimatedFlexboxStyleRules
    height: 'px',
    width: 'px',
    left: 'px',
    right: 'px',
    top: 'px',
    bottom: 'px',
    // AnimatedTransformStyleRules
    perspective: '',
    rotate: 'deg',
    rotateX: 'deg',
    rotateY: 'deg',
    rotateZ: 'deg',
    scale: '',
    scaleX: '',
    scaleY: '',
    scaleZ: '',
    translateX: 'px',
    translateY: 'px',
    skewX: '',
    skewY: '',
    // AnimatedViewAndImageCommonStyleRules
    backgroundColor: '',
    opacity: '',
    borderRadius: 'px',
    // AnimatedTextStyleRules
    color: '',
    fontSize: 'px'
};
// Every Animation subclass should extend this.
var Animation = /** @class */ (function () {
    function Animation() {
    }
    return Animation;
}());
exports.Animation = Animation;
// The animated value object
var Value = /** @class */ (function (_super) {
    __extends(Value, _super);
    // Initializes the object with the defaults and assigns the id for the animated value.
    function Value(value) {
        var _this = _super.call(this, value) || this;
        _this._value = value;
        _this._listeners = [];
        return _this;
    }
    // Gets the current animated value (this gets updates after animation concludes)
    Value.prototype._getInputValue = function () {
        return this._value;
    };
    Value.prototype._getOutputValue = function () {
        return this._getInterpolatedValue(this._value);
    };
    Value.prototype._getInterpolatedValue = function (inputVal) {
        return inputVal;
    };
    Value.prototype._isInterpolated = function () {
        return false;
    };
    Value.prototype.interpolate = function (config) {
        return new InterpolatedValue(config, this);
    };
    // Updates a value in this animated reference.
    Value.prototype.setValue = function (value) {
        var _this = this;
        if (value === undefined) {
            throw new Error('An invalid value was passed into setvalue in the animated value api');
        }
        // If value the same, do nothing.
        if (value === this._value) {
            return;
        }
        this._value = value;
        // Notify subscribers about the new value.
        _.each(this._listeners, function (listener) { return listener.setValue(_this, value); });
    };
    // Add listener for when the value gets updated.
    Value.prototype._addListener = function (listenerToAdd) {
        if (this._listeners.indexOf(listenerToAdd) < 0) {
            this._listeners.push(listenerToAdd);
        }
    };
    // Remove a specific listner.
    Value.prototype._removeListener = function (listenerToRemove) {
        this._listeners = _.filter(this._listeners, function (listener) { return listener !== listenerToRemove; });
    };
    // Remove all listeners.
    Value.prototype._removeAllListeners = function () {
        this._listeners = [];
    };
    // Start a specific animation.
    Value.prototype._startTransition = function (toValue, duration, easing, delay, onEnd) {
        var _this = this;
        // If there are no listeners, the app probably has a bug where it's
        // starting an animation before the associated element is mounted.
        // Complete the animation immediately by updating to the end value
        // and caling the onEnd callback.
        if (this._listeners.length === 0) {
            this._updateFinalValue(toValue);
            if (onEnd) {
                onEnd({ finished: false });
            }
            return;
        }
        // Only call onEnd once for a series of listeners.
        var onEndCalled = false;
        var onEndWrapper = function (result) {
            if (onEndCalled) {
                return;
            }
            onEndCalled = true;
            onEnd(result);
        };
        _.each(this._listeners, function (listener) {
            listener.startTransition(_this, _this._getOutputValue(), _this._getInterpolatedValue(toValue), duration, easing, delay, onEndWrapper);
        });
    };
    // Stop animation.
    Value.prototype._stopTransition = function () {
        var _this = this;
        _.each(this._listeners, function (listener) {
            var updatedValue = listener.stopTransition(_this);
            if (updatedValue !== undefined) {
                _this._updateFinalValue(updatedValue);
            }
        });
    };
    // After an animation is stopped or completed, updates
    // the final value.
    Value.prototype._updateFinalValue = function (value) {
        this.setValue(value);
    };
    return Value;
}(RX.Types.AnimatedValue));
exports.Value = Value;
var InterpolatedValue = /** @class */ (function (_super) {
    __extends(InterpolatedValue, _super);
    function InterpolatedValue(_config, rootValue) {
        var _this = _super.call(this, rootValue._getOutputValue()) || this;
        _this._config = _config;
        if (!_this._config || !_this._config.inputRange || !_this._config.outputRange ||
            _this._config.inputRange.length < 2 || _this._config.outputRange.length < 2 ||
            _this._config.inputRange.length !== _this._config.outputRange.length) {
            throw new Error('The interpolation config is invalid. Input and output arrays must be same length.');
        }
        var newInterpolationConfig = {};
        _.each(_this._config.inputRange, function (key, index) {
            newInterpolationConfig[key] = _this._config.outputRange[index];
        });
        _this._interpolationConfig = newInterpolationConfig;
        rootValue._addListener({
            setValue: function (valueObject, newValue) {
                _this.setValue(valueObject._getOutputValue());
            },
            startTransition: function (valueObject, from, toValue, duration, easing, delay, onEnd) {
                _this._startTransition(toValue, duration, easing, delay, onEnd);
            },
            stopTransition: function (valueObject) {
                _this._stopTransition();
                return undefined;
            }
        });
        return _this;
    }
    InterpolatedValue.prototype._startTransition = function (toValue, duration, easing, delay, onEnd) {
        // This API doesn't currently support more than two elements in the
        // interpolation array. Supporting this in the web would require the
        // use of JS-driven animations or keyframes, both of which are prohibitively
        // expensive from a performance and responsiveness perspective.
        if (this._config.inputRange.length !== 2) {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.log('Web implementation of interpolate API currently supports only two interpolation values.');
            }
        }
        _super.prototype._startTransition.call(this, toValue, duration, easing, delay, onEnd);
    };
    InterpolatedValue.prototype._convertValueToNumeric = function (inputVal) {
        if (_.isNumber(inputVal)) {
            return inputVal;
        }
        return parseInt(inputVal, 10);
    };
    InterpolatedValue.prototype._addUnitsToNumericValue = function (value, templateValue) {
        if (_.isNumber(templateValue)) {
            return value;
        }
        // Does the template contain any of the common units?
        var templateString = templateValue;
        var commonUnits = ['deg', 'grad', 'rad'];
        for (var _i = 0, commonUnits_1 = commonUnits; _i < commonUnits_1.length; _i++) {
            var unit = commonUnits_1[_i];
            if (templateString.indexOf(unit) > 0) {
                return value.toString() + unit;
            }
        }
        return value;
    };
    InterpolatedValue.prototype._getInterpolatedValue = function (inputVal) {
        var _this = this;
        if (!this._interpolationConfig) {
            throw new Error('There is no interpolation config but one is required');
        }
        var numericInputValue = this._convertValueToNumeric(inputVal);
        var outputValues = this._config.outputRange.map(function (value) {
            return _this._convertValueToNumeric(value);
        });
        if (this._interpolationConfig[numericInputValue]) {
            return this._interpolationConfig[numericInputValue];
        }
        if (inputVal < this._config.inputRange[0]) {
            return outputValues[0];
        }
        for (var i = 1; i < this._config.inputRange.length; i++) {
            if (inputVal < this._config.inputRange[i]) {
                var ratio = (numericInputValue - this._config.inputRange[i - 1]) /
                    (this._config.inputRange[i] - this._config.inputRange[i - 1]);
                return this._addUnitsToNumericValue(this._config.outputRange[i] * ratio +
                    this._config.outputRange[i - 1] * (1 - ratio), inputVal);
            }
        }
        return this._addUnitsToNumericValue(outputValues[this._config.inputRange.length - 1], inputVal);
    };
    InterpolatedValue.prototype._isInterpolated = function () {
        return true;
    };
    return InterpolatedValue;
}(Value));
exports.InterpolatedValue = InterpolatedValue;
exports.timing = function (value, config) {
    if (!value || !config) {
        throw new Error('Timing animation requires value and config');
    }
    var stopLooping = false;
    return {
        start: function (onEnd) {
            var animate = function () {
                if (config.loop) {
                    value.setValue(config.loop.restartFrom);
                }
                var easing = config.easing || Easing_1.default.Default();
                var duration = config.duration !== undefined ? config.duration : 500;
                var delay = config.delay || 0;
                value._startTransition(config.toValue, duration, easing.cssName, delay, function (result) {
                    // Restart the loop?
                    if (config.loop && !stopLooping) {
                        animate();
                    }
                    else {
                        value._updateFinalValue(config.toValue);
                    }
                    if (onEnd) {
                        onEnd(result);
                    }
                });
            };
            // Trigger animation loop
            animate();
        },
        stop: function () {
            stopLooping = true;
            value._stopTransition();
        }
    };
};
exports.sequence = function (animations) {
    if (!animations) {
        throw new Error('Sequence animation requires a list of animations');
    }
    var hasBeenStopped = false;
    var doneCount = 0;
    var result = {
        start: function (onEnd) {
            if (!animations || animations.length === 0) {
                throw new Error('No animations were passed to the animated sequence API');
            }
            var executeNext = function () {
                doneCount++;
                var isFinished = doneCount === animations.length;
                if (hasBeenStopped || isFinished) {
                    doneCount = 0;
                    hasBeenStopped = false;
                    if (onEnd) {
                        onEnd({ finished: isFinished });
                    }
                    return;
                }
                animations[doneCount].start(executeNext);
            };
            animations[doneCount].start(executeNext);
        },
        stop: function () {
            if (doneCount < animations.length) {
                doneCount = 0;
                hasBeenStopped = true;
                animations[doneCount].stop();
            }
        }
    };
    return result;
};
exports.parallel = function (animations) {
    if (!animations) {
        throw new Error('Parallel animation requires a list of animations');
    }
    // Variable to make sure we only call stop() at most once
    var hasBeenStopped = false;
    var doneCount = 0;
    var result = {
        start: function (onEnd) {
            if (!animations || animations.length === 0) {
                throw new Error('No animations were passed to the animated parallel API');
            }
            // Walk through animations and start all as soon as possible.
            animations.forEach(function (animation, id) {
                animation.start(function (animationResult) {
                    doneCount++;
                    var isFinished = doneCount === animations.length;
                    if (hasBeenStopped || isFinished) {
                        doneCount = 0;
                        hasBeenStopped = false;
                        if (onEnd) {
                            onEnd({ finished: isFinished });
                        }
                        return;
                    }
                });
            });
        },
        stop: function () {
            doneCount = 0;
            hasBeenStopped = true;
            animations.forEach(function (animation) {
                animation.stop();
            });
        }
    };
    return result;
};
// Function for creating wrapper AnimatedComponent around passed in component
function createAnimatedComponent(Component) {
    var AnimatedComponentGenerated = /** @class */ (function (_super) {
        __extends(AnimatedComponentGenerated, _super);
        function AnimatedComponentGenerated(props) {
            var _this = _super.call(this, props) || this;
            _this._mountedComponent = null;
            _this._onMount = function (component) {
                _this._mountedComponent = component;
            };
            _this._animatedAttributes = {};
            _this._animatedTransforms = {};
            _this._updateStyles(props);
            return _this;
        }
        AnimatedComponentGenerated.prototype.setNativeProps = function (props) {
            if (AppConfig_1.default.isDevelopmentMode()) {
                console.error('setNativeProps not supported on web');
            }
        };
        AnimatedComponentGenerated.prototype.UNSAFE_componentWillReceiveProps = function (props) {
            this._updateStyles(props);
        };
        AnimatedComponentGenerated.prototype.setValue = function (valueObject, newValue) {
            // We should never get here if the component isn't mounted,
            // but we'll add this additional protection.
            if (!this._mountedComponent) {
                return;
            }
            var attrib = this._findAnimatedAttributeByValue(this._animatedAttributes, valueObject);
            if (attrib) {
                var domNode = this._getDomNode();
                if (domNode) {
                    var cssValue = this._generateCssAttributeValue(attrib, valueObject._getOutputValue());
                    domNode.style[attrib] = cssValue;
                }
                return;
            }
            var transform = this._findAnimatedAttributeByValue(this._animatedTransforms, valueObject);
            if (transform) {
                var domNode = this._getDomNode();
                if (domNode) {
                    domNode.style.transform = this._generateCssTransformList(true);
                }
            }
        };
        AnimatedComponentGenerated.prototype.startTransition = function (valueObject, fromValue, toValue, duration, easing, delay, onEnd) {
            // We should never get here if the component isn't mounted,
            // but we'll add this additional protection.
            if (!this._mountedComponent) {
                return;
            }
            var updateTransition = false;
            var attrib = this._findAnimatedAttributeByValue(this._animatedAttributes, valueObject);
            if (attrib) {
                if (this._animatedAttributes[attrib].activeTransition) {
                    if (AppConfig_1.default.isDevelopmentMode()) {
                        console.error('Animation started while animation was already pending');
                    }
                }
                this._animatedAttributes[attrib].activeTransition = {
                    property: Styles_1.default.convertJsToCssStyle(attrib),
                    from: this._generateCssAttributeValue(attrib, fromValue),
                    to: this._generateCssAttributeValue(attrib, toValue),
                    duration: duration,
                    timing: easing,
                    delay: delay,
                    toValue: toValue,
                    onEnd: onEnd
                };
                updateTransition = true;
            }
            var transform = this._findAnimatedAttributeByValue(this._animatedTransforms, valueObject);
            if (transform) {
                if (this._animatedTransforms[transform].activeTransition) {
                    if (AppConfig_1.default.isDevelopmentMode()) {
                        console.error('Animation started while animation was already pending');
                    }
                }
                this._animatedTransforms[transform].activeTransition = {
                    property: transform,
                    from: fromValue,
                    to: toValue,
                    duration: duration,
                    timing: easing,
                    delay: delay,
                    toValue: toValue,
                    onEnd: onEnd
                };
                updateTransition = true;
            }
            if (updateTransition) {
                this._updateTransition();
            }
        };
        // Stops a pending transition, returning the value at the current time.
        AnimatedComponentGenerated.prototype.stopTransition = function (valueObject) {
            // We should never get here if the component isn't mounted,
            // but we'll add this additional protection.
            if (!this._mountedComponent) {
                return;
            }
            var partialValue;
            var stoppedTransition;
            var updateTransition = false;
            var attrib = this._findAnimatedAttributeByValue(this._animatedAttributes, valueObject);
            if (attrib) {
                var activeTransition = this._animatedAttributes[attrib].activeTransition;
                if (activeTransition) {
                    partialValue = activeTransition.toValue;
                    // We don't currently support updating to an intermediate
                    // value for interpolated values because this would involve
                    // mapping the interpolated value in reverse. Instead, we'll
                    // simply update it to the "toValue".
                    if (!valueObject._isInterpolated()) {
                        var domNode = this._getDomNode();
                        if (domNode) {
                            var computedStyle = window.getComputedStyle(domNode, undefined);
                            if (computedStyle && computedStyle[attrib]) {
                                partialValue = computedStyle[attrib];
                            }
                        }
                    }
                    stoppedTransition = this._animatedAttributes[attrib].activeTransition;
                    delete this._animatedAttributes[attrib].activeTransition;
                    updateTransition = true;
                }
            }
            else {
                var transform = this._findAnimatedAttributeByValue(this._animatedTransforms, valueObject);
                if (transform) {
                    var activeTransition = this._animatedTransforms[transform].activeTransition;
                    if (activeTransition) {
                        // We don't currently support updating to an intermediate value
                        // for transform values. This is because getComputedStyle
                        // returns a transform matrix for 'transform'. To implement this, we'd
                        // need to convert the matrix back to a rotation, scale, etc.
                        partialValue = activeTransition.toValue;
                        stoppedTransition = this._animatedTransforms[transform].activeTransition;
                        delete this._animatedTransforms[transform].activeTransition;
                        updateTransition = true;
                    }
                }
            }
            if (stoppedTransition && stoppedTransition.onEnd) {
                stoppedTransition.onEnd({ finished: false });
            }
            if (updateTransition) {
                this._updateTransition();
            }
            return partialValue;
        };
        AnimatedComponentGenerated.prototype._getDomNode = function () {
            return ReactDOM.findDOMNode(this._mountedComponent);
        };
        // Looks for the specified value object in the specified map. Returns
        // the key for the map (i.e. the attribute name) if found.
        AnimatedComponentGenerated.prototype._findAnimatedAttributeByValue = function (map, valueObj) {
            var keys = _.keys(map);
            var index = _.findIndex(keys, function (key) { return map[key].valueObject === valueObj; });
            return index >= 0 ? keys[index] : undefined;
        };
        // Updates the "transform" CSS attribute for the element to reflect all
        // active transitions.
        AnimatedComponentGenerated.prototype._updateTransition = function () {
            var _this = this;
            // We should never get here if the component isn't mounted,
            // but we'll add this additional protection.
            if (!this._mountedComponent) {
                return;
            }
            var activeTransitions = [];
            _.each(this._animatedAttributes, function (attrib) {
                if (attrib.activeTransition) {
                    activeTransitions.push(attrib.activeTransition);
                }
            });
            // If there are any transform transitions, we need to combine
            // these into a single transition. That means we can't specify
            // different durations, delays or easing functions for each. That's
            // an unfortunate limitation of CSS.
            var keys = _.keys(this._animatedTransforms);
            var index = _.findIndex(keys, function (key) { return !!_this._animatedTransforms[key].activeTransition; });
            if (index >= 0) {
                var transformTransition = this._animatedTransforms[keys[index]].activeTransition;
                activeTransitions.push({
                    property: 'transform',
                    from: this._generateCssTransformList(false),
                    to: this._generateCssTransformList(true),
                    duration: transformTransition.duration,
                    timing: transformTransition.timing,
                    delay: transformTransition.delay
                });
            }
            if (activeTransitions.length > 0) {
                var domNode = this._getDomNode();
                if (domNode) {
                    executeTransition_1.executeTransition(domNode, activeTransitions, function () {
                        // Clear all of the active transitions and invoke the onEnd callbacks.
                        var completeTransitions = [];
                        _.each(_this._animatedAttributes, function (attrib) {
                            if (attrib.activeTransition) {
                                completeTransitions.push(attrib.activeTransition);
                                delete attrib.activeTransition;
                            }
                        });
                        _.each(_this._animatedTransforms, function (transform) {
                            if (transform.activeTransition) {
                                completeTransitions.push(transform.activeTransition);
                                delete transform.activeTransition;
                            }
                        });
                        _.each(completeTransitions, function (transition) {
                            if (transition.onEnd) {
                                transition.onEnd({ finished: true });
                            }
                        });
                    });
                }
            }
        };
        // Generates the CSS value for the specified attribute given
        // an animated value object.
        AnimatedComponentGenerated.prototype._generateCssAttributeValue = function (attrib, newValue) {
            // If the value is a raw number, append the default units.
            // If it's a string, we assume the caller has specified the units.
            if (typeof newValue === 'number') {
                newValue = newValue + animatedPropUnits[attrib];
            }
            return newValue;
        };
        AnimatedComponentGenerated.prototype._generateCssTransformValue = function (transform, newValue) {
            // If the value is a raw number, append the default units.
            // If it's a string, we assume the caller has specified the units.
            if (typeof newValue === 'number') {
                newValue = newValue + animatedPropUnits[transform];
            }
            return newValue;
        };
        // Regenerates the list of transforms, combining all static and animated transforms.
        AnimatedComponentGenerated.prototype._generateCssTransformList = function (useActiveValues) {
            var _this = this;
            var transformList = [];
            _.each(this._staticTransforms, function (value, transform) {
                transformList.push(transform + '(' + value + ')');
            });
            _.each(this._animatedTransforms, function (value, transform) {
                var newValue = useActiveValues && value.activeTransition ?
                    value.activeTransition.to : value.valueObject._getOutputValue();
                transformList.push(transform + '(' + _this._generateCssTransformValue(transform, newValue) + ')');
            });
            return transformList.join(' ');
        };
        // Typing of `any` on StyleRuleSet isn't desirable, but there's not accurate typings that can be used to represent
        // our merging of web/RX styles here here
        AnimatedComponentGenerated.prototype._updateStyles = function (props) {
            var _this = this;
            this._propsWithoutStyle = _.omit(props, 'style');
            var rawStyles = Styles_1.default.combine(props.style || {});
            this._processedStyle = {};
            var newAnimatedAttributes = {};
            for (var attrib in rawStyles) {
                // Handle transforms separately.
                if (attrib === 'staticTransforms' || attrib === 'animatedTransforms') {
                    continue;
                }
                // Is this a dynamic (animated) value?
                if (rawStyles[attrib] instanceof Value) {
                    var valueObj = rawStyles[attrib];
                    this._processedStyle[attrib] = this._generateCssAttributeValue(attrib, valueObj._getOutputValue());
                    newAnimatedAttributes[attrib] = valueObj;
                }
                else {
                    // Copy the static style value.
                    this._processedStyle[attrib] = rawStyles[attrib];
                }
            }
            // Handle transforms, which require special processing because they need to
            // be combined into a single 'transform' CSS attribute.
            this._staticTransforms = rawStyles.staticTransforms || {};
            var newAnimatedTransforms = rawStyles.animatedTransforms || {};
            // Update this._animatedAttributes and this._animatedTransforms so they match
            // the updated style.
            // Remove any previous animated attributes that are no longer present
            // or associated with different value objects.
            _.each(this._animatedAttributes, function (value, attrib) {
                if (!newAnimatedAttributes[attrib] || newAnimatedAttributes[attrib] !== value.valueObject) {
                    if (value.activeTransition) {
                        if (AppConfig_1.default.isDevelopmentMode()) {
                            console.error('Animated style attribute removed while the animation was active');
                        }
                    }
                    value.valueObject._removeListener(_this);
                    delete _this._animatedAttributes[attrib];
                }
            });
            // Add new animated attributes.
            _.each(newAnimatedAttributes, function (value, attrib) {
                if (!_this._animatedAttributes[attrib]) {
                    _this._animatedAttributes[attrib] = { valueObject: value };
                    if (_this._mountedComponent) {
                        value._addListener(_this);
                    }
                }
            });
            // Remove any previous animated transforms that are no longer present
            // or associated with different value objects.
            _.each(this._animatedTransforms, function (value, transform) {
                if (!newAnimatedTransforms[transform] || newAnimatedTransforms[transform] !== value.valueObject) {
                    if (value.activeTransition) {
                        if (AppConfig_1.default.isDevelopmentMode()) {
                            console.warn('Should not remove an animated transform attribute while the animation is active');
                        }
                    }
                    value.valueObject._removeListener(_this);
                    delete _this._animatedTransforms[transform];
                }
            });
            // Add new animated transforms.
            _.each(newAnimatedTransforms, function (value, transform) {
                if (!_this._animatedTransforms[transform]) {
                    _this._animatedTransforms[transform] = { valueObject: value };
                    if (_this._mountedComponent) {
                        value._addListener(_this);
                    }
                }
            });
            // Update the transform attribute in this._processedStyle.
            var transformList = this._generateCssTransformList(true);
            if (transformList) {
                this._processedStyle.transform = transformList;
            }
        };
        AnimatedComponentGenerated.prototype.componentDidMount = function () {
            var _this = this;
            _.each(this._animatedAttributes, function (value) {
                value.valueObject._addListener(_this);
            });
            _.each(this._animatedTransforms, function (value) {
                value.valueObject._addListener(_this);
            });
        };
        AnimatedComponentGenerated.prototype.componentWillUnmount = function () {
            var _this = this;
            _.each(this._animatedAttributes, function (value) {
                value.valueObject._removeListener(_this);
            });
            this._animatedAttributes = {};
            _.each(this._animatedTransforms, function (value) {
                value.valueObject._removeListener(_this);
            });
            this._animatedTransforms = {};
        };
        AnimatedComponentGenerated.prototype.focus = function () {
            if (this._mountedComponent && this._mountedComponent.focus) {
                this._mountedComponent.focus();
            }
        };
        AnimatedComponentGenerated.prototype.requestFocus = function () {
            if (this._mountedComponent && this._mountedComponent.requestFocus) {
                this._mountedComponent.requestFocus();
            }
        };
        AnimatedComponentGenerated.prototype.blur = function () {
            if (this._mountedComponent && this._mountedComponent.blur) {
                this._mountedComponent.blur();
            }
        };
        AnimatedComponentGenerated.prototype.setFocusRestricted = function (restricted) {
            if (this._mountedComponent && this._mountedComponent.setFocusRestricted) {
                this._mountedComponent.setFocusRestricted(restricted);
            }
        };
        AnimatedComponentGenerated.prototype.setFocusLimited = function (limited) {
            if (this._mountedComponent && this._mountedComponent.setFocusLimited) {
                this._mountedComponent.setFocusLimited(limited);
            }
        };
        AnimatedComponentGenerated.prototype.render = function () {
            return (React.createElement(Component, __assign({ style: this._processedStyle }, this._propsWithoutStyle, { ref: this._onMount }), this.props.children));
        };
        // Update the component's display name for easy debugging in react devtools extension
        AnimatedComponentGenerated.displayName = "Animated." + (Component.displayName || Component.name || 'Component');
        return AnimatedComponentGenerated;
    }(React.Component));
    return AnimatedComponentGenerated;
}
exports.Image = createAnimatedComponent(Image_1.default);
exports.Text = createAnimatedComponent(Text_1.default);
exports.TextInput = createAnimatedComponent(TextInput_1.default);
exports.View = createAnimatedComponent(View_1.default);
exports.createValue = function (initialValue) {
    return new Value(initialValue);
};
exports.interpolate = function (value, inputRange, outputRange) {
    return value.interpolate({ inputRange: inputRange, outputRange: outputRange });
};

},{"react":"HdMw","react-dom":"X9zx","../common/AppConfig":"IaP6","../common/Easing":"jjbw","../common/Interfaces":"rFlL","./animated/executeTransition":"jZ3P","./Image":"E4vj","./utils/lodashMini":"Wdkl","./Styles":"FK4c","./Text":"rfZP","./TextInput":"JiYf","./View":"J474"}],"oxg3":[function(require,module,exports) {
"use strict";
/**
 * AppVisibilityUtils.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific helpers for firing focus/activity related events
 */
Object.defineProperty(exports, "__esModule", { value: true });
var subscribableevent_1 = require("subscribableevent");
var Timers_1 = require("../../common/utils/Timers");
var lodashMini_1 = require("./lodashMini");
var idleTimeInMs = 60 * 1000;
var AppVisibilityUtils = /** @class */ (function () {
    function AppVisibilityUtils() {
        var _this = this;
        this._isIdle = false;
        this.onFocusedEvent = new subscribableevent_1.default();
        this.onBlurredEvent = new subscribableevent_1.default();
        this.onAppForegroundedEvent = new subscribableevent_1.default();
        this.onAppBackgroundedEvent = new subscribableevent_1.default();
        this.onIdleEvent = new subscribableevent_1.default();
        this.onWakeUpEvent = new subscribableevent_1.default();
        this._wakeUpAndSetTimerForIdle = function () {
            if (!lodashMini_1.isUndefined(_this._timer)) {
                Timers_1.default.clearTimeout(_this._timer);
            }
            if (!_this.hasFocus()) {
                return;
            }
            if (_this.hasFocus() && _this._isIdle) {
                _this._onWakeUp();
            }
            _this._timer = Timers_1.default.setTimeout(function () {
                if (_this.hasFocus()) {
                    _this._onIdle();
                }
            }, idleTimeInMs);
        };
        this._onFocus = function () {
            _this._wakeUpAndSetTimerForIdle();
            _this.onFocusedEvent.fire();
        };
        this._onBlur = function () {
            _this._onIdle();
            _this.onBlurredEvent.fire();
        };
        this._onAppVisibilityChanged = function () {
            if (document.hidden) {
                _this.onAppBackgroundedEvent.fire();
            }
            else {
                _this.onAppForegroundedEvent.fire();
            }
        };
        this._onWakeUp = function () {
            _this._isIdle = false;
            _this.onWakeUpEvent.fire();
        };
        this._onIdle = function () {
            _this._isIdle = true;
            _this.onIdleEvent.fire();
        };
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            window.addEventListener('focus', this._onFocus);
            window.addEventListener('blur', this._onBlur);
            document.addEventListener('visibilitychange', this._onAppVisibilityChanged);
            this._trackIdleStatus();
        }
    }
    AppVisibilityUtils.prototype.hasFocusAndActive = function () {
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            return document.hasFocus() && !this._isIdle;
        }
        return true;
    };
    AppVisibilityUtils.prototype.hasFocus = function () {
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            return document.hasFocus();
        }
        return true;
    };
    AppVisibilityUtils.prototype.isAppInForeground = function () {
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            return !document.hidden;
        }
        return true;
    };
    AppVisibilityUtils.prototype._trackIdleStatus = function () {
        document.addEventListener('mousemove', this._wakeUpAndSetTimerForIdle);
        document.addEventListener('keyup', this._wakeUpAndSetTimerForIdle);
        document.addEventListener('touchstart', this._wakeUpAndSetTimerForIdle);
        document.addEventListener('scroll', this._wakeUpAndSetTimerForIdle);
        this._wakeUpAndSetTimerForIdle();
    };
    return AppVisibilityUtils;
}());
exports.AppVisibilityUtils = AppVisibilityUtils;
exports.default = new AppVisibilityUtils();

},{"subscribableevent":"N3Qs","../../common/utils/Timers":"tBdH","./lodashMini":"Wdkl"}],"L1y1":[function(require,module,exports) {
"use strict";
/**
 * App.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Implements App interface for ReactXP.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var AppVisibilityUtils_1 = require("./utils/AppVisibilityUtils");
var App = /** @class */ (function (_super) {
    __extends(App, _super);
    function App() {
        var _this = _super.call(this) || this;
        _this._setActivationState = function (currentState) {
            if (_this._activationState !== currentState) {
                _this._activationState = currentState;
                _this.activationStateChangedEvent.fire(_this._activationState);
            }
        };
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            _this._activationState = AppVisibilityUtils_1.default.isAppInForeground() ?
                RX.Types.AppActivationState.Active : RX.Types.AppActivationState.Background;
            AppVisibilityUtils_1.default.onAppForegroundedEvent.subscribe(function () {
                _this._setActivationState(RX.Types.AppActivationState.Active);
            });
            AppVisibilityUtils_1.default.onAppBackgroundedEvent.subscribe(function () {
                _this._setActivationState(RX.Types.AppActivationState.Background);
            });
        }
        else {
            _this._activationState = RX.Types.AppActivationState.Active;
        }
        return _this;
    }
    App.prototype.initialize = function (debug, development) {
        _super.prototype.initialize.call(this, debug, development);
    };
    App.prototype.getActivationState = function () {
        return this._activationState;
    };
    return App;
}(RX.App));
exports.App = App;
exports.default = new App();

},{"../common/Interfaces":"rFlL","./utils/AppVisibilityUtils":"oxg3"}],"toiH":[function(require,module,exports) {
"use strict";
/**
 * Clipboard.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Clipboard abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var Clipboard = /** @class */ (function (_super) {
    __extends(Clipboard, _super);
    function Clipboard() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Clipboard.prototype.setText = function (text) {
        var node = Clipboard._createInvisibleNode();
        node.value = text;
        document.body.appendChild(node);
        Clipboard._copyNode(node);
        document.body.removeChild(node);
    };
    Clipboard.prototype.getText = function () {
        // Not supported in web platforms. This should can be only handled
        // in the paste event handlers.
        return Promise.reject('Not supported on web');
    };
    Clipboard._createInvisibleNode = function () {
        var node = document.createElement('textarea');
        node.style.position = 'absolute';
        node.style.left = '-10000px';
        node.style.width = '10px';
        // Use the same vertical position as the current page
        // to avoid scrolling on iOS Safari.
        var yPosition = window.pageYOffset || document.documentElement.scrollTop;
        node.style.top = yPosition + 'px';
        node.readOnly = true;
        return node;
    };
    Clipboard._copyNode = function (node) {
        node.select();
        node.setSelectionRange(0, node.value.length);
        document.execCommand('copy');
        var selection = window.getSelection();
        if (selection) {
            selection.removeAllRanges();
        }
    };
    return Clipboard;
}(RX.Clipboard));
exports.Clipboard = Clipboard;
exports.default = new Clipboard();

},{"../common/Interfaces":"rFlL"}],"JYQD":[function(require,module,exports) {
"use strict";
/**
 * GestureView.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Cross-platform parts of the implementation of the GestureView component.
 * It provides much of the standard work necessary to support combinations of
 * pinch-and-zoom, panning, single tap and double tap gestures.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var assert_1 = require("../common/assert");
var Interfaces_1 = require("../common/Interfaces");
var Timers_1 = require("../common/utils/Timers");
var GestureType;
(function (GestureType) {
    GestureType[GestureType["None"] = 0] = "None";
    GestureType[GestureType["MultiTouch"] = 1] = "MultiTouch";
    GestureType[GestureType["Pan"] = 2] = "Pan";
    GestureType[GestureType["PanVertical"] = 3] = "PanVertical";
    GestureType[GestureType["PanHorizontal"] = 4] = "PanHorizontal";
})(GestureType = exports.GestureType || (exports.GestureType = {}));
// These threshold values were chosen empirically.
var _pinchZoomPixelThreshold = 3;
var _panPixelThreshold = 10;
var _tapDurationThreshold = 500;
var _longPressDurationThreshold = 750;
var _tapPixelThreshold = 4;
var _doubleTapDurationThreshold = 250;
var _doubleTapPixelThreshold = 20;
var GestureView = /** @class */ (function (_super) {
    __extends(GestureView, _super);
    function GestureView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // State for tracking move gestures (pinch/zoom or pan)
        _this._pendingGestureType = GestureType.None;
        // Skip ability for next tap to work around some event issues
        _this._shouldSkipNextTap = false;
        // Protected only as a hack for supporting keyboard nav clicking from native-common/GestureView
        _this._sendTapEvent = function (tapEvent) {
            // we need to skip tap after succesfull pan event
            // mouse up would otherwise trigger both pan & tap
            if (_this._shouldSkipNextTap) {
                _this._shouldSkipNextTap = false;
                return;
            }
            var button = GestureView._toMouseButton(tapEvent);
            if (button === 2) {
                // Always handle secondary button, even if context menu is not set - it shouldn't trigger onTap.
                if (_this.props.onContextMenu) {
                    _this.props.onContextMenu(tapEvent);
                }
            }
            else if (_this.props.onTap) {
                _this.props.onTap(tapEvent);
            }
        };
        return _this;
    }
    GestureView.prototype.componentWillUnmount = function () {
        // Dispose of timer before the component goes away.
        this._cancelDoubleTapTimer();
    };
    // Returns true if we care about trapping/tracking the event
    GestureView.prototype._onTouchSeriesStart = function (event) {
        this._lastGestureStartEvent = event;
        // If we're trying to detect a tap, set this as the responder immediately.
        if (this.props.onTap || this.props.onDoubleTap || this.props.onLongPress || this.props.onContextMenu) {
            if (this.props.onLongPress) {
                var gsState = this._touchEventToTapGestureState(event);
                this._startLongPressTimer(gsState);
            }
            return true;
        }
        return false;
    };
    // Returns true if we care about trapping/tracking the event
    GestureView.prototype._onTouchChange = function (event, gestureState) {
        if (!this._lastGestureStartEvent) {
            this._lastGestureStartEvent = event;
        }
        // If this is the first movement we've seen, try to match it against
        // the various move gestures that we're looking for.
        var initializeFromEvent = false;
        if (this._pendingGestureType === GestureType.None) {
            this._pendingGestureType = this._detectMoveGesture(event, gestureState);
            initializeFromEvent = true;
        }
        if (this._pendingGestureType === GestureType.MultiTouch) {
            this._setPendingGestureState(this._sendMultiTouchEvents(event, gestureState, initializeFromEvent, false));
            return true;
        }
        else if (this._pendingGestureType === GestureType.Pan ||
            this._pendingGestureType === GestureType.PanVertical ||
            this._pendingGestureType === GestureType.PanHorizontal) {
            var spEvent = this._touchEventToTapGestureState(event);
            this._setPendingGestureState(this._sendPanEvent(spEvent, gestureState, this._pendingGestureType, initializeFromEvent, false));
            return true;
        }
        return false;
    };
    GestureView.prototype._onTouchSeriesFinished = function (touchEvent, gestureState) {
        // Can't possibly be a long press if the touch ended.
        this._cancelLongPressTimer();
        // Close out any of the pending move gestures.
        if (this._pendingGestureType === GestureType.MultiTouch) {
            this._sendMultiTouchEvents(touchEvent, gestureState, false, true);
            this._pendingGestureState = undefined;
            this._pendingGestureType = GestureType.None;
        }
        else if (this._pendingGestureType === GestureType.Pan ||
            this._pendingGestureType === GestureType.PanVertical ||
            this._pendingGestureType === GestureType.PanHorizontal) {
            var spEvent = this._touchEventToTapGestureState(touchEvent);
            this._sendPanEvent(spEvent, gestureState, this._pendingGestureType, false, true);
            this._pendingGestureState = undefined;
            this._pendingGestureType = GestureType.None;
        }
        else if (this._isTap(touchEvent)) {
            var tapGestureState = this._touchEventToTapGestureState(touchEvent);
            if (!this.props.onDoubleTap) {
                // If there is no double-tap handler, we can invoke the tap handler immediately.
                this._sendTapEvent(tapGestureState);
            }
            else if (this._isDoubleTap(tapGestureState)) {
                // This is a double-tap, so swallow the previous single tap.
                this._cancelDoubleTapTimer();
                this._sendDoubleTapEvent(tapGestureState);
            }
            else {
                // This wasn't a double-tap. Report any previous single tap and start the double-tap
                // timer so we can determine whether the current tap is a single or double.
                this._reportDelayedTap();
                this._startDoubleTapTimer(tapGestureState);
            }
        }
        else {
            this._reportDelayedTap();
            this._cancelDoubleTapTimer();
        }
    };
    GestureView.prototype._skipNextTap = function () {
        this._shouldSkipNextTap = true;
    };
    GestureView.prototype._setPendingGestureState = function (gestureState) {
        this._reportDelayedTap();
        this._cancelDoubleTapTimer();
        this._cancelLongPressTimer();
        this._pendingGestureState = gestureState;
    };
    GestureView.prototype._detectMoveGesture = function (e, gestureState) {
        if (this._shouldRespondToPinchZoom(e) || this._shouldRespondToRotate(e)) {
            return GestureType.MultiTouch;
        }
        else if (this._shouldRespondToPan(gestureState)) {
            return GestureType.Pan;
        }
        else if (this._shouldRespondToPanVertical(gestureState)) {
            return GestureType.PanVertical;
        }
        else if (this._shouldRespondToPanHorizontal(gestureState)) {
            return GestureType.PanHorizontal;
        }
        return GestureType.None;
    };
    // Determines whether a touch event constitutes a tap. The "finger up"
    // event must be within a certain distance and within a certain time
    // from where the "finger down" event occurred.
    GestureView.prototype._isTap = function (e) {
        if (!this._lastGestureStartEvent) {
            return false;
        }
        var initialTimeStamp = this._getEventTimestamp(this._lastGestureStartEvent);
        var initialPageX = this._lastGestureStartEvent.pageX;
        var initialPageY = this._lastGestureStartEvent.pageY;
        var timeStamp = this._getEventTimestamp(e);
        return (timeStamp - initialTimeStamp <= _tapDurationThreshold &&
            this._calcDistance(initialPageX - e.pageX, initialPageY - e.pageY) <= _tapPixelThreshold);
    };
    // This method assumes that the caller has already determined that two
    // taps have been detected in a row with no intervening gestures. It
    // is responsible for determining if they occurred within close proximity
    // and within a certain threshold of time.
    GestureView.prototype._isDoubleTap = function (e) {
        if (!this._lastTapEvent) {
            return false;
        }
        return (e.timeStamp - this._lastTapEvent.timeStamp <= _doubleTapDurationThreshold &&
            this._calcDistance(this._lastTapEvent.pageX - e.pageX, this._lastTapEvent.pageY - e.pageY) <= _doubleTapPixelThreshold);
    };
    // Starts a timer that reports a previous tap if it's not canceled by a subsequent gesture.
    GestureView.prototype._startDoubleTapTimer = function (e) {
        var _this = this;
        this._lastTapEvent = e;
        this._doubleTapTimer = Timers_1.default.setTimeout(function () {
            _this._reportDelayedTap();
            _this._doubleTapTimer = undefined;
        }, _doubleTapDurationThreshold);
    };
    // Cancels any pending double-tap timer.
    GestureView.prototype._cancelDoubleTapTimer = function () {
        if (this._doubleTapTimer) {
            Timers_1.default.clearTimeout(this._doubleTapTimer);
            this._doubleTapTimer = undefined;
        }
    };
    GestureView.prototype._startLongPressTimer = function (gsState, isDefinitelyMouse) {
        var _this = this;
        if (isDefinitelyMouse === void 0) { isDefinitelyMouse = false; }
        if (this._pendingLongPressEvent) {
            return;
        }
        this._pendingLongPressEvent = gsState;
        this._longPressTimer = Timers_1.default.setTimeout(function () {
            _this._reportLongPress();
            _this._longPressTimer = undefined;
        }, _longPressDurationThreshold);
    };
    GestureView.prototype._reportLongPress = function () {
        if (!this._pendingLongPressEvent) {
            return;
        }
        if (this.props.onLongPress) {
            this.props.onLongPress(this._pendingLongPressEvent);
        }
        this._pendingLongPressEvent = undefined;
    };
    GestureView.prototype._cancelLongPressTimer = function () {
        if (this._longPressTimer) {
            Timers_1.default.clearTimeout(this._longPressTimer);
            this._longPressTimer = undefined;
        }
        this._pendingLongPressEvent = undefined;
    };
    // If there was a previous tap recorded but we haven't yet reported it because we were
    // waiting for a potential second tap, report it now.
    GestureView.prototype._reportDelayedTap = function () {
        if (this._lastTapEvent && this.props.onTap) {
            this._sendTapEvent(this._lastTapEvent);
            this._lastTapEvent = undefined;
        }
    };
    GestureView.prototype._clearLastTap = function () {
        this._lastTapEvent = undefined;
    };
    GestureView._isActuallyMouseEvent = function (e) {
        if (!e) {
            return false;
        }
        var nativeEvent = e;
        if (nativeEvent.button !== undefined) {
            return true;
        }
        else if (nativeEvent.isRightButton || nativeEvent.IsRightButton) {
            return true;
        }
        else if (nativeEvent.isMiddleButton || nativeEvent.IsMiddleButton) {
            return true;
        }
        return false;
    };
    GestureView.prototype._shouldRespondToPinchZoom = function (e) {
        if (!this.props.onPinchZoom) {
            return false;
        }
        // Do we see two touches?
        if (!e.touches || e.touches.length !== 2) {
            return false;
        }
        // Has the user started to pinch or zoom?
        if (this._calcDistance(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY) >=
            _pinchZoomPixelThreshold) {
            return true;
        }
        return false;
    };
    GestureView.prototype._shouldRespondToRotate = function (e) {
        if (!this.props.onRotate) {
            return false;
        }
        // Do we see two touches?
        if (!e.touches || e.touches.length !== 2) {
            return false;
        }
        return true;
    };
    GestureView.prototype._shouldRespondToPan = function (gestureState) {
        if (!this.props.onPan) {
            return false;
        }
        // Has the user started to pan?
        var panThreshold = (this.props.panPixelThreshold !== undefined && this.props.panPixelThreshold > 0) ?
            this.props.panPixelThreshold : _panPixelThreshold;
        return (this._calcDistance(gestureState.dx, gestureState.dy) >= panThreshold);
    };
    GestureView.prototype._shouldRespondToPanVertical = function (gestureState) {
        if (!this.props.onPanVertical) {
            return false;
        }
        // Has the user started to pan?
        var panThreshold = (this.props.panPixelThreshold !== undefined && this.props.panPixelThreshold > 0) ?
            this.props.panPixelThreshold : _panPixelThreshold;
        var isPan = Math.abs(gestureState.dy) >= panThreshold;
        if (isPan && this.props.preferredPan === Interfaces_1.Types.PreferredPanGesture.Horizontal) {
            return Math.abs(gestureState.dy) > Math.abs(gestureState.dx * this._getPreferredPanRatio());
        }
        return isPan;
    };
    GestureView.prototype._shouldRespondToPanHorizontal = function (gestureState) {
        if (!this.props.onPanHorizontal) {
            return false;
        }
        // Has the user started to pan?
        var panThreshold = (this.props.panPixelThreshold !== undefined && this.props.panPixelThreshold > 0) ?
            this.props.panPixelThreshold : _panPixelThreshold;
        var isPan = Math.abs(gestureState.dx) >= panThreshold;
        if (isPan && this.props.preferredPan === Interfaces_1.Types.PreferredPanGesture.Vertical) {
            return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * this._getPreferredPanRatio());
        }
        return isPan;
    };
    GestureView.prototype._calcDistance = function (dx, dy) {
        return Math.sqrt(dx * dx + dy * dy);
    };
    GestureView.prototype._calcAngle = function (touches) {
        var a = touches[0];
        var b = touches[1];
        var degrees = this._radiansToDegrees(Math.atan2(b.pageY - a.pageY, b.pageX - a.pageX));
        if (degrees < 0) {
            degrees += 360;
        }
        return degrees;
    };
    GestureView.prototype._radiansToDegrees = function (rad) {
        return rad * 180 / Math.PI;
    };
    GestureView.prototype._sendMultiTouchEvents = function (e, gestureState, initializeFromEvent, isComplete) {
        var p = this._pendingGestureState;
        var multiTouchEvent;
        // If the user lifted up one or both fingers, the multitouch gesture
        // is halted. Just return the existing gesture state.
        if (!e.touches || e.touches.length !== 2) {
            multiTouchEvent = p;
            p.isComplete = isComplete;
        }
        else {
            var centerPageX = (e.touches[0].pageX + e.touches[1].pageX) / 2;
            var centerPageY = (e.touches[0].pageY + e.touches[1].pageY) / 2;
            var centerClientX = (e.touches[0].locationX + e.touches[1].locationX) / 2;
            var centerClientY = (e.touches[0].locationY + e.touches[1].locationY) / 2;
            var width = Math.abs(e.touches[0].pageX - e.touches[1].pageX);
            var height = Math.abs(e.touches[0].pageY - e.touches[1].pageY);
            var distance = this._calcDistance(width, height);
            var angle = this._calcAngle(e.touches);
            var initialCenterPageX = initializeFromEvent ? centerPageX : p.initialCenterPageX;
            var initialCenterPageY = initializeFromEvent ? centerPageY : p.initialCenterPageY;
            var initialCenterClientX = initializeFromEvent ? centerClientX : p.initialCenterClientX;
            var initialCenterClientY = initializeFromEvent ? centerClientY : p.initialCenterClientY;
            var initialWidth = initializeFromEvent ? width : p.initialWidth;
            var initialHeight = initializeFromEvent ? height : p.initialHeight;
            var initialDistance = initializeFromEvent ? distance : p.initialDistance;
            var initialAngle = initializeFromEvent ? angle : p.initialAngle;
            var velocityX = initializeFromEvent ? 0 : gestureState.vx;
            var velocityY = initializeFromEvent ? 0 : gestureState.vy;
            multiTouchEvent = {
                initialCenterPageX: initialCenterPageX,
                initialCenterPageY: initialCenterPageY,
                initialCenterClientX: initialCenterClientX,
                initialCenterClientY: initialCenterClientY,
                initialWidth: initialWidth,
                initialHeight: initialHeight,
                initialDistance: initialDistance,
                initialAngle: initialAngle,
                centerPageX: centerPageX,
                centerPageY: centerPageY,
                centerClientX: centerClientX,
                centerClientY: centerClientY,
                velocityX: velocityX,
                velocityY: velocityY,
                width: width,
                height: height,
                distance: distance,
                angle: angle,
                isComplete: isComplete,
                timeStamp: e.timeStamp,
                isTouch: !GestureView._isActuallyMouseEvent(e)
            };
        }
        if (this.props.onPinchZoom) {
            this.props.onPinchZoom(multiTouchEvent);
        }
        if (this.props.onRotate) {
            this.props.onRotate(multiTouchEvent);
        }
        return multiTouchEvent;
    };
    GestureView.prototype._touchEventToTapGestureState = function (e) {
        var pageX = e.pageX;
        var pageY = e.pageY;
        var clientX = e.locationX;
        var clientY = e.locationY;
        // Grab the first touch. If the user adds additional touch events,
        // we will ignore them. If we use e.pageX/Y, we will be using the average
        // of the touches, so we'll see a discontinuity.
        if (e.touches && e.touches.length > 0) {
            pageX = e.touches[0].pageX;
            pageY = e.touches[0].pageY;
            clientX = e.touches[0].locationX;
            clientY = e.touches[0].locationY;
        }
        return {
            timeStamp: this._getEventTimestamp(e),
            clientX: clientX,
            clientY: clientY,
            pageX: pageX,
            pageY: pageY,
            isTouch: !GestureView._isActuallyMouseEvent(e)
        };
    };
    GestureView.prototype._mouseEventToTapGestureState = function (e) {
        var xyOffset = this._getClientXYOffset();
        return {
            timeStamp: this._getEventTimestamp(e),
            clientX: e.clientX - xyOffset.x,
            clientY: e.clientY - xyOffset.y,
            pageX: e.pageX || 0,
            pageY: e.pageY || 0,
            isTouch: false
        };
    };
    GestureView.prototype._getClientXYOffset = function () {
        return { x: 0, y: 0 };
    };
    GestureView.prototype._sendPanEvent = function (e, gestureState, gestureType, initializeFromEvent, isComplete) {
        var state = this._pendingGestureState;
        assert_1.default(this._lastGestureStartEvent, 'Gesture start event must not be null.');
        var initialPageX = this._lastGestureStartEvent
            ? this._lastGestureStartEvent.pageX
            : initializeFromEvent ? e.pageX : state.initialPageX;
        var initialPageY = this._lastGestureStartEvent
            ? this._lastGestureStartEvent.pageY
            : initializeFromEvent ? e.pageY : state.initialPageY;
        var initialClientX = this._lastGestureStartEvent
            ? this._lastGestureStartEvent.locationX
            : initializeFromEvent ? e.clientX : state.initialClientX;
        var initialClientY = this._lastGestureStartEvent
            ? this._lastGestureStartEvent.locationY
            : initializeFromEvent ? e.clientY : state.initialClientY;
        var velocityX = initializeFromEvent ? 0 : gestureState.vx;
        var velocityY = initializeFromEvent ? 0 : gestureState.vy;
        var panEvent = {
            initialPageX: initialPageX,
            initialPageY: initialPageY,
            initialClientX: initialClientX,
            initialClientY: initialClientY,
            pageX: e.pageX,
            pageY: e.pageY,
            clientX: e.clientX,
            clientY: e.clientY,
            velocityX: velocityX,
            velocityY: velocityY,
            isComplete: isComplete,
            timeStamp: e.timeStamp,
            isTouch: !GestureView._isActuallyMouseEvent(this._lastGestureStartEvent)
        };
        switch (gestureType) {
            case GestureType.Pan:
                if (this.props.onPan) {
                    this.props.onPan(panEvent);
                }
                break;
            case GestureType.PanVertical:
                if (this.props.onPanVertical) {
                    this.props.onPanVertical(panEvent);
                }
                break;
            case GestureType.PanHorizontal:
                if (this.props.onPanHorizontal) {
                    this.props.onPanHorizontal(panEvent);
                }
                break;
            default:
            // do nothing;
        }
        return panEvent;
    };
    GestureView._toMouseButton = function (nativeEvent) {
        if (nativeEvent.button !== undefined) {
            return nativeEvent.button;
        }
        else if (nativeEvent.isRightButton || nativeEvent.IsRightButton) {
            return 2;
        }
        else if (nativeEvent.isMiddleButton || nativeEvent.IsMiddleButton) {
            return 1;
        }
        return 0;
    };
    GestureView.prototype._sendDoubleTapEvent = function (e) {
        // If user did a double click with different mouse buttons, eg. left (50ms) right
        // both clicks need to be registered as separate events.
        var lastButton = GestureView._toMouseButton(this._lastTapEvent);
        var button = GestureView._toMouseButton(e);
        if (lastButton !== button || button === 2) {
            this._sendTapEvent(this._lastTapEvent);
            return;
        }
        if (this.props.onDoubleTap) {
            this.props.onDoubleTap(e);
        }
        this._lastTapEvent = undefined;
    };
    return GestureView;
}(React.Component));
exports.GestureView = GestureView;
exports.default = GestureView;

},{"react":"HdMw","../common/assert":"zDnP","../common/Interfaces":"rFlL","../common/utils/Timers":"tBdH"}],"NI2X":[function(require,module,exports) {
"use strict";
/**
 * GestureView.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform GestureView component.
 * It provides support for the scroll wheel, clicks and double clicks.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var ReactDOM = require("react-dom");
var GestureView_1 = require("../common/GestureView");
var Interfaces_1 = require("../common/Interfaces");
var AccessibilityUtil_1 = require("./AccessibilityUtil");
var lodashMini_1 = require("./utils/lodashMini");
var MouseResponder_1 = require("./utils/MouseResponder");
var Styles_1 = require("./Styles");
// Cast to any to allow merging of web and RX styles
var _styles = {
    defaultView: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'column',
        flexGrow: 0,
        flexShrink: 0,
        overflow: 'hidden',
        alignItems: 'stretch',
        justifyContent: 'center'
    }
};
// Unique to web
var _preferredPanRatio = 3;
var _idCounter = 1;
var GestureView = /** @class */ (function (_super) {
    __extends(GestureView, _super);
    function GestureView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._id = _idCounter++;
        _this._isMounted = false;
        _this._pendingMouseGestureType = GestureView_1.GestureType.None;
        _this._gestureTypeLocked = false;
        _this._setContainerRef = function (container) {
            // safe since div refs resolve into HTMLElement and not react element.
            _this._container = container;
            if (container) {
                _this._createMouseResponder(container);
            }
            else {
                _this._disposeMouseResponder();
            }
        };
        _this._onMouseDown = function (e) {
            if (_this.props.onPan || _this.props.onPanHorizontal || _this.props.onPanVertical) {
                // Disable mousedown default action that initiates a drag/drop operation and breaks panning with a not-allowed cursor.
                // https://w3c.github.io/uievents/#mousedown
                e.preventDefault();
            }
            if (_this.props.onLongPress) {
                var gsState = _this._mouseEventToTapGestureState(e);
                _this._startLongPressTimer(gsState, true);
            }
        };
        _this._onClick = function (e) {
            _this._cancelLongPressTimer();
            var gsState = _this._mouseEventToTapGestureState(e);
            if (!_this.props.onDoubleTap) {
                // If there is no double-tap handler, we can invoke the tap handler immediately.
                _this._sendTapEvent(gsState);
            }
            else if (_this._isDoubleTap(gsState)) {
                // This is a double-tap, so swallow the previous single tap.
                _this._cancelDoubleTapTimer();
                _this._sendDoubleTapEvent(gsState);
            }
            else {
                // This wasn't a double-tap. Report any previous single tap and start the double-tap
                // timer so we can determine whether the current tap is a single or double.
                _this._reportDelayedTap();
                _this._startDoubleTapTimer(gsState);
            }
        };
        _this._sendContextMenuEvent = function (e) {
            if (_this.props.onContextMenu) {
                e.preventDefault();
                e.stopPropagation();
                var tapEvent = _this._mouseEventToTapGestureState(e);
                _this.props.onContextMenu(tapEvent);
            }
        };
        _this._onTouchStart = function (e) {
            if (!_this._initialTouch) {
                var ft = e.touches[0];
                _this._initialTouch = { x: ft.clientX, y: ft.clientY };
                _this._ongoingGesture = { dx: 0, dy: 0, vx: 0, vy: 0 };
                _this._onTouchSeriesStart(GestureView._reactTouchEventToBasic(e));
            }
        };
        _this._onTouchMove = function (e) {
            if (!_this._initialTouch || !_this._ongoingGesture) {
                return;
            }
            var ft = e.touches[0];
            _this._ongoingGesture = {
                dx: ft.clientX - _this._initialTouch.x,
                dy: ft.clientY - _this._initialTouch.y,
                // TODO: calculate velocity?
                vx: 0,
                vy: 0
            };
            _this._onTouchChange(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);
        };
        _this._onTouchEnd = function (e) {
            if (!_this._initialTouch || !_this._ongoingGesture) {
                return;
            }
            if (e.touches.length === 0) {
                _this._onTouchSeriesFinished(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);
                _this._initialTouch = undefined;
                _this._ongoingGesture = undefined;
            }
        };
        _this._detectGestureType = function (gestureState) {
            // we need to lock gesture type until it's completed
            if (_this._gestureTypeLocked) {
                return _this._pendingMouseGestureType;
            }
            _this._gestureTypeLocked = true;
            var gsBasic = {
                dx: gestureState.clientX - gestureState.initialClientX,
                dy: gestureState.clientY - gestureState.initialClientY
            };
            if (_this._shouldRespondToPan(gsBasic)) {
                return GestureView_1.GestureType.Pan;
            }
            else if (_this._shouldRespondToPanVertical(gsBasic)) {
                return GestureView_1.GestureType.PanVertical;
            }
            else if (_this._shouldRespondToPanHorizontal(gsBasic)) {
                return GestureView_1.GestureType.PanHorizontal;
            }
            _this._gestureTypeLocked = false;
            return GestureView_1.GestureType.None;
        };
        _this._onWheel = function (e) {
            if (_this.props.onScrollWheel) {
                var clientRect = _this._getGestureViewClientRect();
                if (clientRect) {
                    var scrollWheelEvent = {
                        clientX: e.clientX - clientRect.left,
                        clientY: e.clientY - clientRect.top,
                        pageX: e.pageX,
                        pageY: e.pageY,
                        scrollAmount: e.deltaY,
                        timeStamp: e.timeStamp,
                        isTouch: false
                    };
                    _this.props.onScrollWheel(scrollWheelEvent);
                }
            }
        };
        _this._sendMousePanEvent = function (gestureState) {
            switch (_this._pendingMouseGestureType) {
                case GestureView_1.GestureType.Pan:
                    if (_this.props.onPan) {
                        _this.props.onPan(gestureState);
                    }
                    break;
                case GestureView_1.GestureType.PanVertical:
                    if (_this.props.onPanVertical) {
                        _this.props.onPanVertical(gestureState);
                    }
                    break;
                case GestureView_1.GestureType.PanHorizontal:
                    if (_this.props.onPanHorizontal) {
                        _this.props.onPanHorizontal(gestureState);
                    }
                    break;
                default:
                // do nothing;
            }
            // we need to clean taps in case there was a pan event in the meantime
            if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {
                _this._clearLastTap();
                _this._cancelDoubleTapTimer();
                _this._skipNextTap();
            }
        };
        return _this;
    }
    // Get preferred pan ratio for platform.
    GestureView.prototype._getPreferredPanRatio = function () {
        return _preferredPanRatio;
    };
    // Returns the timestamp for the touch event in milliseconds.
    GestureView.prototype._getEventTimestamp = function (e) {
        return e.timeStamp;
    };
    GestureView.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    GestureView.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        this._isMounted = false;
    };
    GestureView.prototype.render = function () {
        var ariaRole = AccessibilityUtil_1.default.accessibilityTraitToString(this.props.accessibilityTraits);
        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);
        return (React.createElement("div", { style: this._getStyles(), tabIndex: this.props.tabIndex, ref: this._setContainerRef, onMouseDown: this._onMouseDown, onClick: this._onClick, onWheel: this._onWheel, onTouchStart: this._onTouchStart, onTouchMove: this._onTouchMove, onTouchEnd: this._onTouchEnd, onFocus: this.props.onFocus, onBlur: this.props.onBlur, onKeyPress: this.props.onKeyPress, role: ariaRole, "aria-label": this.props.accessibilityLabel, "aria-hidden": isAriaHidden, onContextMenu: this.props.onContextMenu ? this._sendContextMenuEvent : undefined, "data-test-id": this.props.testId }, this.props.children));
    };
    GestureView.prototype.blur = function () {
        var el = this._getContainer();
        if (el) {
            el.blur();
        }
    };
    GestureView.prototype.focus = function () {
        var el = this._getContainer();
        if (el) {
            el.focus();
        }
    };
    GestureView.prototype._getContainer = function () {
        if (!this._isMounted) {
            return null;
        }
        try {
            return ReactDOM.findDOMNode(this);
        }
        catch (_a) {
            // Handle exception due to potential unmount race condition.
            return null;
        }
    };
    GestureView.prototype._createMouseResponder = function (container) {
        var _this = this;
        this._disposeMouseResponder();
        this._responder = MouseResponder_1.default.create({
            id: this._id,
            target: container,
            disableWhenModal: !!this.context.isInRxMainView,
            shouldBecomeFirstResponder: function (event) {
                if (!_this.props.onPan && !_this.props.onPanHorizontal && !_this.props.onPanVertical) {
                    return false;
                }
                var boundingRect = _this._getGestureViewClientRect();
                if (!boundingRect) {
                    return false;
                }
                var top = boundingRect.top, left = boundingRect.left, bottom = boundingRect.bottom, right = boundingRect.right;
                var clientX = event.clientX, clientY = event.clientY;
                if (clientX >= left && clientX <= right && clientY >= top && clientY <= bottom) {
                    return true;
                }
                return false;
            },
            onMove: function (event, gestureState) {
                _this._pendingMouseGestureType = _this._detectGestureType(gestureState);
                if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {
                    _this._cancelLongPressTimer();
                }
                _this._sendMousePanEvent(gestureState);
            },
            onTerminate: function (event, gestureState) {
                _this._cancelLongPressTimer();
                _this._pendingMouseGestureType = _this._detectGestureType(gestureState);
                _this._sendMousePanEvent(gestureState);
                _this._pendingMouseGestureType = GestureView_1.GestureType.None;
                _this._gestureTypeLocked = false;
            }
        });
    };
    GestureView.prototype._disposeMouseResponder = function () {
        if (this._responder) {
            this._responder.dispose();
            delete this._responder;
        }
    };
    GestureView.prototype._getStyles = function () {
        var combinedStyles = Styles_1.default.combine([_styles.defaultView, this.props.style]);
        var cursorName;
        switch (this.props.mouseOverCursor) {
            case Interfaces_1.Types.GestureMouseCursor.Grab:
                cursorName = 'grab';
                break;
            case Interfaces_1.Types.GestureMouseCursor.Move:
                cursorName = 'move';
                break;
            case Interfaces_1.Types.GestureMouseCursor.Pointer:
                cursorName = 'pointer';
                break;
            case Interfaces_1.Types.GestureMouseCursor.NSResize:
                cursorName = 'ns-resize';
                break;
            case Interfaces_1.Types.GestureMouseCursor.EWResize:
                cursorName = 'ew-resize';
                break;
            case Interfaces_1.Types.GestureMouseCursor.NESWResize:
                cursorName = 'nesw-resize';
                break;
            case Interfaces_1.Types.GestureMouseCursor.NWSEResize:
                cursorName = 'nwse-resize';
                break;
            case Interfaces_1.Types.GestureMouseCursor.NotAllowed:
                cursorName = 'not-allowed';
                break;
            case Interfaces_1.Types.GestureMouseCursor.ZoomIn:
                cursorName = 'zoom-in';
                break;
            case Interfaces_1.Types.GestureMouseCursor.ZoomOut:
                cursorName = 'zoom-out';
                break;
        }
        if (cursorName) {
            combinedStyles.cursor = cursorName;
        }
        return combinedStyles;
    };
    // The RN and React touch event types are basically identical except that React uses "clientX/Y"
    // and RN uses "locationX/Y", so we need to map one to the other.  Unfortunately, due to inertia,
    // web loses.  So, we need these 3 ugly functions...
    GestureView._reactTouchEventToBasic = function (e) {
        var ne = lodashMini_1.clone(e);
        ne.changedTouches = this._mapReactTouchListToBasic(e.changedTouches);
        ne.targetTouches = this._mapReactTouchListToBasic(e.targetTouches);
        ne.touches = this._mapReactTouchListToBasic(e.touches);
        var ft = ne.touches[0];
        if (ft) {
            // RN also apparently shims the first touch's location info onto the root touch event
            ne.pageX = ft.pageX;
            ne.pageY = ft.pageY;
            ne.locationX = ft.locationX;
            ne.locationY = ft.locationY;
        }
        return ne;
    };
    GestureView._mapReactTouchListToBasic = function (l) {
        var nl = new Array(l.length);
        for (var i = 0; i < l.length; i++) {
            nl[i] = this._mapReactTouchToRx(l[i]);
        }
        return nl;
    };
    GestureView._mapReactTouchToRx = function (l) {
        return {
            identifier: l.identifier,
            locationX: l.clientX,
            locationY: l.clientY,
            screenX: l.screenX,
            screenY: l.screenY,
            clientX: l.clientX,
            clientY: l.clientY,
            pageX: l.pageX,
            pageY: l.pageY
        };
    };
    GestureView.prototype._getClientXYOffset = function () {
        var rect = this._getGestureViewClientRect();
        return rect ? { x: rect.left, y: rect.top } : { x: 0, y: 0 };
    };
    GestureView.prototype._getGestureViewClientRect = function () {
        return this._container ? this._container.getBoundingClientRect() : null;
    };
    GestureView.contextTypes = {
        isInRxMainView: PropTypes.bool
    };
    return GestureView;
}(GestureView_1.default));
exports.GestureView = GestureView;
exports.default = GestureView;

},{"prop-types":"Iix9","react":"HdMw","react-dom":"X9zx","../common/GestureView":"JYQD","../common/Interfaces":"rFlL","./AccessibilityUtil":"w171","./utils/lodashMini":"Wdkl","./utils/MouseResponder":"Ep0V","./Styles":"FK4c"}],"YFKf":[function(require,module,exports) {
"use strict";
/**
 * International.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation for i18n.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var FrontLayerViewManager_1 = require("./FrontLayerViewManager");
var International = /** @class */ (function () {
    function International() {
    }
    International.prototype.allowRTL = function (allow) {
        FrontLayerViewManager_1.default.allowRTL(allow);
    };
    International.prototype.forceRTL = function (force) {
        FrontLayerViewManager_1.default.forceRTL(force);
    };
    International.prototype.isRTL = function () {
        return FrontLayerViewManager_1.default.isRTL();
    };
    return International;
}());
exports.International = International;
exports.default = new International();

},{"./FrontLayerViewManager":"mOoD"}],"d21q":[function(require,module,exports) {
"use strict";
/**
 * Link.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Link abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var Timers_1 = require("../common/utils/Timers");
var FocusManager_1 = require("./utils/FocusManager");
var Styles_1 = require("./Styles");
var _styles = {
    defaultStyle: {
        overflowWrap: 'break-word',
        msHyphens: 'auto',
        overflow: 'hidden',
        flexShrink: 0,
        flexGrow: 0,
        position: 'relative',
        display: 'inline',
        cursor: 'pointer'
    },
    ellipsis: {
        textOverflow: 'ellipsis',
        whiteSpace: 'pre',
        msHyphens: 'none'
    },
    selectable: {
        WebkitUserSelect: 'text',
        MozUserSelect: 'text',
        msUserSelect: 'text',
        userSelect: 'text'
    }
};
var _longPressTime = 1000;
var Link = /** @class */ (function (_super) {
    __extends(Link, _super);
    function Link() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._mountedAnchor = null;
        _this._onMount = function (ref) {
            _this._mountedAnchor = ref;
        };
        _this._onClick = function (e) {
            e.stopPropagation();
            if (_this.props.onPress) {
                e.preventDefault();
                _this.props.onPress(e, _this.props.url);
            }
        };
        _this._onMouseDown = function (e) {
            if (_this.props.onLongPress) {
                e.persist();
                _this._longPressTimer = Timers_1.default.setTimeout(function () {
                    _this._longPressTimer = undefined;
                    var mouseEvent = e;
                    // Ignore right mouse button for long press. Context menu will
                    // be always displayed on mouseUp no matter the press length.
                    if (_this.props.onLongPress && mouseEvent.button !== 2) {
                        _this.props.onLongPress(e, _this.props.url);
                    }
                }, _longPressTime);
            }
        };
        _this._onMouseUp = function (e) {
            if (_this._longPressTimer) {
                Timers_1.default.clearTimeout(_this._longPressTimer);
                _this._longPressTimer = undefined;
            }
        };
        _this._onContextMenu = function (e) {
            if (_this.props.onContextMenu) {
                e.stopPropagation();
                e.preventDefault();
                _this.props.onContextMenu(e);
            }
        };
        return _this;
    }
    Link.prototype.render = function () {
        // SECURITY WARNING:
        //   Note the use of rel='noreferrer'
        //   Destroy the back-link to this window. Otherwise the (untrusted) URL we are about to load can redirect OUR window.
        //   See: https://mathiasbynens.github.io/rel-noopener/
        return (React.createElement("a", { ref: this._onMount, style: this._getStyles(), title: this.props.title, href: this.props.url, target: '_blank', rel: 'noreferrer', onClick: this._onClick, onMouseEnter: this.props.onHoverStart, onMouseLeave: this.props.onHoverEnd, onMouseDown: this._onMouseDown, onMouseUp: this._onMouseUp, tabIndex: this.props.tabIndex, onContextMenu: this.props.onContextMenu ? this._onContextMenu : undefined, "data-test-id": this.props.testId }, this.props.children));
    };
    Link.prototype.componentDidMount = function () {
        if (this.props.autoFocus) {
            this.requestFocus();
        }
    };
    Link.prototype.requestFocus = function () {
        var _this = this;
        AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () { return _this.focus(); }, function () { return _this._mountedAnchor !== null; });
    };
    Link.prototype.focus = function () {
        if (this._mountedAnchor) {
            this._mountedAnchor.focus();
        }
    };
    Link.prototype.blur = function () {
        if (this._mountedAnchor) {
            this._mountedAnchor.blur();
        }
    };
    Link.prototype._getStyles = function () {
        // There's no way in HTML to properly handle numberOfLines > 1,
        //  but we can correctly handle the common case where numberOfLines is 1.
        var ellipsisStyles = this.props.numberOfLines === 1 ? _styles.ellipsis : {};
        var selectableStyles = this.props.selectable ? _styles.selectable : {};
        return Styles_1.default.combine([_styles.defaultStyle, ellipsisStyles, this.props.style, selectableStyles]);
    };
    Link.contextTypes = {
        focusArbitrator: PropTypes.object
    };
    return Link;
}(React.Component));
exports.Link = Link;
FocusManager_1.applyFocusableComponentMixin(Link);
exports.default = Link;

},{"prop-types":"Iix9","react":"HdMw","../common/utils/AutoFocusHelper":"uohT","../common/utils/Timers":"tBdH","./utils/FocusManager":"HWpt","./Styles":"FK4c"}],"wMCU":[function(require,module,exports) {
"use strict";
/**
 * Linking.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Common implementation for deep linking.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("./Interfaces");
var lodashMini_1 = require("./lodashMini");
// Collection of Regex that help validate an email.
// The name can be any of these characters.
var emailNameRegex = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.@-]+$/i;
// However, the name cannot contain '..', or start/end with '.'.
var emailNameConstraintViolationRegex = /\.\.|^\.|\.$/i;
// The host is limited to these characters.
var emailHostRegex = /^[a-z0-9.-]+$/i;
// However, the host cannot contain '..', start/end with '.', or have any (sub)domain start/end with '-'.
var emailHostConstraintViolationRegex = /\.\.|^[.-]|[.-]$|\.-|-\./i;
var Linking = /** @class */ (function (_super) {
    __extends(Linking, _super);
    function Linking() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Launches SMS app
    Linking.prototype.launchSms = function (phoneInfo) {
        // Format phone info
        var phoneUrl = this._createSmsUrl(phoneInfo);
        return this._openUrl(phoneUrl);
    };
    // Opens url
    Linking.prototype.openUrl = function (url) {
        return this._openUrl(url);
    };
    // Escaped Email uri - mailto:[emailAddress]?subject=<emailSubject>&body=<emailBody>
    Linking.prototype._createEmailUrl = function (emailInfo) {
        var emailUrl = 'mailto:';
        var validEmails;
        if (emailInfo.to && emailInfo.to.length > 0) {
            validEmails = this._filterValidEmails(emailInfo.to);
            emailUrl += validEmails.join(',');
        }
        emailUrl += '?';
        if (emailInfo.cc && emailInfo.cc.length > 0) {
            validEmails = this._filterValidEmails(emailInfo.cc);
            emailUrl += 'cc=' + validEmails.join(',') + '&';
        }
        if (emailInfo.bcc && emailInfo.bcc.length > 0) {
            validEmails = this._filterValidEmails(emailInfo.bcc);
            emailUrl += 'bcc=' + validEmails.join(',') + '&';
        }
        if (emailInfo.subject) {
            emailUrl += 'subject=' + encodeURIComponent(emailInfo.subject) + '&';
        }
        if (emailInfo.body) {
            emailUrl += 'body=' + encodeURIComponent(emailInfo.body);
        }
        return emailUrl;
    };
    // Escaped SMS uri - sms:<phoneNumber>?body=<messageString>
    Linking.prototype._createSmsUrl = function (smsInfo) {
        var smsUrl = 'sms:';
        if (smsInfo.phoneNumber) {
            smsUrl += encodeURI(smsInfo.phoneNumber);
        }
        if (smsInfo.body) {
            smsUrl += '?body=' + encodeURIComponent(smsInfo.body);
        }
        return smsUrl;
    };
    Linking.prototype._isEmailValid = function (email) {
        // Emails have a max length of 254, and the smallest email looks like 'a@io' (with length 4).
        if (!email || email.length > 254 || email.length < 4) {
            return false;
        }
        // Note: using 'last' since '@' is valid in the name (but not the host, otherwise it would be impossible to parse).
        var lastAtIndex = email.lastIndexOf('@');
        // Email must have an '@', and there must be characters on each side of the '@'.
        // Note: the host must have at least two characters.
        if (lastAtIndex === -1 || lastAtIndex === 0 || lastAtIndex >= email.length - 2) {
            return false;
        }
        var name = email.substring(0, lastAtIndex);
        var host = email.substring(lastAtIndex + 1);
        return !emailNameConstraintViolationRegex.test(name)
            && !emailHostConstraintViolationRegex.test(host)
            && emailNameRegex.test(name)
            && emailHostRegex.test(host);
    };
    Linking.prototype._filterValidEmails = function (emails) {
        var _this = this;
        return lodashMini_1.filter(emails, function (e) { return _this._isEmailValid(e); });
    };
    return Linking;
}(RX.Linking));
exports.Linking = Linking;

},{"./Interfaces":"rFlL","./lodashMini":"joz3"}],"NZCX":[function(require,module,exports) {
"use strict";
/**
 * Linking.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation for deep linking
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Interfaces_1 = require("../common/Interfaces");
var Linking_1 = require("../common/Linking");
var Linking = /** @class */ (function (_super) {
    __extends(Linking, _super);
    function Linking() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Linking.prototype._openUrl = function (url) {
        var otherWindow = window.open();
        if (!otherWindow) {
            // window opening was blocked by browser (probably not
            // invoked in direct reaction to user action, like thru
            // promise or setTimeout).
            var linkingError = {
                code: Interfaces_1.Types.LinkingErrorCode.Blocked,
                url: url,
                description: 'Window was blocked by popup blocker'
            };
            return Promise.reject(linkingError);
        }
        // SECURITY WARNING:
        //   Destroy the back-link to this window. Otherwise the (untrusted) URL we are about to load can redirect OUR window.
        //   See: https://mathiasbynens.github.io/rel-noopener/
        // Note: can only set to null, otherwise is readonly.
        // Note: In order for mailto links to work properly window.opener cannot be null.
        if (url.indexOf('mailto:') !== 0) {
            otherWindow.opener = null;
        }
        otherWindow.location.href = url;
        return Promise.resolve(void 0);
    };
    Linking.prototype.launchEmail = function (emailInfo) {
        // Format email info
        var emailUrl = this._createEmailUrl(emailInfo);
        window.location.href = emailUrl;
        return Promise.resolve(void 0);
    };
    Linking.prototype.getInitialUrl = function () {
        return Promise.resolve(undefined);
    };
    return Linking;
}(Linking_1.Linking));
exports.Linking = Linking;
exports.default = new Linking();

},{"../common/Interfaces":"rFlL","../common/Linking":"wMCU"}],"rfGn":[function(require,module,exports) {
"use strict";
/**
 * Picker.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform Select abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var RX = require("../common/Interfaces");
var _ = require("./utils/lodashMini");
var Styles_1 = require("./Styles");
var Picker = /** @class */ (function (_super) {
    __extends(Picker, _super);
    function Picker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onValueChange = function (e) {
            var selectEl = e.target;
            var selectedValue = selectEl.value;
            var selectedItemPosition = _.findIndex(_this.props.items, function (i) { return i.value === selectedValue; });
            _this.props.onValueChange(selectedValue, selectedItemPosition);
        };
        return _this;
    }
    Picker.prototype.render = function () {
        return (React.createElement("select", { style: this._getStyles(), value: this.props.selectedValue, onChange: this._onValueChange, "data-test-id": this.props.testId }, _.map(this.props.items, function (i, idx) { return React.createElement("option", { value: i.value, key: idx }, i.label); })));
    };
    Picker.prototype._getStyles = function () {
        return Styles_1.default.combine(this.props.style);
    };
    return Picker;
}(RX.Picker));
exports.Picker = Picker;
exports.default = Picker;

},{"react":"HdMw","../common/Interfaces":"rFlL","./utils/lodashMini":"Wdkl","./Styles":"FK4c"}],"PxQZ":[function(require,module,exports) {
"use strict";
/**
 * Platform.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of Platform interface.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var Platform = /** @class */ (function (_super) {
    __extends(Platform, _super);
    function Platform() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Platform.prototype.getType = function () {
        return 'web';
    };
    Platform.prototype.select = function (specifics) {
        var platformType = this.getType();
        return platformType in specifics ? specifics[platformType] : specifics.default;
    };
    return Platform;
}(RX.Platform));
exports.Platform = Platform;
exports.default = new Platform();

},{"../common/Interfaces":"rFlL"}],"oX80":[function(require,module,exports) {
"use strict";
/**
 * CustomScrollbar.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Custom scrollbar implementation for web.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = require("../common/assert");
var Timers_1 = require("../common/utils/Timers");
var UNIT = 'px';
var SCROLLER_MIN_SIZE = 15;
var SCROLLER_NEGATIVE_MARGIN = 30;
var NEUTRAL_OVERRIDE_CLASS = 'neutraloverride';
var _nativeSrollBarWidth = -1;
var _isStyleSheetInstalled = false;
var _customScrollbarCss = "\n    .rxCustomScroll .scrollViewport > * {\n        box-sizing: border-box;\n        display: block;\n    }\n    .rxCustomScroll .rail {\n        position: absolute;\n        border-radius: 4px;\n        opacity: 0;\n        background-color: transparent;\n        transition-delay: 0, 0;\n        transition-duration: .2s, .2s;\n        transition-property: background-color, opacity;\n        transition-timing-function: linear, linear;\n        display: none;\n        box-sizing: border-box;\n    }\n    .rxCustomScroll .rail:hover {\n        background-color: #EEE;\n        border-color: #EEE;\n        opacity: .9;\n        border-radius: 6px;\n    }\n    .rxCustomScroll .rail:hover .slider {\n        border-radius: 6px;\n    }\n    .rxCustomScroll .rail .slider {\n        position: absolute;\n        border-radius: 4px;\n        background: #555;\n        box-sizing: border-box;\n        border: 1px solid #555;\n    }\n    .rxCustomScroll:not(.neutraloverride) > .scrollViewportV > * {\n        margin-right: em(-17px) !important;\n    }\n    .rxCustomScroll .railV {\n        top: 0;\n        bottom: 0;\n        right: 3px;\n        width: 8px;\n    }\n    .rxCustomScroll .railV .slider {\n        top: 10px;\n        width: 8px;\n        min-height: 15px;\n    }\n    .rxCustomScroll .railV.railBoth {\n        bottom: 15px;\n    }\n    .rxCustomScroll .railH {\n        left: 0;\n        right: 0;\n        bottom: 3px;\n        height: 8px;\n    }\n    .rxCustomScroll .railH .slider {\n        left: 10px;\n        top: -1px;\n        height: 8px;\n        min-width: 15px;\n    }\n    .rxCustomScroll .railH.railBoth {\n        right: 15px;\n    }\n    .rxCustomScroll.active .rail {\n        display: block;\n    }\n    .rxCustomScroll:hover .rail {\n        opacity: .6;\n    }\n    .rxCustomScroll:hover .rail .slider {\n        background: #AAA;\n        border-color: #AAA;\n    }\n    .rxCustomScroll.rxCustomScrollH {\n        width: auto;\n    }\n    .rxCustomScroll.rxCustomScrollV {\n        width: 100%;\n    }\n    .rxCustomScroll.scrolling .rail {\n        background-color: #EEE;\n        border-color: #EEE;\n        opacity: .9;\n        border-radius: 6px;\n    }\n    .rxCustomScroll.scrolling .rail .slider {\n        border-radius: 6px;\n        background: #AAA;\n        border-color: #AAA;\n    }\n    .rxCustomScroll.scrolling .scrollViewport > * {\n        pointer-events: none !important;\n    }\n    .rxCustomScroll.scrolling .railV {\n        width: 12px;\n    }\n    .rxCustomScroll.scrolling .railV .slider {\n        width: 12px;\n    }\n    .rxCustomScroll.scrolling .railH {\n        height: 12px;\n    }\n    .rxCustomScroll.scrolling .railH .slider {\n        height: 12px;\n    }\n    .rxCustomScroll .railV:hover {\n        width: 12px;\n    }\n    .rxCustomScroll .railV:hover .slider {\n        width: 12px;\n    }\n    .rxCustomScroll .railH:hover {\n        height: 12px;\n    }\n    .rxCustomScroll .railH:hover .slider {\n        height: 12px;\n    }\n";
var Scrollbar = /** @class */ (function () {
    function Scrollbar(container) {
        this._verticalBar = {};
        this._horizontalBar = {};
        this._dragging = false;
        this._dragIsVertical = false;
        this._scrollingVisible = false;
        this._hasHorizontal = false;
        this._hasVertical = true;
        this._hasHiddenScrollbar = false;
        this._stopDragCallback = this._stopDrag.bind(this);
        this._startDragVCallback = this._startDrag.bind(this, true);
        this._startDragHCallback = this._startDrag.bind(this, false);
        this._handleDragCallback = this._handleDrag.bind(this);
        this._handleWheelCallback = this._handleWheel.bind(this);
        this._handleMouseDownCallback = this._handleMouseDown.bind(this);
        this._updateCallback = this.update.bind(this);
        assert_1.default(container, 'Container must not be null');
        this._container = container;
    }
    Scrollbar.getNativeScrollbarWidth = function () {
        // Have we cached the value alread?
        if (_nativeSrollBarWidth >= 0) {
            return _nativeSrollBarWidth;
        }
        var inner = document.createElement('p');
        inner.style.width = '100%';
        inner.style.height = '100%';
        var outer = document.createElement('div');
        outer.style.position = 'absolute';
        outer.style.top = '0';
        outer.style.left = '0';
        outer.style.visibility = 'hidden';
        outer.style.width = '100px';
        outer.style.height = '100px';
        outer.style.overflow = 'hidden';
        outer.appendChild(inner);
        document.body.appendChild(outer);
        var w1 = inner.offsetWidth;
        outer.style.overflow = 'scroll';
        var w2 = inner.offsetWidth;
        if (w1 === w2) {
            w2 = outer.clientWidth;
        }
        document.body.removeChild(outer);
        _nativeSrollBarWidth = w1 - w2;
        return _nativeSrollBarWidth;
    };
    Scrollbar._installStyleSheet = function () {
        // Have we installed the style sheet already?
        if (_isStyleSheetInstalled) {
            return;
        }
        // We set the CSS style sheet here to avoid the need
        // for users of this class to carry along another CSS
        // file.
        var head = document.head || document.getElementsByTagName('head')[0];
        var style = document.createElement('style');
        style.type = 'text/css';
        if (style.styleSheet) {
            style.styleSheet.cssText = _customScrollbarCss;
        }
        else {
            style.appendChild(document.createTextNode(_customScrollbarCss));
        }
        head.appendChild(style);
        _isStyleSheetInstalled = true;
    };
    Scrollbar.prototype._tryLtrOverride = function () {
        var rtlbox = document.createElement('div');
        rtlbox.style.cssText = 'position: absolute; overflow-y: scroll; width: 30px; visibility: hidden;';
        // tslint:disable-next-line
        rtlbox.innerHTML = '<div class="probe"></div>';
        this._container.appendChild(rtlbox);
        var probe = rtlbox.querySelector('.probe');
        var rtlboxRect = rtlbox.getBoundingClientRect();
        var probeRect = probe.getBoundingClientRect();
        var isLeftBound = rtlboxRect.left === probeRect.left;
        var isRightBound = rtlboxRect.right === probeRect.right;
        var isNeutral = isLeftBound && isRightBound;
        this._container.classList.remove(NEUTRAL_OVERRIDE_CLASS);
        if (isNeutral) {
            this._container.classList.add(NEUTRAL_OVERRIDE_CLASS);
        }
        // tslint:disable-next-line
        rtlbox.innerHTML = '';
        this._container.removeChild(rtlbox);
    };
    Scrollbar.prototype._prevent = function (e) {
        e.preventDefault();
    };
    Scrollbar.prototype._updateSliders = function () {
        if (this._hasHorizontal) {
            // Read from DOM before we write back
            var newSliderWidth = this._horizontalBar.sliderSize + UNIT;
            var newSliderLeft = this._viewport.scrollLeft * this._horizontalBar.scroll2Slider + UNIT;
            this._horizontalBar.slider.style.width = newSliderWidth;
            this._horizontalBar.slider.style.left = newSliderLeft;
        }
        if (this._hasVertical) {
            // Read from DOM before we write back
            var newSliderHeight = this._verticalBar.sliderSize + UNIT;
            var newSliderTop = this._viewport.scrollTop * this._verticalBar.scroll2Slider + UNIT;
            this._verticalBar.slider.style.height = newSliderHeight;
            this._verticalBar.slider.style.top = newSliderTop;
        }
    };
    Scrollbar.prototype._handleDrag = function (e) {
        if (this._dragIsVertical) {
            this._viewport.scrollTop = (e.pageY - this._verticalBar.dragOffset) * this._verticalBar.slider2Scroll;
        }
        else {
            this._viewport.scrollLeft = (e.pageX - this._horizontalBar.dragOffset) * this._horizontalBar.slider2Scroll;
        }
    };
    Scrollbar.prototype._startDrag = function (dragIsVertical, e) {
        if (!this._dragging) {
            window.addEventListener('mouseup', this._stopDragCallback);
            window.addEventListener('mousemove', this._handleDragCallback);
            this._container.classList.add('scrolling');
            if (this._hasHorizontal) {
                this._horizontalBar.dragOffset = e.pageX - this._horizontalBar.slider.offsetLeft;
            }
            if (this._hasVertical) {
                this._verticalBar.dragOffset = e.pageY - this._verticalBar.slider.offsetTop;
            }
            this._dragging = true;
            this._dragIsVertical = dragIsVertical;
        }
        this._prevent(e);
    };
    Scrollbar.prototype._stopDrag = function () {
        this._container.classList.remove('scrolling');
        window.removeEventListener('mouseup', this._stopDragCallback);
        window.removeEventListener('mousemove', this._handleDragCallback);
        this._dragging = false;
    };
    Scrollbar.prototype._handleWheel = function (e) {
        // Always prefer the vertical axis if present. User can override with the control key.
        if (this._hasVertical) {
            this._viewport.scrollTop = this._normalizeDelta(e) + this._viewport.scrollTop;
        }
        else if (this._hasHorizontal) {
            this._viewport.scrollLeft = this._normalizeDelta(e) + this._viewport.scrollLeft;
        }
    };
    Scrollbar.prototype._handleMouseDown = function (e) {
        var target = e.currentTarget;
        if (this._dragging || !target) {
            this._prevent(e);
            return;
        }
        if (this._hasVertical) {
            var eventOffsetY = e.pageY - target.getBoundingClientRect().top;
            var halfHeight = this._verticalBar.slider.offsetHeight / 2;
            var offsetY = (eventOffsetY - this._verticalBar.slider.offsetTop - halfHeight) * this._verticalBar.slider2Scroll;
            this._viewport.scrollTop = offsetY + this._viewport.scrollTop;
        }
        if (this._hasHorizontal) {
            var eventOffsetX = e.pageX - target.getBoundingClientRect().left;
            var halfWidth = this._horizontalBar.slider.offsetWidth / 2;
            var offsetX = (eventOffsetX - this._horizontalBar.slider.offsetLeft - halfWidth) * this._horizontalBar.slider2Scroll;
            this._viewport.scrollLeft = offsetX + this._viewport.scrollLeft;
        }
    };
    Scrollbar.prototype._normalizeDelta = function (e) {
        if (e.deltaY) {
            return e.deltaY > 0 ? 100 : -100;
        }
        var originalEvent = e.originalEvent;
        if (originalEvent && originalEvent.wheelDelta) {
            return originalEvent.wheelDelta;
        }
        return 0;
    };
    Scrollbar.prototype._addListeners = function () {
        if (this._hasVertical) {
            this._verticalBar.slider.addEventListener('mousedown', this._startDragVCallback);
            this._verticalBar.rail.addEventListener('wheel', this._handleWheelCallback, { passive: true });
            this._verticalBar.rail.addEventListener('mousedown', this._handleMouseDownCallback);
        }
        if (this._hasHorizontal) {
            this._horizontalBar.slider.addEventListener('mousedown', this._startDragHCallback);
            this._horizontalBar.rail.addEventListener('wheel', this._handleWheelCallback, { passive: true });
            this._horizontalBar.rail.addEventListener('mousedown', this._handleMouseDownCallback);
        }
    };
    Scrollbar.prototype._removeListeners = function () {
        if (this._hasVertical) {
            this._verticalBar.slider.removeEventListener('mousedown', this._startDragVCallback);
            this._verticalBar.rail.removeEventListener('wheel', this._handleWheelCallback);
            this._verticalBar.rail.removeEventListener('mousedown', this._handleMouseDownCallback);
        }
        if (this._hasHorizontal) {
            this._horizontalBar.slider.removeEventListener('mousedown', this._startDragHCallback);
            this._horizontalBar.rail.removeEventListener('wheel', this._handleWheelCallback);
            this._horizontalBar.rail.removeEventListener('mousedown', this._handleMouseDownCallback);
        }
    };
    Scrollbar.prototype._createDivWithClass = function (className) {
        var div = document.createElement('div');
        div.setAttribute('role', 'none');
        div.className = className;
        return div;
    };
    Scrollbar.prototype._addScrollBar = function (scrollbarInfo, railClass, hasBoth) {
        var slider = this._createDivWithClass('slider');
        scrollbarInfo.rail = this._createDivWithClass('rail ' + railClass + (hasBoth ? ' railBoth' : ''));
        scrollbarInfo.slider = slider;
        scrollbarInfo.rail.appendChild(slider);
        this._container.appendChild(scrollbarInfo.rail);
    };
    Scrollbar.prototype._addScrollbars = function () {
        var containerClass = this._hasVertical ? 'rxCustomScrollV' : 'rxCustomScrollH';
        if (this._hasVertical) {
            this._addScrollBar(this._verticalBar, 'railV', this._hasHorizontal);
        }
        if (this._hasHorizontal) {
            this._addScrollBar(this._horizontalBar, 'railH', this._hasVertical);
        }
        this._container.classList.add(containerClass);
        this._container.classList.add('rxCustomScroll');
        this._viewport = this._container.querySelector('.scrollViewport');
    };
    Scrollbar.prototype._removeScrollbars = function () {
        if (this._hasVertical) {
            // tslint:disable-next-line
            this._verticalBar.rail.innerHTML = '';
            this._container.removeChild(this._verticalBar.rail);
        }
        if (this._hasHorizontal) {
            // tslint:disable-next-line
            this._horizontalBar.rail.innerHTML = '';
            this._container.removeChild(this._horizontalBar.rail);
        }
    };
    Scrollbar.prototype._calcNewBarSize = function (bar, newSize, newScrollSize, hasBoth) {
        if (hasBoth || this._hasHiddenScrollbar) {
            newSize -= SCROLLER_NEGATIVE_MARGIN;
            newScrollSize -= SCROLLER_NEGATIVE_MARGIN - Scrollbar.getNativeScrollbarWidth();
        }
        if (newScrollSize !== bar.scrollSize || newSize !== bar.size) {
            bar.size = newSize;
            bar.scrollSize = newScrollSize;
            bar.scroll2Slider = newSize / newScrollSize;
            bar.sliderSize = newSize * bar.scroll2Slider;
            // Don't allow the sliders to overlap.
            if (hasBoth) {
                bar.sliderSize = Math.max(bar.sliderSize - SCROLLER_NEGATIVE_MARGIN + Scrollbar.getNativeScrollbarWidth(), 0);
            }
            if (bar.sliderSize < SCROLLER_MIN_SIZE) {
                var railRange = newSize - SCROLLER_MIN_SIZE + bar.sliderSize;
                bar.scroll2Slider = railRange / newScrollSize;
                bar.slider2Scroll = newScrollSize / railRange;
            }
            else {
                bar.slider2Scroll = newScrollSize / newSize;
            }
        }
    };
    Scrollbar.prototype._resize = function () {
        if (this._hasHorizontal) {
            this._calcNewBarSize(this._horizontalBar, this._viewport.offsetWidth, this._viewport.scrollWidth, this._hasVertical);
        }
        if (this._hasVertical) {
            this._calcNewBarSize(this._verticalBar, this._viewport.offsetHeight, this._viewport.scrollHeight, this._hasHorizontal);
        }
    };
    Scrollbar.prototype.update = function () {
        this._resize();
        // We add one below to provide a small fudge factor because browsers round their scroll and offset values to the
        // nearest integer, and IE sometimes ends up returning a scroll and offset value that are off by one.
        if ((this._verticalBar && this._verticalBar.scrollSize > this._verticalBar.size + 1) ||
            (this._horizontalBar && this._horizontalBar.scrollSize > this._horizontalBar.size + 1)) {
            this.show();
            this._updateSliders();
        }
        else {
            this.hide();
        }
    };
    Scrollbar.prototype.show = function () {
        if (!this._scrollingVisible) {
            this._container.classList.add('active');
            this._addListeners();
            this._scrollingVisible = true;
        }
    };
    Scrollbar.prototype.hide = function () {
        if (this._scrollingVisible) {
            this._container.classList.remove('active');
            this._removeListeners();
            this._scrollingVisible = false;
        }
    };
    Scrollbar.prototype.init = function (options) {
        var _this = this;
        if (options) {
            this._hasHorizontal = !!options.horizontal;
            // Only if vertical is explicitly false as opposed to null, set it to false (default is true)
            if (options.vertical === false) {
                this._hasVertical = options.vertical;
            }
            // Our container may be scrollable even if the corresponding scrollbar is hidden (i.e. vertical
            // or horizontal is false). We have to take it into account when calculating scroll bar sizes.
            this._hasHiddenScrollbar = !!options.hiddenScrollbar;
        }
        Scrollbar._installStyleSheet();
        this._addScrollbars();
        this.show();
        this._container.addEventListener('mouseenter', this._updateCallback);
        // Defer remaining init work to avoid triggering sync layout
        this._asyncInitTimer = Timers_1.default.setTimeout(function () {
            _this._asyncInitTimer = undefined;
            _this._tryLtrOverride();
            _this.update();
        }, 0);
    };
    Scrollbar.prototype.dispose = function () {
        if (this._asyncInitTimer) {
            Timers_1.default.clearInterval(this._asyncInitTimer);
            this._asyncInitTimer = undefined;
        }
        this._stopDrag();
        this._container.removeEventListener('mouseenter', this._updateCallback);
        this.hide();
        this._removeScrollbars();
        // release DOM nodes
        this._container = null;
        this._viewport = null;
        this._verticalBar = null;
        this._horizontalBar = null;
    };
    return Scrollbar;
}());
exports.Scrollbar = Scrollbar;
exports.default = Scrollbar;

},{"../common/assert":"zDnP","../common/utils/Timers":"tBdH"}],"P8i1":[function(require,module,exports) {
"use strict";
/**
 * ScrollView.tsx
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform ScrollView abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDOM = require("react-dom");
var Timers_1 = require("../common/utils/Timers");
var CustomScrollbar_1 = require("./CustomScrollbar");
var _ = require("./utils/lodashMini");
var ScrollViewConfig_1 = require("./ScrollViewConfig");
var Styles_1 = require("./Styles");
var ViewBase_1 = require("./ViewBase");
var _styles = {
    defaultStyle: {
        position: 'relative',
        overflow: 'hidden',
        alignSelf: 'stretch',
        flexGrow: 1,
        flexShrink: 1,
        // This forces some browsers (like Chrome) to create a new render context,
        // which can significantly speed up scrolling.
        transform: 'translateZ(0)'
    },
    verticalStyle: {
        flexDirection: 'column',
        overflowY: 'auto',
        overflowX: 'hidden'
    },
    horizontalStyle: {
        flexDirection: 'row',
        overflowY: 'hidden',
        overflowX: 'auto'
    }
};
var _initializedCustomStyles = false;
var _customStyles = {
    defaultStyle: {
        overflow: 'hidden',
        msOverflowStyle: 'auto',
        flexDirection: 'column',
        // This forces some browsers (like Chrome) to create a new render context,
        // which can significantly speed up scrolling.
        transform: 'translateZ(0)'
    },
    verticalStyle: {},
    horizontalStyle: {},
    customScrollContainer: {
        position: 'relative',
        overflow: 'hidden',
        boxSizing: 'border-box',
        alignSelf: 'stretch'
    },
    customScrollVertical: {
        // Set flex only for vertical scroll view.
        // Don't set flex for horizontal scroll view, otherwise it disappears.
        display: 'flex',
        flex: '1 1 0px'
    }
};
// Default to once per frame.
var _defaultScrollThrottleValue = 1000 / 60;
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView(props) {
        var _this = _super.call(this, props) || this;
        _this._mountedComponent = null;
        _this._mounted = false;
        _this._customScrollbarEnabled = true;
        _this._dragging = false;
        // Throttled scroll handler
        _this._onScroll = _.throttle(function (e) {
            if (!_this._mounted) {
                return;
            }
            if (_this._customScrollbarEnabled && _this._customScrollbar) {
                _this._customScrollbar.update();
            }
            // Check if this should be also fire an onLayout event
            // The browser sends a scroll event when resizing
            var onLayoutPromise = _this._checkAndReportLayout();
            // Recent versions of Chrome have started to defer all timers until
            // after scrolling has completed. Because of this, our deferred layout
            // reporting sometimes doesn't get handled for up to seconds at a time.
            // Force the list of deferred changes to be reported now.
            ViewBase_1.default._reportDeferredLayoutChanges();
            if (_this.props.onScroll || _this.props.scrollXAnimatedValue || _this.props.scrollYAnimatedValue) {
                onLayoutPromise.then(function () {
                    var container = _this._getContainer();
                    if (!container) {
                        return;
                    }
                    if (_this.props.onScroll) {
                        _this.props.onScroll(container.scrollTop, container.scrollLeft);
                    }
                    if (_this.props.scrollXAnimatedValue) {
                        _this.props.scrollXAnimatedValue.setValue(container.scrollLeft);
                    }
                    if (_this.props.scrollYAnimatedValue) {
                        _this.props.scrollYAnimatedValue.setValue(container.scrollTop);
                    }
                }).catch(function (e) {
                    console.warn('ScrollView onLayout exception: ' + JSON.stringify(e));
                });
            }
        }, (_this.props.scrollEventThrottle || _defaultScrollThrottleValue), { leading: true, trailing: true });
        _this._onMount = function (component) {
            _this._mountedComponent = component;
        };
        _this._onTouchStart = function () {
            if (!_this._dragging) {
                _this._dragging = true;
                if (_this.props.onScrollBeginDrag) {
                    _this.props.onScrollBeginDrag();
                }
            }
        };
        _this._onTouchEnd = function () {
            _this._dragging = false;
            if (_this.props.onScrollEndDrag) {
                _this.props.onScrollEndDrag();
            }
        };
        // Set final styles upon initialization of the first ScrollView. This was previously done in the head
        // of this file, but it broke the pattern of not doing external work (such as accessing the document
        // object) on Types initialization.
        if (!_initializedCustomStyles) {
            _initializedCustomStyles = true;
            var nativeScrollbarWidth = CustomScrollbar_1.default.getNativeScrollbarWidth();
            _customStyles.verticalStyle = {
                overflowY: 'scroll',
                paddingRight: 30 - nativeScrollbarWidth,
                marginRight: -30,
                // Fixes a bug for Chrome beta where the parent flexbox (customScrollContainer) doesn't
                // recognize that its child got populated with items. Smallest default width gives an
                // indication that content will exist here.
                minHeight: 0
            };
            _customStyles.horizontalStyle = {
                // The display needs to be set to flex, otherwise the scrollview incorrectly shows up vertically.
                display: 'flex',
                overflowX: 'scroll',
                paddingBottom: 30 - nativeScrollbarWidth,
                marginBottom: -30,
                // Fixes a bug for Chrome beta where the parent flexbox (customScrollContainer) doesn't
                // recognize that its child got populated with items. Smallest default width gives an
                // indication that content will exist here.
                minWidth: 0
            };
        }
        return _this;
    }
    ScrollView.prototype.componentDidUpdate = function () {
        var _this = this;
        _super.prototype.componentDidUpdate.call(this);
        if (!this.props.onContentSizeChange) {
            return;
        }
        _.defer(function () {
            if (_this.props.onContentSizeChange) {
                var container = _this._getContainer();
                if (!container) {
                    return;
                }
                _this.props.onContentSizeChange(container.scrollWidth, container.scrollHeight);
            }
        });
    };
    ScrollView.prototype.render = function () {
        return this._customScrollbarEnabled ? this._renderWithCustomScrollbar() : this._renderNormal();
    };
    ScrollView.prototype.UNSAFE_componentWillMount = function () {
        this._onPropsChange(this.props);
    };
    ScrollView.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
        this._mounted = true;
        this._createCustomScrollbarsIfNeeded(this.props);
    };
    ScrollView.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {
        _super.prototype.UNSAFE_componentWillReceiveProps.call(this, newProps);
        this._onPropsChange(newProps);
    };
    ScrollView.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
        this._mounted = false;
        if (this._customScrollbar) {
            this._customScrollbar.dispose();
            this._customScrollbar = undefined;
        }
    };
    ScrollView.prototype._getContainer = function () {
        return this._mountedComponent;
    };
    ScrollView.prototype._onPropsChange = function (props) {
        this._customScrollbarEnabled = ScrollViewConfig_1.default.useCustomScrollbars();
        // If we're turning on custom scrollbars or toggling vertical and/or horizontal, we need to re-create
        // the scrollbar.
        this._createCustomScrollbarsIfNeeded(props);
    };
    ScrollView.prototype._createCustomScrollbarsIfNeeded = function (props) {
        if (this._mounted && this._customScrollbarEnabled) {
            if (this._customScrollbar) {
                if (this.props.horizontal === props.horizontal &&
                    this.props.showsHorizontalScrollIndicator === props.showsHorizontalScrollIndicator &&
                    this.props.showsVerticalScrollIndicator === props.showsVerticalScrollIndicator) {
                    // No need to re-create the scrollbar.
                    return;
                }
                this._customScrollbar.dispose();
                this._customScrollbar = undefined;
            }
            var element = ReactDOM.findDOMNode(this);
            if (element) {
                this._customScrollbar = new CustomScrollbar_1.default(element);
                var horizontalHidden = (props.horizontal && props.showsHorizontalScrollIndicator === false);
                var verticalHidden = (!props.horizontal && props.showsVerticalScrollIndicator === false);
                this._customScrollbar.init({
                    horizontal: props.horizontal && !horizontalHidden,
                    vertical: !props.horizontal && !verticalHidden,
                    hiddenScrollbar: horizontalHidden || verticalHidden
                });
            }
        }
    };
    ScrollView.prototype._getContainerStyle = function () {
        var _a = this.props.scrollEnabled, scrollEnabled = _a === void 0 ? true : _a;
        var styles = [{ display: 'block' }];
        var sourceStyles = this._customScrollbarEnabled ? _customStyles : _styles;
        styles.push(sourceStyles.defaultStyle);
        if (scrollEnabled && this.props.horizontal) {
            styles.push(sourceStyles.horizontalStyle);
        }
        else if (scrollEnabled) {
            styles.push(sourceStyles.verticalStyle);
        }
        return Styles_1.default.combine([styles, this.props.style]);
    };
    ScrollView.prototype._renderNormal = function () {
        return (React.createElement("div", { ref: this._onMount, role: 'none', onScroll: this._onScroll, onTouchStart: this._onTouchStart, onTouchEnd: this._onTouchEnd, style: this._getContainerStyle(), onKeyDown: this.props.onKeyPress, onFocus: this.props.onFocus, onBlur: this.props.onBlur, "data-test-id": this.props.testId }, this.props.children));
    };
    ScrollView.prototype._renderWithCustomScrollbar = function () {
        var containerStyles = _customStyles.customScrollContainer;
        var scrollComponentClassNames = ['scrollViewport'];
        if (this.props.horizontal) {
            scrollComponentClassNames.push('scrollViewportH');
        }
        else {
            scrollComponentClassNames.push('scrollViewportV');
            containerStyles = _.extend({}, _customStyles.customScrollVertical, containerStyles);
        }
        return (React.createElement("div", { role: 'none', className: 'rxCustomScroll', style: containerStyles, "data-test-id": this.props.testId },
            React.createElement("div", { ref: this._onMount, role: 'none', className: scrollComponentClassNames.join(' '), onScroll: this._onScroll, style: this._getContainerStyle(), onKeyDown: this.props.onKeyPress, onFocus: this.props.onFocus, onBlur: this.props.onBlur, onTouchStart: this._onTouchStart, onTouchEnd: this._onTouchEnd }, this.props.children)));
    };
    ScrollView.prototype.setScrollTop = function (scrollTop, animate) {
        var _this = this;
        if (animate === void 0) { animate = false; }
        var container = this._getContainer();
        if (!container) {
            return;
        }
        this._onScroll.cancel();
        if (animate) {
            var start_1 = container.scrollTop;
            var change_1 = scrollTop - start_1;
            var increment_1 = 20;
            var duration_1 = 200;
            var animateScroll_1 = function (elapsedTime) {
                elapsedTime += increment_1;
                var position = _this._easeInOut(elapsedTime, start_1, change_1, duration_1);
                container.scrollTop = position;
                if (elapsedTime < duration_1) {
                    Timers_1.default.setTimeout(function () {
                        animateScroll_1(elapsedTime);
                    }, increment_1);
                }
            };
            animateScroll_1(0);
        }
        else {
            container.scrollTop = scrollTop;
        }
    };
    ScrollView.prototype.setScrollLeft = function (scrollLeft, animate) {
        var _this = this;
        if (animate === void 0) { animate = false; }
        var container = this._getContainer();
        if (!container) {
            return;
        }
        this._onScroll.cancel();
        if (animate) {
            var start_2 = container.scrollLeft;
            var change_2 = scrollLeft - start_2;
            var increment_2 = 20;
            var duration_2 = 200;
            var animateScroll_2 = function (elapsedTime) {
                elapsedTime += increment_2;
                var position = _this._easeInOut(elapsedTime, start_2, change_2, duration_2);
                container.scrollLeft = position;
                if (elapsedTime < duration_2) {
                    Timers_1.default.setTimeout(function () {
                        animateScroll_2(elapsedTime);
                    }, increment_2);
                }
            };
            animateScroll_2(0);
        }
        else {
            container.scrollLeft = scrollLeft;
        }
    };
    ScrollView.prototype._easeInOut = function (currentTime, start, change, duration) {
        currentTime /= duration / 2;
        if (currentTime < 1) {
            return change / 2 * currentTime * currentTime + start;
        }
        currentTime -= 1;
        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;
    };
    return ScrollView;
}(ViewBase_1.default));
exports.ScrollView = ScrollView;
exports.default = ScrollView;

},{"react":"HdMw","react-dom":"X9zx","../common/utils/Timers":"tBdH","./CustomScrollbar":"oX80","./utils/lodashMini":"Wdkl","./ScrollViewConfig":"ktry","./Styles":"FK4c","./ViewBase":"m77O"}],"OsHA":[function(require,module,exports) {
"use strict";
/**
 * StatusBar.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform status bar.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var StatusBar = /** @class */ (function (_super) {
    __extends(StatusBar, _super);
    function StatusBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatusBar.prototype.isOverlay = function () {
        return false;
    };
    StatusBar.prototype.setBarStyle = function (style, animated) {
        // Nothing to do on Web
    };
    StatusBar.prototype.setHidden = function (hidden, showHideTransition) {
        // Nothing to do on Web
    };
    StatusBar.prototype.setNetworkActivityIndicatorVisible = function (value) {
        // Nothing to do on the web
    };
    StatusBar.prototype.setBackgroundColor = function (color, animated) {
        // Nothing to do on the web
    };
    StatusBar.prototype.setTranslucent = function (translucent) {
        // Nothing to do on the web
    };
    return StatusBar;
}(RX.StatusBar));
exports.StatusBar = StatusBar;
exports.default = new StatusBar();

},{"../common/Interfaces":"rFlL"}],"Xyst":[function(require,module,exports) {
"use strict";
/**
 * Storage.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the cross-platform database storage abstraction.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var Storage = /** @class */ (function (_super) {
    __extends(Storage, _super);
    function Storage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Storage.prototype.getItem = function (key) {
        var value = window.localStorage.getItem(key);
        return Promise.resolve(value === null ? undefined : value);
    };
    Storage.prototype.setItem = function (key, value) {
        try {
            window.localStorage.setItem(key, value);
        }
        catch (e) {
            return Promise.resolve(e);
        }
        return Promise.resolve(void 0);
    };
    Storage.prototype.removeItem = function (key) {
        window.localStorage.removeItem(key);
        return Promise.resolve(void 0);
    };
    Storage.prototype.clear = function () {
        window.localStorage.clear();
        return Promise.resolve(void 0);
    };
    return Storage;
}(RX.Storage));
exports.Storage = Storage;
exports.default = new Storage();

},{"../common/Interfaces":"rFlL"}],"FHgp":[function(require,module,exports) {
"use strict";
/**
 * UserPresence.ts
 *
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT license.
 *
 * Web-specific implementation of the ReactXP interfaces related to
 * user presence.
 *
 * User is considered present when user is focused on the App and has interacted with the App in the last 60 seconds.
 * User is considered not present, if app is not focused (backgrounded or blurred) or the app is focused
 * but the user has not intereacted with the app in the last 60 seconds
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var RX = require("../common/Interfaces");
var AppVisibilityUtils_1 = require("./utils/AppVisibilityUtils");
var UserPresence = /** @class */ (function (_super) {
    __extends(UserPresence, _super);
    function UserPresence() {
        var _this = _super.call(this) || this;
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            _this._isPresent = AppVisibilityUtils_1.default.hasFocusAndActive();
            AppVisibilityUtils_1.default.onFocusedEvent.subscribe(_this._handleFocus.bind(_this));
            AppVisibilityUtils_1.default.onBlurredEvent.subscribe(_this._handleBlur.bind(_this));
            AppVisibilityUtils_1.default.onWakeUpEvent.subscribe(_this._handleWakeup.bind(_this));
            AppVisibilityUtils_1.default.onIdleEvent.subscribe(_this._handleIdle.bind(_this));
        }
        else {
            _this._isPresent = false;
        }
        return _this;
    }
    UserPresence.prototype.isUserPresent = function () {
        // Handle test environment where document is not defined.
        if (typeof (document) !== 'undefined') {
            return this._isPresent;
        }
        else {
            return true;
        }
    };
    UserPresence.prototype._setUserPresent = function (isPresent) {
        if (this._isPresent !== isPresent) {
            this._isPresent = isPresent;
            this.userPresenceChangedEvent.fire(isPresent);
        }
    };
    UserPresence.prototype._handleWakeup = function () {
        this._setUserPresent(true);
    };
    UserPresence.prototype._handleIdle = function () {
        this._setUserPresent(false);
    };
    UserPresence.prototype._handleFocus = function () {
        this._setUserPresent(true);
    };
    UserPresence.prototype._handleBlur = function () {
        this._setUserPresent(false);
    };
    return UserPresence;
}(RX.UserPresence));
exports.UserPresence = UserPresence;
var instance = new UserPresence();
exports.default = instance;

},{"../common/Interfaces":"rFlL","./utils/AppVisibilityUtils":"oxg3"}],"Hvnl":[function(require,module,exports) {
"use strict";
/**
* ReactXP.ts
*
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT license.
*
* Wrapper for all ReactXP functionality. Users of ReactXP should import just this
* file instead of internals.
*/
var React = require("react");
var AutoFocusHelper_1 = require("../common/utils/AutoFocusHelper");
var Location_1 = require("../common/Location");
var Popup_1 = require("../web/Popup");
var RXTypes = require("../common/Types");
var Accessibility_1 = require("./Accessibility");
var ActivityIndicator_1 = require("./ActivityIndicator");
var Alert_1 = require("./Alert");
var AnimatedImpl = require("./Animated");
var App_1 = require("./App");
var Button_1 = require("./Button");
var Clipboard_1 = require("./Clipboard");
var FocusManager_1 = require("./utils/FocusManager");
var GestureView_1 = require("./GestureView");
var Image_1 = require("./Image");
var Input_1 = require("./Input");
var International_1 = require("./International");
var Link_1 = require("./Link");
var Linking_1 = require("./Linking");
var Modal_1 = require("./Modal");
var Picker_1 = require("./Picker");
var Platform_1 = require("./Platform");
var ScrollView_1 = require("./ScrollView");
var StatusBar_1 = require("./StatusBar");
var Storage_1 = require("./Storage");
var Styles_1 = require("./Styles");
var Text_1 = require("./Text");
var TextInput_1 = require("./TextInput");
var UserInterface_1 = require("./UserInterface");
var UserPresence_1 = require("./UserPresence");
var View_1 = require("./View");
var ViewBase_1 = require("./ViewBase");
AutoFocusHelper_1.setSortAndFilterFunc(FocusManager_1.default.sortAndFilterAutoFocusCandidates);
// -- STRANGE THINGS GOING ON HERE --
//
// 1) 'export type Foo = FooImpl; export var Foo = FooImpl;'
//    If the var 'Foo' was exported alone then the name 'RX.Foo' would not be valid in a type position: 'function takesFoo(foo: RX.Foo)'.
//    To avoid this problem, the type information is also exported. TypeScript will merge the var and type together (if the types match).
var ReactXP;
(function (ReactXP) {
    ReactXP.Accessibility = Accessibility_1.default;
    ReactXP.ActivityIndicator = ActivityIndicator_1.ActivityIndicator;
    ReactXP.Alert = Alert_1.default;
    ReactXP.App = App_1.default;
    ReactXP.Button = Button_1.Button;
    ReactXP.Picker = Picker_1.Picker;
    ReactXP.Clipboard = Clipboard_1.default;
    ReactXP.GestureView = GestureView_1.GestureView;
    ReactXP.Image = Image_1.Image;
    ReactXP.Input = Input_1.default;
    ReactXP.International = International_1.default;
    ReactXP.Link = Link_1.Link;
    ReactXP.Linking = Linking_1.default;
    ReactXP.Location = Location_1.default;
    ReactXP.Modal = Modal_1.default;
    ReactXP.Platform = Platform_1.default;
    ReactXP.Popup = Popup_1.default;
    ReactXP.ScrollView = ScrollView_1.ScrollView;
    ReactXP.StatusBar = StatusBar_1.default;
    ReactXP.Storage = Storage_1.default;
    ReactXP.Styles = Styles_1.default;
    ReactXP.Text = Text_1.Text;
    ReactXP.TextInput = TextInput_1.TextInput;
    ReactXP.UserInterface = UserInterface_1.default;
    ReactXP.UserPresence = UserPresence_1.default;
    ReactXP.View = View_1.default;
    ReactXP.Animated = AnimatedImpl;
    ReactXP.Types = RXTypes;
    ReactXP.Component = React.Component;
    ReactXP.createElement = React.createElement;
    ReactXP.Children = React.Children;
    ReactXP.__spread = React.__spread;
    ReactXP.Fragment = React.Fragment;
})(ReactXP || (ReactXP = {}));
ViewBase_1.ViewBase.setActivationState(App_1.default.getActivationState());
App_1.default.activationStateChangedEvent.subscribe(function (newState) {
    ViewBase_1.ViewBase.setActivationState(newState);
});
// -- STRANGE THINGS GOING ON HERE --
//
// 1) Unused variable
//    This forces TypeScript to type-check the above RX module against the common RX interface. Missing/incorrect types will cause errors.
//    Note: RX must be a module so 'RX.Foo' can be a valid value ('new RX.Foo') and valid type ('var k: RX.Foo'), but modules cannot
//    implement an interface. If RX was a class or variable then it could directly check this, but then 'RX.Foo' would not be a valid type.
// tslint:disable-next-line
var _rxImplementsRxInterface = ReactXP;
_rxImplementsRxInterface = _rxImplementsRxInterface;
module.exports = ReactXP;
/*

var rx = module.exports;
Object.keys(rx)
    .filter(key => rx[key] && rx[key].prototype instanceof React.Component && !rx[key].displayName)
    .forEach(key => rx[key].displayName = 'RX.' + key + '');
*/

},{"react":"HdMw","../common/utils/AutoFocusHelper":"uohT","../common/Location":"QzA5","../web/Popup":"DGV9","../common/Types":"K05F","./Accessibility":"eZek","./ActivityIndicator":"PAJr","./Alert":"EAgw","./Animated":"RydV","./App":"L1y1","./Button":"Dkk0","./Clipboard":"toiH","./utils/FocusManager":"HWpt","./GestureView":"NI2X","./Image":"E4vj","./Input":"ypnH","./International":"YFKf","./Link":"d21q","./Linking":"NZCX","./Modal":"SEaK","./Picker":"rfGn","./Platform":"PxQZ","./ScrollView":"P8i1","./StatusBar":"OsHA","./Storage":"Xyst","./Styles":"FK4c","./Text":"rfZP","./TextInput":"JiYf","./UserInterface":"BHAl","./UserPresence":"FHgp","./View":"J474","./ViewBase":"m77O"}],"IpFD":[function(require,module,exports) {
'use strict';

// Export web by default. Other platforms have custom index.[platform].js files
module.exports = require('./dist/web/ReactXP.js');

},{"./dist/web/ReactXP.js":"Hvnl"}],"lEUm":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
exports.Animated = reactxp_1.Animated;

},{"reactxp":"IpFD"}],"eSvb":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
exports.View = reactxp_1.View;

},{"reactxp":"IpFD"}],"c41Y":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var view_1 = require("../view");
var BackgroundImage = /** @class */ (function (_super) {
    __extends(BackgroundImage, _super);
    function BackgroundImage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.setStyle = function () {
            if (_this.element) {
                var _a = _this.props, _b = _a.borderRadius, borderRadius = _b === void 0 ? 0 : _b, center = _a.position, uri = _a.uri, _c = _a.resizeMode, resizeMode = _c === void 0 ? 'auto' : _c, repeat = _a.repeat;
                var position = center ? center.join(' ') : '50% 50%';
                var size = resizeMode === 'stretch' ? '100% 100%' : resizeMode;
                _this.element.style.position = 'absolute';
                _this.element.style.top = '0';
                _this.element.style.right = '0';
                _this.element.style.bottom = '0';
                _this.element.style.left = '0';
                _this.element.style.borderRadius = borderRadius + "px";
                _this.element.style.backgroundImage = "url(" + uri + ")";
                _this.element.style.backgroundPosition = "" + position;
                _this.element.style.backgroundSize = "" + size;
                _this.element.style.backgroundRepeat = repeat ? 'repeat' : 'no-repeat';
            }
        };
        return _this;
    }
    BackgroundImage.prototype.componentDidMount = function () {
        this.element = react_dom_1.findDOMNode(this.viewRef);
        this.setStyle();
    };
    BackgroundImage.prototype.render = function () {
        var _this = this;
        return (React.createElement(view_1.View, { ref: function (view) { return (_this.viewRef = view); }, onLayout: this.setStyle }));
    };
    BackgroundImage.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.uri !== this.props.uri ||
            (prevProps.position === undefined && this.props.position !== undefined) ||
            (prevProps.position !== undefined && this.props.position === undefined) ||
            (prevProps.position !== undefined &&
                this.props.position !== undefined &&
                (prevProps.position[0] !== this.props.position[0] ||
                    prevProps.position[1] !== this.props.position[1])) ||
            prevProps.repeat !== this.props.repeat ||
            prevProps.resizeMode !== this.props.resizeMode) {
            this.setStyle();
        }
    };
    return BackgroundImage;
}(React.PureComponent));
exports.default = BackgroundImage;

},{"react":"HdMw","react-dom":"X9zx","../view":"eSvb"}],"iWEd":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BackgroundImage_1 = require("./BackgroundImage");
exports.BackgroundImage = BackgroundImage_1.default;

},{"./BackgroundImage":"c41Y"}],"NlqL":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var view_1 = require("../view");
var BorderImage = /** @class */ (function (_super) {
    __extends(BorderImage, _super);
    function BorderImage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.setStyle = function () {
            if (_this.element) {
                var _a = _this.props, borderWidth = _a.borderWidth, uri = _a.uri, sliceWidth = _a.sliceWidth;
                _this.element.style.position = 'absolute';
                _this.element.style.top = '0';
                _this.element.style.right = '0';
                _this.element.style.bottom = '0';
                _this.element.style.left = '0';
                _this.element.style.borderWidth = borderWidth + "px";
                _this.element.style.borderStyle = 'solid';
                _this.element.style.borderImageSource = "url(" + uri + ")";
                _this.element.style.borderImageSlice = "" + sliceWidth;
            }
        };
        return _this;
    }
    BorderImage.prototype.componentDidMount = function () {
        this.element = react_dom_1.findDOMNode(this.viewRef);
        this.setStyle();
    };
    BorderImage.prototype.render = function () {
        var _this = this;
        return (React.createElement(view_1.View, { ref: function (view) { return (_this.viewRef = view); }, onLayout: this.setStyle }));
    };
    BorderImage.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.uri !== this.props.uri)
            this.setStyle();
    };
    return BorderImage;
}(React.PureComponent));
exports.default = BorderImage;

},{"react":"HdMw","react-dom":"X9zx","../view":"eSvb"}],"N6xb":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BorderImage_1 = require("./BorderImage");
exports.BorderImage = BorderImage_1.default;

},{"./BorderImage":"NlqL"}],"uUIW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
}); // @credit https://github.com/mui-org/material-ui

/**
 * Returns a number whose value is limited to the given range.
 */

function clamp(value, min, max) {
  if (min === void 0) {
    min = 0;
  }

  if (max === void 0) {
    max = 1;
  }

  if (value < min) {
    return min;
  }

  if (value > max) {
    return max;
  }

  return value;
}
/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 */


function convertHexToRGB(color) {
  color = color.substr(1);
  var re = new RegExp(".{1," + color.length / 3 + "}", 'g');
  var colors = color.match(re);

  if (colors && colors[0].length === 1) {
    colors = colors.map(function (n) {
      return n + n;
    });
  }

  return colors ? "rgb(" + colors.map(function (n) {
    return parseInt(n, 16);
  }).join(', ') + ")" : '';
}
/**
 * Converts a color from CSS rgb format to CSS hex format.
 */


function rgbToHex(color) {
  // Pass hex straight through
  if (color.indexOf('#') === 0) {
    return color;
  }

  function intToHex(c) {
    var hex = c.toString(16);
    return hex.length === 1 ? "0" + hex : hex;
  }

  var values = decomposeColor(color).values;
  values = values.map(function (n) {
    return intToHex(n);
  });
  return "#" + values.join('');
}
/**
 * Returns an object with:
 * - the type of the color format ('rgb', 'rgba', 'hsl', 'hsla')
 * - the R, G, B values as an array
 *
 * Note: Does not support rgb % values.
 */


function decomposeColor(color) {
  if (color.charAt(0) === '#') {
    return decomposeColor(convertHexToRGB(color));
  }

  var marker = color.indexOf('(');
  var type = color.substring(0, marker);
  var values = color.substring(marker + 1, color.length - 1).split(',').map(function (value) {
    return parseFloat(value);
  });

  if ("production" !== 'production') {
    if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
      throw new Error(["Sproutch: unsupported `" + color + "` color.", 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
    }
  }

  return {
    type: type,
    values: values
  };
}
/**
 * Converts a color object with type and values to a string.
 */


function recomposeColor(color) {
  var type = color.type;
  var values = color.values;

  if (type.indexOf('rgb') !== -1) {
    // Only convert the first 3 values to int (i.e. not alpha)
    values = values.map(function (n, i) {
      return i < 3 ? parseInt(n, 10) : n;
    });
  }

  if (type.indexOf('hsl') !== -1) {
    values[1] = values[1] + "%";
    values[2] = values[2] + "%";
  }

  return color.type + "(" + values.join(', ') + ")";
}
/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */


function getContrastRatio(foreground, background) {
  var lumA = getLuminance(foreground);
  var lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */


function getLuminance(color) {
  var decomposedColor = decomposeColor(color);

  if (decomposedColor.type.indexOf('rgb') !== -1) {
    var rgb = decomposedColor.values.map(function (val) {
      val /= 255; // normalized

      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
    }); // Truncate at 3 digits

    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
  } // else if (decomposedColor.type.indexOf('hsl') !== -1)


  return decomposedColor.values[2] / 100;
}
/**
 * Darken or lighten a colour, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 */


function emphasize(color, coefficient) {
  if (coefficient === void 0) {
    coefficient = 0.15;
  }

  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
}
/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 */


function fade(color, value) {
  if (!color) return color;
  color = decomposeColor(color);
  value = clamp(value);

  if (color.type === 'rgb' || color.type === 'hsl') {
    color.type += 'a';
  }

  color.values[3] = value;
  return recomposeColor(color);
}
/**
 * Darkens a color.
 */


function darken(color, coefficient) {
  if (!color) return color;
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] *= 1 - coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] *= 1 - coefficient;
    }
  }

  return recomposeColor(color);
}
/**
 * Lightens a color.
 */


function lighten(color, coefficient) {
  if (!color) return color;
  color = decomposeColor(color);
  coefficient = clamp(coefficient);

  if (color.type.indexOf('hsl') !== -1) {
    color.values[2] += (100 - color.values[2]) * coefficient;
  } else if (color.type.indexOf('rgb') !== -1) {
    for (var i = 0; i < 3; i += 1) {
      color.values[i] += (255 - color.values[i]) * coefficient;
    }
  }

  return recomposeColor(color);
}

exports.colorManipulator = {
  convertHexToRGB: convertHexToRGB,
  rgbToHex: rgbToHex,
  decomposeColor: decomposeColor,
  recomposeColor: recomposeColor,
  getContrastRatio: getContrastRatio,
  getLuminance: getLuminance,
  emphasize: emphasize,
  fade: fade,
  darken: darken,
  lighten: lighten
};
},{}],"JHJq":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.colors = {
    red: {
        50: "#ffebee",
        100: "#ffcdd2",
        200: "#ef9a9a",
        300: "#e57373",
        400: "#ef5350",
        500: "#f44336",
        600: "#e53935",
        700: "#d32f2f",
        800: "#c62828",
        900: "#b71c1c",
        A100: "#ff8a80",
        A200: "#ff5252",
        A400: "#ff1744",
        A700: "#d50000",
        darkText: [50, 100, 200, 300, "A100"],
    },
    pink: {
        50: "#fce4ec",
        100: "#f8bbd0",
        200: "#f48fb1",
        300: "#f06292",
        400: "#ec407a",
        500: "#e91e63",
        600: "#d81b60",
        700: "#c2185b",
        800: "#ad1457",
        900: "#880e4f",
        A100: "#ff80ab",
        A200: "#ff4081",
        A400: "#f50057",
        A700: "#c51162",
        darkText: [50, 100, 200, "A100"],
    },
    purple: {
        50: "#f3e5f5",
        100: "#e1bee7",
        200: "#ce93d8",
        300: "#ba68c8",
        400: "#ab47bc",
        500: "#9c27b0",
        600: "#8e24aa",
        700: "#7b1fa2",
        800: "#6a1b9a",
        900: "#4a148c",
        A100: "#ea80fc",
        A200: "#e040fb",
        A400: "#d500f9",
        A700: "#aa00ff",
        darkText: [50, 100, 200, "A100"],
    },
    deepPurple: {
        50: "#ede7f6",
        100: "#d1c4e9",
        200: "#b39ddb",
        300: "#9575cd",
        400: "#7e57c2",
        500: "#673ab7",
        600: "#5e35b1",
        700: "#512da8",
        800: "#4527a0",
        900: "#311b92",
        A100: "#b388ff",
        A200: "#7c4dff",
        A400: "#651fff",
        A700: "#6200ea",
        darkText: [50, 100, 200, "A100"],
    },
    indigo: {
        50: "#e8eaf6",
        100: "#c5cae9",
        200: "#9fa8da",
        300: "#7986cb",
        400: "#5c6bc0",
        500: "#3f51b5",
        600: "#3949ab",
        700: "#303f9f",
        800: "#283593",
        900: "#1a237e",
        A100: "#8c9eff",
        A200: "#536dfe",
        A400: "#3d5afe",
        A700: "#304ffe",
        darkText: [50, 100, 200, "A100"],
    },
    blue: {
        50: "#e3f2fd",
        100: "#bbdefb",
        200: "#90caf9",
        300: "#64b5f6",
        400: "#42a5f5",
        500: "#2196f3",
        600: "#1e88e5",
        700: "#1976d2",
        800: "#1565c0",
        900: "#0d47a1",
        A100: "#82b1ff",
        A200: "#448aff",
        A400: "#2979ff",
        A700: "#2962ff",
        darkText: [50, 100, 200, 300, 400, "A100"],
    },
    lightBlue: {
        50: "#e1f5fe",
        100: "#b3e5fc",
        200: "#81d4fa",
        300: "#4fc3f7",
        400: "#29b6f6",
        500: "#03a9f4",
        600: "#039be5",
        700: "#0288d1",
        800: "#0277bd",
        900: "#01579b",
        A100: "#80d8ff",
        A200: "#40c4ff",
        A400: "#00b0ff",
        A700: "#0091ea",
        darkText: [50, 100, 200, 300, 400, 500, "A100", "A200", "A300"],
    },
    cyan: {
        50: "#e0f7fa",
        100: "#b2ebf2",
        200: "#80deea",
        300: "#4dd0e1",
        400: "#26c6da",
        500: "#00bcd4",
        600: "#00acc1",
        700: "#0097a7",
        800: "#00838f",
        900: "#006064",
        A100: "#84ffff",
        A200: "#18ffff",
        A400: "#00e5ff",
        A700: "#00b8d4",
        darkText: [50, 100, 200, 300, 400, 500, 600, "A100", "A200", "A300", "A400"],
    },
    teal: {
        50: "#e0f2f1",
        100: "#b2dfdb",
        200: "#80cbc4",
        300: "#4db6ac",
        400: "#26a69a",
        500: "#009688",
        600: "#00897b",
        700: "#00796b",
        800: "#00695c",
        900: "#004d40",
        A100: "#a7ffeb",
        A200: "#64ffda",
        A400: "#1de9b6",
        A700: "#00bfa5",
        darkText: [50, 100, 200, 300, 400, "A100", "A200", "A300", "A400"],
    },
    green: {
        50: "#e8f5e9",
        100: "#c8e6c9",
        200: "#a5d6a7",
        300: "#81c784",
        400: "#66bb6a",
        500: "#4caf50",
        600: "#43a047",
        700: "#388e3c",
        800: "#2e7d32",
        900: "#1b5e20",
        A100: "#b9f6ca",
        A200: "#69f0ae",
        A400: "#00e676",
        A700: "#00c853",
        darkText: [50, 100, 200, 300, 400, 500, "A100", "A200", "A300", "A400"],
    },
    lightGreen: {
        50: "#f1f8e9",
        100: "#dcedc8",
        200: "#c5e1a5",
        300: "#aed581",
        400: "#9ccc65",
        500: "#8bc34a",
        600: "#7cb342",
        700: "#689f38",
        800: "#558b2f",
        900: "#33691e",
        A100: "#ccff90",
        A200: "#b2ff59",
        A400: "#76ff03",
        A700: "#64dd17",
        darkText: [50, 100, 200, 300, 400, 500, 600, "A100", "A200", "A300", "A400"],
    },
    lime: {
        50: "#f9fbe7",
        100: "#f0f4c3",
        200: "#e6ee9c",
        300: "#dce775",
        400: "#d4e157",
        500: "#cddc39",
        600: "#c0ca33",
        700: "#afb42b",
        800: "#9e9d24",
        900: "#827717",
        A100: "#f4ff81",
        A200: "#eeff41",
        A400: "#c6ff00",
        A700: "#aeea00",
        darkText: [50, 100, 200, 300, 400, 500, 600, 700, 800, "A100", "A200", "A300", "A400"],
    },
    yellow: {
        50: "#fffde7",
        100: "#fff9c4",
        200: "#fff59d",
        300: "#fff176",
        400: "#ffee58",
        500: "#ffeb3b",
        600: "#fdd835",
        700: "#fbc02d",
        800: "#f9a825",
        900: "#f57f17",
        A100: "#ffff8d",
        A200: "#ffff00",
        A400: "#ffea00",
        A700: "#ffd600",
        darkText: [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, "A100", "A200", "A300", "A400"],
    },
    amber: {
        50: "#fff8e1",
        100: "#ffecb3",
        200: "#ffe082",
        300: "#ffd54f",
        400: "#ffca28",
        500: "#ffc107",
        600: "#ffb300",
        700: "#ffa000",
        800: "#ff8f00",
        900: "#ff6f00",
        A100: "#ffe57f",
        A200: "#ffd740",
        A400: "#ffc400",
        A700: "#ffab00",
        darkText: [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, "A100", "A200", "A300", "A400"],
    },
    orange: {
        50: "#fff3e0",
        100: "#ffe0b2",
        200: "#ffcc80",
        300: "#ffb74d",
        400: "#ffa726",
        500: "#ff9800",
        600: "#fb8c00",
        700: "#f57c00",
        800: "#ef6c00",
        900: "#e65100",
        A100: "#ffd180",
        A200: "#ffab40",
        A400: "#ff9100",
        A700: "#ff6d00",
        darkText: [50, 100, 200, 300, 400, 500, 600, 700, "A100", "A200", "A300", "A400"],
    },
    deepOrange: {
        50: "#fbe9e7",
        100: "#ffccbc",
        200: "#ffab91",
        300: "#ff8a65",
        400: "#ff7043",
        500: "#ff5722",
        600: "#f4511e",
        700: "#e64a19",
        800: "#d84315",
        900: "#bf360c",
        A100: "#ff9e80",
        A200: "#ff6e40",
        A400: "#ff3d00",
        A700: "#dd2c00",
        darkText: [50, 100, 200, 300, 400, "A100", "A200"],
    },
    brown: {
        50: "#efebe9",
        100: "#d7ccc8",
        200: "#bcaaa4",
        300: "#a1887f",
        400: "#8d6e63",
        500: "#795548",
        600: "#6d4c41",
        700: "#5d4037",
        800: "#4e342e",
        900: "#3e2723",
        darkText: [50, 100, 200],
    },
    grey: {
        50: '#fafafa',
        100: '#f5f5f5',
        200: '#eeeeee',
        300: '#e0e0e0',
        400: '#bdbdbd',
        500: '#9e9e9e',
        600: '#757575',
        700: '#616161',
        800: '#424242',
        900: '#212121',
        A100: '#d5d5d5',
        A200: '#aaaaaa',
        A400: '#303030',
        A700: '#616161',
        darkText: [50, 100, 200, 300, 400, 500],
    },
    blueGrey: {
        50: "#eceff1",
        100: "#cfd8dc",
        200: "#b0bec5",
        300: "#90a4ae",
        400: "#78909c",
        500: "#607d8b",
        600: "#546e7a",
        700: "#455a64",
        800: "#37474f",
        900: "#263238",
        darkText: [50, 100, 200, 300],
    },
    white: "#fff",
    black: "#000",
};
function isDarkColor(color) {
    var c = color.substring(1); // strip #
    var rgb = parseInt(c, 16); // convert rrggbb to decimal
    var r = (rgb >> 16) & 0xff; // extract red
    var g = (rgb >> 8) & 0xff; // extract green
    var b = (rgb >> 0) & 0xff; // extract blue
    var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709
    return luma < 40;
}
exports.isDarkColor = isDarkColor;

},{}],"WiIp":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
exports.Styles = reactxp_1.Styles;

},{"reactxp":"IpFD"}],"qcR7":[function(require,module,exports) {
var global = arguments[3];

/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    asyncTag = '[object AsyncFunction]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    nullTag = '[object Null]',
    objectTag = '[object Object]',
    proxyTag = '[object Proxy]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    undefinedTag = '[object Undefined]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    symToStringTag = Symbol ? Symbol.toStringTag : undefined;

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeMax = Math.max,
    nativeNow = Date.now;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = merge;

},{}],"bc7y":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var colors_1 = require("./colors");
// tslint:disable-next-line: no-var-requires
var deepmerge = require('lodash.merge');
var lightBackground = {
    statusBar: colors_1.colors.grey[300],
    appBar: colors_1.colors.grey[100],
    default: colors_1.colors.grey[50],
    paper: colors_1.colors.white,
};
var darkBackground = {
    statusBar: colors_1.colors.black,
    appBar: colors_1.colors.grey[900],
    default: colors_1.colors.grey['A400'],
    paper: colors_1.colors.grey[800],
};
var hoverOverlayOpacity = {
    light: 0.04,
    medium: 0.12,
    dark: 0.16,
};
var focusOverlayOpacity = {
    light: 0.12,
    medium: 0.24,
    dark: 0.36,
};
var selectedOverlayOpacity = {
    light: 0.8,
    medium: 0.16,
    dark: 0.24,
};
var activatedOverlayOpacity = {
    light: 0.12,
    medium: 0.24,
    dark: 0.36,
};
var pressedOverlayOpacity = {
    light: 0.16,
    medium: 0.32,
    dark: 0.48,
};
var dragedOverlayOpacity = {
    light: 0.8,
    medium: 0.16,
    dark: 0.32,
};
var defaultTypography = {
    fontFamily: 'Roboto',
    fontSize: 14,
    fontWeightLight: '300',
    fontWeightRegular: '400',
    fontWeightMedium: '500',
};
var defaultPalette = {
    common: {
        black: colors_1.colors.black,
        white: colors_1.colors.white,
    },
    type: 'light',
    primary: {
        light: colors_1.colors.indigo['300'],
        main: colors_1.colors.indigo['500'],
        dark: colors_1.colors.indigo['700'],
        contrastText: colors_1.colors.white,
    },
    secondary: {
        light: colors_1.colors.pink['A200'],
        main: colors_1.colors.pink['A400'],
        dark: colors_1.colors.pink['A700'],
        contrastText: colors_1.colors.white,
    },
    grey: colors_1.colors.grey,
    text: {
        primary: 'rgba(0, 0, 0, 0.87)',
        secondary: 'rgba(0, 0, 0, 0.54)',
        disabled: 'rgba(0, 0, 0, 0.38)',
        hint: 'rgba(0, 0, 0, 0.38)',
    },
    background: lightBackground,
    divider: 'rgba(0, 0, 0, 0.12)',
    modifier: {
        active: 'rgba(0, 0, 0, 0.54)',
        hover: 'rgba(0, 0, 0, 0.08)',
        hoverOpacity: 0.08,
        selected: 'rgba(0, 0, 0, 0.14)',
        disabled: 'rgba(0, 0, 0, 0.26)',
        disabledBackground: 'rgba(0, 0, 0, 0.12)',
    },
    state: {
        hover: hoverOverlayOpacity,
        focus: focusOverlayOpacity,
        selected: selectedOverlayOpacity,
        activated: activatedOverlayOpacity,
        pressed: pressedOverlayOpacity,
        draged: dragedOverlayOpacity,
    },
    contrastThreshold: 3,
    tonalOffset: 0.2,
};
exports.defaultTheme = {
    shape: {
        borderRadius: 4,
    },
    palette: defaultPalette,
    spacing: 8,
    typography: defaultTypography,
    overrides: {},
    business: {
        error: {
            light: colors_1.colors.red['300'],
            main: colors_1.colors.red['500'],
            dark: colors_1.colors.red['700'],
            contrastText: colors_1.colors.white,
        },
        valid: {
            light: colors_1.colors.green['300'],
            main: colors_1.colors.green['500'],
            dark: colors_1.colors.green['700'],
            contrastText: colors_1.colors.white,
        },
        warning: {
            light: colors_1.colors.orange['300'],
            main: colors_1.colors.orange['500'],
            dark: colors_1.colors.orange['700'],
            contrastText: colors_1.colors.white,
        },
    },
};
// As the theme is global, we can prevent a computation for each component
function getTheme(config) {
    return deepmerge(exports.defaultTheme, config); // fixme: why need to force the output type?
}
exports.getTheme = getTheme;
function override(overrides, compName, rule) {
    return overrides && overrides[compName] && overrides[compName][rule]
        ? overrides[compName][rule]
        : undefined;
}
exports.override = override;
function createThemeContext(theme) {
    return React.createContext(theme);
}
exports.createThemeContext = createThemeContext;

},{"react":"HdMw","./colors":"JHJq","lodash.merge":"qcR7"}],"w8BI":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var theme_1 = require("./theme");
exports.ThemeContext = theme_1.createThemeContext(theme_1.defaultTheme);

},{"./theme":"bc7y"}],"RjPi":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ThemeContext_1 = require("./ThemeContext");
exports.withTheme = function (Component) { return function (props) {
    var innerRef = props.innerRef, rest = __rest(props, ["innerRef"]);
    return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) { return React.createElement(Component, __assign({ theme: theme, ref: innerRef }, rest)); }));
}; };

},{"react":"HdMw","./ThemeContext":"w8BI"}],"JvZo":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(require("./colorManipulator"));
__export(require("./colors"));
__export(require("./createStyle"));
__export(require("./theme"));
__export(require("./withTheme"));
__export(require("./ThemeContext"));

},{"./colorManipulator":"uUIW","./colors":"JHJq","./createStyle":"WiIp","./theme":"bc7y","./withTheme":"RjPi","./ThemeContext":"w8BI"}],"WE05":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
function getMaterialOverlayColor(_a) {
    var isOnPaper = _a.isOnPaper, palette = _a.palette, theme = _a.theme;
    return isOnPaper
        ? // The container used the paper background
            palette
                ? theme.palette[palette].main
                : theme.palette.type === 'light'
                    ? '#000'
                    : '#fff'
        : // The primary color is used as the container background
            _1.colorManipulator.getLuminance(theme.palette[palette || 'primary'].main) >=
                0.5
                ? '#000'
                : '#fff';
}
exports.getMaterialOverlayColor = getMaterialOverlayColor;
function getHoverOverlayOpacity(color, theme) {
    var hoverOverlayOpacity = theme.palette.state.hover;
    var overlayLuminance = _1.colorManipulator.getLuminance(color);
    return overlayLuminance < 0.3
        ? hoverOverlayOpacity.dark
        : overlayLuminance < 0.7
            ? hoverOverlayOpacity.medium
            : hoverOverlayOpacity.light;
}
exports.getHoverOverlayOpacity = getHoverOverlayOpacity;

},{".":"JvZo"}],"V9a4":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var Fade = /** @class */ (function (_super) {
    __extends(Fade, _super);
    function Fade(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { isVisible: false };
        _this.animatedOpacity = reactxp_1.Animated.createValue(0);
        var isAnimatedOnMount = props.isAnimatedOnMount, isVisible = props.isVisible;
        _this.duration = props.duration || 250;
        var opacityFrom = !!isAnimatedOnMount
            ? isVisible
                ? 0
                : 1
            : isVisible
                ? 1
                : 0;
        var opacityTo = isAnimatedOnMount
            ? isVisible
                ? 1
                : 0
            : isVisible
                ? 0
                : 1;
        _this.state.isVisible = isVisible;
        _this.animatedOpacity.setValue(opacityFrom);
        _this.animatedStyle = reactxp_1.Styles.createAnimatedViewStyle({
            opacity: _this.animatedOpacity,
        });
        _this.animation = _this.getAnimation(opacityTo);
        return _this;
    }
    Fade.prototype.componentDidMount = function () {
        if (this.props.isAnimatedOnMount) {
            this.animation.start(this.onAnimationEnd.bind(this));
        }
    };
    Fade.prototype.render = function () {
        var isVisible = this.state.isVisible;
        var _a = this.props, children = _a.children, style = _a.style;
        return (React.createElement(reactxp_1.Animated.View, { ignorePointerEvents: true, style: [style, this.animatedStyle] }, isVisible && children));
    };
    Fade.prototype.componentDidUpdate = function (prevProps, _prevState) {
        var _this = this;
        if (this.props.isVisible !== prevProps.isVisible) {
            this.animation.stop();
            this.animation = this.getAnimation(this.props.isVisible ? 1 : 0);
            var childrenShouldBeVisible = this.props.isVisible || (!this.props.isVisible && this.state.isVisible);
            this.setState({
                isVisible: childrenShouldBeVisible,
            }, function () {
                _this.animation.start(_this.onAnimationEnd.bind(_this));
            });
        }
    };
    Fade.prototype.onAnimationEnd = function (_a) {
        var finished = _a.finished;
        if (finished && this.props.onAnimationEnd) {
            this.props.onAnimationEnd();
        }
    };
    Fade.prototype.getAnimation = function (toValue) {
        return reactxp_1.Animated.timing(this.animatedOpacity, {
            toValue: toValue,
            duration: this.duration,
            easing: reactxp_1.Animated.Easing.Linear(),
        });
    };
    return Fade;
}(React.Component));
exports.default = Fade;

},{"react":"HdMw","reactxp":"IpFD"}],"SmEK":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fade_1 = require("./Fade");
exports.Fade = Fade_1.default;

},{"./Fade":"V9a4"}],"Y1BE":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var createStyle_1 = require("../../styles/createStyle");
function nativePaperStyle(theme, style, borderRadius) {
    return {
        root: createStyle_1.Styles.createViewStyle(__assign({ overflow: 'visible' }, (style && style.root))),
        isAndroid: createStyle_1.Styles.createViewStyle({
            borderWidth: 0,
        }),
        nativeShadowContainer: createStyle_1.Styles.createViewStyle({
            overflow: 'visible',
            position: 'absolute',
            right: 0,
            bottom: 0,
            borderRadius: borderRadius,
        }),
        content: createStyle_1.Styles.createViewStyle(__assign({ flex: 1, backgroundColor: theme.palette.background.paper, overflow: 'hidden', borderRadius: borderRadius }, (style && style.content))),
    };
}
exports.nativePaperStyle = nativePaperStyle;
function createWebPaperStyle(theme) {
    return createStyle_1.Styles.createViewStyle({
        backgroundColor: theme.palette.background.paper,
    });
}
exports.createWebPaperStyle = createWebPaperStyle;
// Higly inspired from Material UI
// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/styles/shadows.js
var shadowKeyUmbraOpacity = '0.2';
var shadowKeyPenumbraOpacity = '0.14';
var shadowAmbientShadowOpacity = '0.12';
function createWebElevationShadows() {
    var px = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        px[_i] = arguments[_i];
    }
    return [
        px[0] + "px " + px[1] + "px " + px[2] + "px " + px[3] + "px rgba(0,0,0," + shadowKeyUmbraOpacity + ")",
        px[4] + "px " + px[5] + "px " + px[6] + "px " + px[7] + "px rgba(0,0,0," + shadowKeyPenumbraOpacity + ")",
        px[8] + "px " + px[9] + "px " + px[10] + "px " + px[11] + "px rgba(0,0,0," + shadowAmbientShadowOpacity + ")",
    ].join(',');
}
function createIOSElevationShadows() {
    var px = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        px[_i] = arguments[_i];
    }
    var shadowColor = '#000';
    return {
        shadowColor: shadowColor,
        shadowOffset: {
            width: px[0],
            height: px[1],
        },
        shadowOpacity: Number(shadowKeyUmbraOpacity),
        shadowRadius: px[2],
    };
}
exports.shadows = {
    web: [
        'none',
        createWebElevationShadows(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1),
        createWebElevationShadows(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2),
        createWebElevationShadows(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2),
        createWebElevationShadows(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
        createWebElevationShadows(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
        createWebElevationShadows(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
        createWebElevationShadows(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
        createWebElevationShadows(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
        createWebElevationShadows(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
        createWebElevationShadows(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
        createWebElevationShadows(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
        createWebElevationShadows(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
        createWebElevationShadows(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
        createWebElevationShadows(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
        createWebElevationShadows(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
        createWebElevationShadows(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
        createWebElevationShadows(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
        createWebElevationShadows(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
        createWebElevationShadows(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
        createWebElevationShadows(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
        createWebElevationShadows(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
        createWebElevationShadows(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
        createWebElevationShadows(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
        createWebElevationShadows(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
    ],
    native: [
        createIOSElevationShadows(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1),
        createIOSElevationShadows(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2),
        createIOSElevationShadows(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2),
        createIOSElevationShadows(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
        createIOSElevationShadows(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
        createIOSElevationShadows(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
        createIOSElevationShadows(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
        createIOSElevationShadows(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
        createIOSElevationShadows(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
        createIOSElevationShadows(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
        createIOSElevationShadows(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
        createIOSElevationShadows(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
        createIOSElevationShadows(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
        createIOSElevationShadows(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
        createIOSElevationShadows(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
        createIOSElevationShadows(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
        createIOSElevationShadows(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
        createIOSElevationShadows(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
        createIOSElevationShadows(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
        createIOSElevationShadows(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
        createIOSElevationShadows(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
        createIOSElevationShadows(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
        createIOSElevationShadows(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
        createIOSElevationShadows(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
    ],
};

},{"../../styles/createStyle":"WiIp"}],"PWgE":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var ThemeContext_1 = require("../../styles/ThemeContext");
var view_1 = require("../view");
var style_1 = require("./style");
var Paper = /** @class */ (function (_super) {
    __extends(Paper, _super);
    function Paper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Paper.prototype, "shadow", {
        get: function () {
            return style_1.shadows.web[this.props.elevation || 0];
        },
        enumerable: true,
        configurable: true
    });
    Paper.prototype.componentDidMount = function () {
        if (this.containerRef) {
            var element = react_dom_1.findDOMNode(this.containerRef);
            element.style.boxShadow = this.shadow;
        }
    };
    Paper.prototype.render = function () {
        var _this = this;
        var _a = this.props, _b = _a.style, style = _b === void 0 ? {} : _b, props = __rest(_a, ["style"]);
        return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) {
            var rootStyle = style_1.createWebPaperStyle(theme);
            return (React.createElement(view_1.View, __assign({ ref: function (comp) {
                    _this.containerRef = comp;
                    _this.props.ref && _this.props.ref(comp);
                }, style: [rootStyle, style.root, style.content] }, props)));
        }));
    };
    return Paper;
}(React.Component));
exports.default = Paper;

},{"react":"HdMw","react-dom":"X9zx","../../styles/ThemeContext":"w8BI","../view":"eSvb","./style":"Y1BE"}],"ij1J":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Paper_web_1 = require("./Paper.web");
exports.Paper = Paper_web_1.default;

},{"./Paper.web":"PWgE"}],"FPad":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var createStyle_1 = require("../../styles/createStyle");
exports.containerStyle = {
    root: createStyle_1.Styles.createViewStyle({
        position: 'absolute',
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
    }),
    button: createStyle_1.Styles.createViewStyle({
        margin: 0,
        flex: 1,
    }),
};
exports.rippleStyle = function (_a) {
    var x = _a.x, y = _a.y, radius = _a.radius, backgroundColor = _a.color;
    return {
        ripple: createStyle_1.Styles.createViewStyle({
            position: 'absolute',
            width: radius * 2,
            height: radius * 2,
            left: x,
            top: y,
            backgroundColor: backgroundColor,
            borderRadius: radius,
        }),
    };
};

},{"../../styles/createStyle":"WiIp"}],"E4rD":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var view_1 = require("../view");
var style_1 = require("./style");
var Emitter = /** @class */ (function (_super) {
    __extends(Emitter, _super);
    function Emitter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isUnmounted: false,
            nextKey: 0,
            rect: { width: 0, height: 0, x: 0, y: 0 },
            particlesInfos: [],
        };
        _this.processingOnPressInHandler = false;
        _this.removeQueue = [];
        _this.onPressIn = function (e) {
            // Persist the event until the particle is created.
            ;
            e.persist();
            _this.addParticle(e);
        };
        _this.onPressOut = function () {
            _this.killNextParticle();
        };
        _this.onRef = function (view) {
            _this.containerRef = view;
            _this.props.onRef && _this.props.onRef(_this);
        };
        return _this;
    }
    Emitter.prototype.render = function () {
        var _this = this;
        var Particle = this.props.particle;
        return (React.createElement(view_1.View, { ref: this.onRef, style: style_1.containerStyle.root, onLayout: function () {
                /* https://github.com/facebook/react-native/issues/3282 still needed despit RN effort */
            } },
            React.createElement(reactxp_1.Button, { disableTouchOpacityAnimation: true, onPressIn: this.onPressIn, onPressOut: this.onPressOut, onHoverEnd: this.onPressOut, onContextMenu: this.onPressOut, style: style_1.containerStyle.button }, this.state.particlesInfos.map(function (props) {
                return (React.createElement(Particle, __assign({ emitterLayout: _this.state.rect, key: props.id }, props)));
            }))));
    };
    Emitter.prototype.componentWillUnmount = function () {
        this.setState({ isUnmounted: true });
    };
    Emitter.prototype.addParticle = function (event) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var rect_1, width, height, x, y, touch, clientX, clientY, pageX, pageY, cursorX, cursorY, radiusFrom, posX_1, posY_1, options_1, e_1;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.containerRef)
                            return [2 /*return*/];
                        this.processingOnPressInHandler = true;
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, reactxp_1.UserInterface.measureLayoutRelativeToWindow(this.containerRef)];
                    case 2:
                        rect_1 = _b.sent();
                        width = rect_1.width, height = rect_1.height, x = rect_1.x, y = rect_1.y;
                        touch = (_a = event.nativeEvent.touches) === null || _a === void 0 ? void 0 : _a[0];
                        clientX = touch
                            ? // Webview
                                touch.clientX ||
                                    // RN
                                    touch.locationX
                            : event.clientX;
                        clientY = touch
                            ? // Webview
                                touch.clientY ||
                                    // RN
                                    touch.locationY
                            : event.clientY;
                        pageX = touch ? touch.pageX : event.pageX;
                        pageY = touch ? touch.pageY : event.pageY;
                        if (clientX && clientY && pageX && pageY) {
                            cursorX = Emitter.isWeb
                                ? Math.round(clientX - x)
                                : Math.round(pageX - x);
                            cursorY = Emitter.isWeb
                                ? Math.round(clientY - y)
                                : Math.round(pageY - y);
                            radiusFrom = Math.min(width, height) / 2;
                            posX_1 = cursorX - radiusFrom;
                            posY_1 = cursorY - radiusFrom;
                            options_1 = this.props.options;
                            this.setState(function (state) {
                                return {
                                    nextKey: state.nextKey + 1,
                                    particlesInfos: __spreadArrays([
                                        {
                                            rect: rect_1,
                                            id: state.nextKey,
                                            x: posX_1,
                                            y: posY_1,
                                            isDying: false,
                                            emitterLayout: rect_1,
                                            options: options_1,
                                            onDeath: _this.onParticleDeath.bind(_this),
                                        }
                                    ], state.particlesInfos),
                                };
                            }, function () {
                                // On slow mobile the onPressOut event comes before the onPressIn
                                // because onPressIn is still busy with the layout measurement.
                                // So we buffer all the remove actions to execute until the end of the onPressIn handler execution.
                                _this.removeQueue.forEach(function (remove) { return remove(); });
                                _this.removeQueue = [];
                                _this.processingOnPressInHandler = false;
                            });
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _b.sent();
                        console.warn(e_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Emitter.prototype.killNextParticle = function (cb) {
        var _this = this;
        var action = function () {
            var particlesInfos = _this.state.particlesInfos
                .slice(0)
                .map(function (r, index, particles) {
                // Look if the next particle in the array is already fading or if it the last particle of the array
                // If so, the current particle is the next to fade.
                // If not, don't change.
                return !particles[index + 1] || particles[index + 1].isDying
                    ? __assign(__assign({}, r), { isDying: true }) : r;
            });
            _this.setState({
                particlesInfos: particlesInfos,
            }, cb);
        };
        if (this.processingOnPressInHandler) {
            this.removeQueue.push(action);
        }
        else
            action();
    };
    Emitter.prototype.onParticleDeath = function () {
        if (!this.state.isUnmounted) {
            this.setState({
                particlesInfos: this.state.particlesInfos.slice(0, this.state.particlesInfos.length - 1),
            });
        }
    };
    Emitter.isWeb = reactxp_1.Platform.getType() === 'web';
    return Emitter;
}(React.PureComponent));
exports.default = Emitter;

},{"react":"HdMw","reactxp":"IpFD","../view":"eSvb","./style":"FPad"}],"Fi6M":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var styles_1 = require("../../styles");
var style_1 = require("./style");
var fadeOutDuration = 150;
var scaleDuration = 225;
var easing = reactxp_1.Animated.Easing.CubicBezier(0.4, 0, 0.2, 1);
var Particle = /** @class */ (function (_super) {
    __extends(Particle, _super);
    function Particle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.animatedScale = reactxp_1.Animated.createValue(1);
        _this.runningAnimation = false;
        return _this;
    }
    Particle.prototype.componentWillMount = function () {
        var options = this.props.options;
        var color = options.color || '#000';
        var overlayLuminance = styles_1.colorManipulator.getLuminance(color);
        var pressedOverlayOpacity = options.theme.palette.state.pressed;
        var overlayOpacity = overlayLuminance < 0.3
            ? pressedOverlayOpacity.dark
            : overlayLuminance < 0.7
                ? pressedOverlayOpacity.medium
                : pressedOverlayOpacity.light;
        this.animatedOpacity = reactxp_1.Animated.createValue(overlayOpacity);
        this.animatedStyle = reactxp_1.Styles.createAnimatedViewStyle({
            transform: [{ scale: this.animatedScale }],
            opacity: this.animatedOpacity,
        });
    };
    Particle.prototype.componentDidMount = function () {
        this.runningAnimation = true;
        reactxp_1.Animated.timing(this.animatedScale, {
            toValue: this.radiusTo / this.radiusFrom,
            duration: scaleDuration,
            easing: easing,
        }).start(this.onAnimateRadiusEnd.bind(this));
    };
    Particle.prototype.componentWillReceiveProps = function (newProps) {
        var fading = this.props.isDying;
        if (newProps.isDying !== fading && !this.runningAnimation) {
            this.fadeOut();
        }
    };
    Particle.prototype.render = function () {
        var _a = this.props.emitterLayout, width = _a.width, height = _a.height;
        var radiusFrom = Math.min(width, height) / 2;
        var _b = this.props, options = _b.options, x = _b.x, y = _b.y;
        var color = options.color;
        var styleSheet = style_1.rippleStyle({
            x: x,
            y: y,
            radius: radiusFrom,
            color: color,
        });
        return (React.createElement(reactxp_1.Animated.View, { style: [
                styleSheet.ripple,
                reactxp_1.Styles.createViewStyle({
                    left: x - 5,
                    top: y - 5,
                }, false),
                this.animatedStyle,
            ] }));
    };
    Object.defineProperty(Particle.prototype, "radiusFrom", {
        get: function () {
            var _a = this.props.emitterLayout, width = _a.width, height = _a.height;
            return Math.min(width, height) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Particle.prototype, "radiusTo", {
        get: function () {
            var _a = this.props.emitterLayout, width = _a.width, height = _a.height;
            return Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));
        },
        enumerable: true,
        configurable: true
    });
    Particle.prototype.onAnimateRadiusEnd = function () {
        this.runningAnimation = false;
        if (this.props.isDying) {
            this.fadeOut();
        }
    };
    Particle.prototype.fadeOut = function () {
        if (this.runningAnimation)
            return; // already fading
        this.runningAnimation = true;
        reactxp_1.Animated.timing(this.animatedOpacity, {
            toValue: 0,
            duration: fadeOutDuration,
            easing: reactxp_1.Animated.Easing.Linear(),
        }).start(this.props.onDeath);
    };
    return Particle;
}(React.PureComponent));
exports.default = Particle;

},{"react":"HdMw","reactxp":"IpFD","../../styles":"JvZo","./style":"FPad"}],"C6B3":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ThemeContext_1 = require("../../styles/ThemeContext");
var Emitter_1 = require("./Emitter");
var MDRippleParticle_1 = require("./MDRippleParticle");
exports.default = (function (_a) {
    var onRef = _a.onRef, props = __rest(_a, ["onRef"]);
    return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) { return (React.createElement(Emitter_1.default, { particle: MDRippleParticle_1.default, onRef: onRef, options: __assign({ theme: theme }, props) })); }));
});

},{"react":"HdMw","../../styles/ThemeContext":"w8BI","./Emitter":"E4rD","./MDRippleParticle":"Fi6M"}],"OnDe":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Emitter_1 = require("./Emitter");
exports.Emitter = Emitter_1.default;
var Ripple_1 = require("./Ripple");
exports.Ripple = Ripple_1.default;

},{"./Emitter":"E4rD","./Ripple":"C6B3"}],"olNF":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var styles_1 = require("../../styles");
var ThemeContext_1 = require("../../styles/ThemeContext");
exports.TextComp = function (_a) {
    var children = _a.children, inherited = _a.inherited, style = _a.style, props = __rest(_a, ["children", "inherited", "style"]);
    return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) { return (React.createElement(reactxp_1.Text, __assign({ style: [
            !inherited
                ? styles_1.Styles.createTextStyle({
                    fontFamily: theme.typography.fontFamily,
                    fontSize: theme.typography.fontSize,
                    fontWeight: theme.typography.fontWeightLight,
                    color: theme.palette.text.primary,
                })
                : {},
            style,
        ] }, props), children)); }));
};
exports.default = exports.TextComp;

},{"react":"HdMw","reactxp":"IpFD","../../styles":"JvZo","../../styles/ThemeContext":"w8BI"}],"kBAY":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Text_1 = require("./Text");
exports.Text = Text_1.default;

},{"./Text":"olNF"}],"FetR":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
var styles_1 = require("../../styles");
var helpers_1 = require("../../styles/helpers");
function default_1(_a) {
    var theme = _a.theme, _b = _a.palette, palette = _b === void 0 ? 'primary' : _b, _c = _a.variant, variant = _c === void 0 ? 'contained' : _c, _d = _a.style, style = _d === void 0 ? {} : _d, overlayColor = _a.overlayColor, options = _a.options;
    var height = options && options.isDense ? 32 : 36;
    var paddingVertical = options && options.isDense ? 9 : 8.5;
    var fontSize = options && options.isDense ? 14 : 16;
    var lineHeight = options && options.isDense ? 14 : 19;
    var iconSize = options && options.isDense ? 14 : 19;
    var tabColor = options && options.isDisabled
        ? theme.palette.text.disabled
        : variant === 'contained'
            ? theme.palette[palette].contrastText
            : theme.palette[palette].main;
    var backgroundColor = variant === 'contained'
        ? options && options.isDisabled
            ? styles_1.colorManipulator.fade(theme.palette.text.disabled, 0.2)
            : theme.palette[palette].main
        : 'transparent';
    var borderColor = variant === 'outlined' ? theme.palette.grey['500'] : undefined;
    var borderWidth = variant === 'outlined' ? 1 : undefined;
    var overlayOpacity = helpers_1.getHoverOverlayOpacity(overlayColor, theme);
    return {
        root: reactxp_1.Styles.createViewStyle(__assign(__assign(__assign({ height: height, borderRadius: theme.shape.borderRadius }, style.root), styles_1.override(theme.overrides, 'button', 'root')), (!!options && options.hasIcon
            ? styles_1.override(theme.overrides, 'button', 'hasIcon')
            : style.hasIcon)), false),
        content: reactxp_1.Styles.createTextStyle(__assign({ borderRadius: theme.shape.borderRadius, borderWidth: borderWidth,
            backgroundColor: backgroundColor,
            borderColor: borderColor, paddingHorizontal: 16, paddingVertical: paddingVertical, flexDirection: 'row', justifyContent: 'center' }, style.content), false),
        icon: reactxp_1.Styles.createTextStyle(__assign(__assign({ position: 'relative', justifyContent: 'center', fontSize: iconSize, textAlign: 'center', paddingRight: 8, color: tabColor, alignSelf: 'center' }, style.icon), styles_1.override(theme.overrides, 'button', 'icon')), false),
        label: reactxp_1.Styles.createTextStyle(__assign(__assign({ color: tabColor, fontSize: fontSize,
            lineHeight: lineHeight, alignSelf: 'center' }, style.label), styles_1.override(theme.overrides, 'button', 'label')), false),
        overlay: reactxp_1.Styles.createViewStyle(__assign(__assign({ flex: 1, backgroundColor: overlayColor, opacity: overlayOpacity }, style.overlay), styles_1.override(theme.overrides, 'button', 'overlay')), false),
        fitParent: reactxp_1.Styles.createViewStyle({
            position: 'absolute',
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
        }),
        button: reactxp_1.Styles.createViewStyle({
            flex: 1,
        }),
    };
}
exports.default = default_1;
function createCircleButtonStyle(_a) {
    var style = _a.style, radius = _a.radius;
    return {
        root: reactxp_1.Styles.createViewStyle(__assign({ height: radius * 2, width: radius * 2, borderRadius: radius * 2 }, style.root), false),
        content: reactxp_1.Styles.createTextStyle(__assign({}, style.content)),
        icon: reactxp_1.Styles.createTextStyle(__assign({ paddingRight: 0 }, style.icon)),
        overlay: reactxp_1.Styles.createViewStyle(__assign({ borderRadius: radius * 2 }, style.overlay)),
    };
}
exports.createCircleButtonStyle = createCircleButtonStyle;

},{"reactxp":"IpFD","../../styles":"JvZo","../../styles/helpers":"WE05"}],"xlZo":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var helpers_1 = require("../../styles/helpers");
var ThemeContext_1 = require("../../styles/ThemeContext");
var fade_1 = require("../fade");
var paper_1 = require("../paper");
var ripple_1 = require("../ripple");
var text_1 = require("../text");
var view_1 = require("../view");
var style_1 = require("./style");
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isHover: false,
        };
        _this.onHoverStart = function (e) {
            var onHoverStart = _this.props.onHoverStart;
            _this.setState({ isHover: true });
            onHoverStart && onHoverStart(e);
        };
        _this.onHoverEnd = function (e) {
            var onHoverEnd = _this.props.onHoverEnd;
            // When a touch is released outside we need to trigger the onPressOut here.
            _this.ripple && _this.ripple.onPressOut();
            _this.setState({ isHover: false });
            onHoverEnd && onHoverEnd(e);
        };
        _this.onLongPress = function (e) {
            var onLongPress = _this.props.onLongPress;
            _this.ripple && _this.ripple.onPressOut();
            onLongPress && onLongPress(e);
        };
        _this.onPress = function (e) {
            var onPress = _this.props.onPress;
            _this.ripple && _this.ripple.onPressOut();
            onPress && onPress(e);
        };
        _this.onPressIn = function (e) {
            var onPressIn = _this.props.onPressIn;
            _this.ripple && _this.ripple.onPressIn(e);
            onPressIn && onPressIn(e);
        };
        _this.onPressOut = function (e) {
            var onPressOut = _this.props.onPressOut;
            _this.ripple && _this.ripple.onPressOut();
            onPressOut && onPressOut(e);
        };
        return _this;
    }
    Button.prototype.componentDidMount = function () {
        if (this.props.onRef) {
            this.props.onRef(this);
        }
    };
    Button.prototype.render = function () {
        var _this = this;
        return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) {
            var _a = _this.props, label = _a.label, _b = _a.elevation, elevation = _b === void 0 ? 0 : _b, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, palette = _a.palette, _d = _a.variant, variant = _d === void 0 ? 'contained' : _d, _e = _a.isDense, isDense = _e === void 0 ? false : _e, iconSlot = _a.iconSlot, backgroundSlot = _a.backgroundSlot, badgeSlot = _a.badgeSlot, nativeRef = _a.nativeRef, onLayout = _a.onLayout, style = _a.style;
            var borderRadius = (style && style.root && style.root['borderRadius']) || 0;
            var isOnPaper = variant !== 'contained';
            var overlayColor = helpers_1.getMaterialOverlayColor({
                isOnPaper: isOnPaper,
                palette: palette,
                theme: theme,
            });
            var styles = style_1.default({
                theme: theme,
                palette: palette,
                style: style,
                variant: variant,
                overlayColor: overlayColor,
                options: {
                    isDense: isDense,
                    isDisabled: isDisabled,
                    hasIcon: !!iconSlot,
                },
            });
            return (React.createElement(paper_1.Paper, { elevation: elevation, style: {
                    root: __assign(__assign({}, styles.root), { borderRadius: borderRadius }),
                    content: __assign(__assign({}, styles.content), { borderRadius: borderRadius }),
                } },
                backgroundSlot && backgroundSlot(theme),
                iconSlot && iconSlot(styles.icon),
                label && React.createElement(text_1.Text, { style: styles.label }, label),
                badgeSlot,
                !isDisabled && (React.createElement(fade_1.Fade, { style: styles.fitParent, isVisible: _this.state.isHover, duration: 75 },
                    React.createElement(view_1.View, { style: styles.overlay }))),
                !isDisabled && (React.createElement(ripple_1.Ripple, { onRef: function (emitter) {
                        _this.ripple = emitter;
                    }, color: overlayColor })),
                React.createElement(view_1.View, { style: styles.fitParent, onLayout: onLayout },
                    React.createElement(reactxp_1.Button, { ref: nativeRef, disabled: isDisabled, style: styles.button, delayLongPress: _this.props.delayLongPress, onPress: _this.onPress, onPressIn: _this.onPressIn, onPressOut: _this.onPressOut, onHoverStart: _this.onHoverStart, onHoverEnd: _this.onHoverEnd, onLongPress: _this.onLongPress }))));
        }));
    };
    return Button;
}(React.PureComponent));
exports.default = Button;

},{"react":"HdMw","reactxp":"IpFD","../../styles/helpers":"WE05","../../styles/ThemeContext":"w8BI","../fade":"SmEK","../paper":"ij1J","../ripple":"OnDe","../text":"kBAY","../view":"eSvb","./style":"FetR"}],"soUz":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Button_1 = require("./Button");
var style_1 = require("./style");
exports.default = React.forwardRef(function (_a, ref) {
    var _b = _a.style, style = _b === void 0 ? {} : _b, _c = _a.radius, radius = _c === void 0 ? 32 : _c, props = __rest(_a, ["style", "radius"]);
    var circleButtonStyle = style_1.createCircleButtonStyle({
        style: style,
        radius: radius,
    });
    return (React.createElement(Button_1.default, __assign({ style: circleButtonStyle }, props, { nativeRef: ref })));
});

},{"react":"HdMw","./Button":"xlZo","./style":"FetR"}],"loLP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Button_1 = require("./Button");
exports.Button = Button_1.default;
var CircleButton_1 = require("./CircleButton");
exports.CircleButton = CircleButton_1.default;

},{"./Button":"xlZo","./CircleButton":"soUz"}],"tO1n":[function(require,module,exports) {
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.noop = function () { return null; };
function isTouch(e) {
    return 'touches' in e || 'touches' in e.nativeEvent;
}
exports.isTouch = isTouch;
function debounce(func, waitMilliseconds, isImmediate) {
    if (waitMilliseconds === void 0) { waitMilliseconds = 50; }
    var timeoutId;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        // tslint:disable-next-line: no-this-assignment
        var context = this;
        var doLater = function () {
            timeoutId = undefined;
            if (!isImmediate) {
                func.apply(context, args);
            }
        };
        var shouldCallNow = isImmediate && timeoutId === undefined;
        if (timeoutId !== undefined) {
            clearTimeout(timeoutId);
        }
        timeoutId = setTimeout(doLater, waitMilliseconds);
        if (shouldCallNow) {
            func.apply(context, args);
        }
    };
}
exports.debounce = debounce;
function recall(func, computeArg, timeout) {
    if (timeout === void 0) { timeout = 16; }
    var timeoutId;
    var iteration = 0;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        // tslint:disable-next-line: no-this-assignment
        var context = this;
        // The function has already been launched, it is a recall
        if (timeoutId) {
            clearTimeout(timeoutId);
            iteration++;
        }
        // (Re)launch the timeout
        timeoutId = setTimeout(function () {
            timeoutId = undefined;
            iteration = 0;
        }, timeout);
        // Compute the new arg with the current iteration
        var newArg = computeArg(iteration, args);
        // Execute the function
        func.apply(context, newArg);
    };
}
exports.recall = recall;
/**
 * This makes a shallow comparaison of the state and other props than style and a deep comparaison of the style prop.
 */
function shouldComponentUpdate(nextProps, nextState, currentProps, currentState) {
    // Extract the style for a deeper comparaison.
    var nextStyle = nextProps.style, otherProps = __rest(nextProps, ["style"]);
    return (
    // Did props change
    Object.keys(otherProps).some(function (key) { return otherProps[key] !== currentProps[key]; }) ||
        // if the style is removed
        (nextStyle === undefined && currentProps.style !== undefined) ||
        // or the style is added
        (nextStyle !== undefined && currentProps.style === undefined) ||
        // or the style is changed
        (nextStyle !== undefined &&
            currentProps.style !== undefined &&
            Object.keys(nextStyle).some(function (key) {
                return typeof nextStyle[key] === 'object'
                    ? Object.keys(nextStyle[key]).some(function (k) { return nextStyle[k] !== currentProps.style[k]; })
                    : nextStyle[key] !== currentProps.style[key];
            })) ||
        // Did the state change
        Object.keys(nextState).some(function (key) { return nextState[key] !== currentState[key]; }));
}
exports.shouldComponentUpdate = shouldComponentUpdate;

},{}],"QhBq":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ROOT_ID = 'root';

},{}],"vMTK":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var helpers_1 = require("../../helpers");
var type_1 = require("./type");
var FoldableTree = /** @class */ (function (_super) {
    __extends(FoldableTree, _super);
    function FoldableTree() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isFullOpen: false,
            isPartialOpen: false,
        };
        _this.childRefs = [];
        /**
         * Move this child away from its parent
         */
        _this.show = function (callback) {
            _this.viewRef.show(callback);
        };
        /**
         * Hide this child behind its parent.
         * This function is recursive and will hide all open child first.
         */
        _this.hide = function (callback, ancestorId) {
            if (ancestorId === void 0) { ancestorId = _this.id; }
            if (_this.animation) {
                _this.animation.stop();
            }
            if (_this.childRefs.length > 0) {
                _this.childRefs.map(function (node) { return node.hide(helpers_1.noop, ancestorId); });
            }
            if (_this.id === ancestorId) {
                _this.viewRef.hide(callback);
            }
            else {
                _this.viewRef.hide(helpers_1.noop);
            }
        };
        /**
         * Hide chldren but keep them in the virtual dom until the animation is finished
         */
        _this.hideChildren = function () {
            requestAnimationFrame(function () {
                _this.childRefs.map(function (child, index, _a) {
                    var length = _a.length;
                    var isLast = index === length - 1;
                    child.hide(function () {
                        if (isLast) {
                            _this.childRefs = [];
                            _this.setState({
                                isFullOpen: false,
                                isPartialOpen: false,
                                selectedChildNodeId: undefined,
                            });
                        }
                    });
                });
            });
        };
        _this.onPress = function (params) {
            var _a, _b;
            var isCancel = ((_a = params) === null || _a === void 0 ? void 0 : _a.isCancel) || false;
            var isLongPress = ((_b = params) === null || _b === void 0 ? void 0 : _b.isLongPress) || false;
            var _c = _this.props.contextProps, isDisabled = _c.isDisabled, onCancel = _c.onCancel;
            var _d = _this.props.nodeProps, _e = _d.id, id = _e === void 0 ? 'root' : _e, children = _d.nodeChildren;
            var _f = _this.props.subTreeProps || {}, _g = _f.onSelectChildLeaf, onSelectChildLeaf = _g === void 0 ? helpers_1.noop : _g, _h = _f.onSelectChildNode, onSelectChildNode = _h === void 0 ? helpers_1.noop : _h;
            if (isDisabled)
                return;
            // It is a node
            if (children && children.length) {
                // It is a final node which shows all its available children
                if (_this.state.isFullOpen) {
                    if (_this.isRoot && isCancel) {
                        onCancel && onCancel();
                    }
                    // The node were reselected, close it.
                    if (_this.state.selectedChildNodeId === undefined) {
                        _this.hideChildren();
                    }
                    // It is an intermediate node part of an active path showing the selected child
                }
                else if (_this.state.isPartialOpen) {
                    // The user clicked on an intermediate opened node. Close its grand child and re show.
                    if (_this.state.selectedChildNodeId !== undefined) {
                        if (isLongPress) {
                            _this.reopenIntermediateNode();
                        }
                        else {
                            _this.closeIntermediateNode();
                        }
                    }
                }
                // It is a closed node:
                // 1- Open it.
                // 2- Trigger the parent handler
                else {
                    /* 1 */
                    _this.displayChildren();
                    /* 2 */
                    onSelectChildNode(id, _this.displayChildren);
                }
            }
            // It is a leaf
            else {
                onSelectChildLeaf(id, _this.path);
                _this.hideChildren();
            }
        };
        _this.displayChildren = function () {
            _this.setState({ isFullOpen: true });
        };
        _this.closeUnselectedChildren = function (selectedChildNodeId) {
            requestAnimationFrame(function () {
                _this.childRefs
                    .filter(function (_a) {
                    var id = _a.id;
                    return id !== selectedChildNodeId;
                })
                    .map(function (child, index, _a) {
                    var length = _a.length;
                    var isLast = index === length - 1;
                    child.hide(function () {
                        // remove the hidden child from the refs
                        if (isLast) {
                            _this.childRefs = _this.childRefs.filter(function (_a) {
                                var id = _a.id;
                                return id === selectedChildNodeId;
                            });
                            _this.setState({
                                isFullOpen: false,
                                isPartialOpen: true,
                            });
                        }
                    });
                });
            });
        };
        _this.closeIntermediateNode = function () {
            _this.childRefs.map(function (child, index, _a) {
                var length = _a.length;
                var isLast = index === length - 1;
                child.hide(function () {
                    // remove the closed hidden from the refs
                    if (isLast) {
                        _this.childRefs = [];
                        _this.setState({
                            isPartialOpen: false,
                            selectedChildNodeId: undefined,
                        }, function () {
                            _this.props.subTreeProps &&
                                _this.props.subTreeProps.onSelectChildNode(_this.id, helpers_1.noop);
                        });
                    }
                });
            });
        };
        _this.reopenIntermediateNode = function () {
            _this.childRefs.map(function (child) {
                child.hideChildren();
                _this.setState({ isFullOpen: true, selectedChildNodeId: undefined }, function () {
                    _this.props.subTreeProps &&
                        _this.props.subTreeProps.onSelectChildNode(_this.id, helpers_1.noop);
                });
            });
        };
        /**
         * Handler of the parent when an node is selected:
         * 1- Close the others children
         * 2- Update the active child node id
         */
        _this.onSelectChildNode = function (selectedChildNodeId) {
            var _a = _this.props.nodeProps.nodeChildren, children = _a === void 0 ? [] : _a;
            /* 1 */
            // @todo make a props to disable this behavior.
            if (children.some(function (_a) {
                var id = _a.id;
                return id === selectedChildNodeId;
            })) {
                _this.closeUnselectedChildren(selectedChildNodeId);
            }
            /* 2 */
            _this.setState({ selectedChildNodeId: selectedChildNodeId });
        };
        /**
         * Behavior of the parent when a child is selected
         * 1- recursively call the ancestor handler until reach the root
         * 2- call the root handler
         * 3- close the entire tree
         */
        _this.onSelectChildLeaf = function (selectedChildNodeId, path) {
            var onSelect = _this.props.contextProps.onSelect;
            var _a = (_this.props.subTreeProps || {}).onSelectChildLeaf, onSelectChildLeaf = _a === void 0 ? helpers_1.noop : _a;
            if (!_this.isRoot) {
                /* 1 */
                // Call ancestor handler
                onSelectChildLeaf(selectedChildNodeId, path);
            }
            else {
                /* 2 */
                // Root reached
                onSelect && onSelect(selectedChildNodeId, path);
                /* 3 */
                _this.hideChildren();
            }
        };
        return _this;
    }
    Object.defineProperty(FoldableTree.prototype, "isRoot", {
        get: function () {
            return this.id === type_1.ROOT_ID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FoldableTree.prototype, "path", {
        get: function () {
            var parentPath = this.props.subTreeProps
                ? this.props.subTreeProps.parentPath
                : [];
            return __spreadArrays(parentPath, [this.id]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FoldableTree.prototype, "id", {
        get: function () {
            return this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FoldableTree.prototype, "isOpen", {
        get: function () {
            return this.state.isFullOpen || this.state.isPartialOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FoldableTree.prototype, "isFullOpen", {
        get: function () {
            return this.state.isFullOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FoldableTree.prototype, "isPartialOpen", {
        get: function () {
            return this.state.isPartialOpen;
        },
        enumerable: true,
        configurable: true
    });
    FoldableTree.prototype.componentDidMount = function () {
        var _a;
        var subTreeProps = this.props.subTreeProps;
        if (!this.isRoot) {
            (_a = subTreeProps) === null || _a === void 0 ? void 0 : _a.onRef(this);
        }
        // Open after the mount if needed
        if (this.isRoot && this.props.isOpen && !this.state.isFullOpen) {
            this.onPress();
        }
    };
    FoldableTree.prototype.render = function () {
        var _this = this;
        var _a = this.state, isPartialOpen = _a.isPartialOpen, isFullOpen = _a.isFullOpen, selectedChildNodeId = _a.selectedChildNodeId;
        var _b = this.props, contextProps = _b.contextProps, nodeProps = _b.nodeProps;
        var subTreeProps = {
            parentPath: this.path,
            onSelectChildNode: this.onSelectChildNode,
            onSelectChildLeaf: this.onSelectChildLeaf,
            onRef: function (child) {
                _this.childRefs.push(child);
            },
        };
        return contextProps.renderNode({
            isFullOpen: isFullOpen,
            isPartialOpen: isPartialOpen,
            selectedChildNodeId: selectedChildNodeId,
            contextProps: contextProps,
            path: this.path,
            subTreeProps: subTreeProps,
            nodeProps: nodeProps,
            onViewRef: function (node) { return (_this.viewRef = node); },
            onPress: this.onPress,
        });
    };
    FoldableTree.prototype.componentDidUpdate = function (prevProps, prevState) {
        var _a = this.props.contextProps, onPostClose = _a.onPostClose, onPreOpen = _a.onPreOpen;
        // A node will be open (animation did not start yet)
        if (prevState.isFullOpen === false && this.state.isFullOpen === true) {
            onPreOpen && onPreOpen(this.id);
        }
        // A node did close (animation just finished)
        if ((prevState.isFullOpen === true && this.state.isFullOpen === false) ||
            (prevState.isPartialOpen === true && this.state.isPartialOpen === false)) {
            onPostClose && onPostClose(this.id);
        }
        // Parent ask to open the root
        if (this.isRoot &&
            this.props.isOpen !== prevProps.isOpen &&
            this.props.isOpen &&
            !this.state.isFullOpen) {
            this.onPress();
        }
    };
    FoldableTree.prototype.open = function () {
        throw new Error('Method not implemented');
    };
    FoldableTree.prototype.close = function () {
        throw new Error('Method not implemented');
    };
    FoldableTree.prototype.reopen = function () {
        throw new Error('Method not implemented');
    };
    FoldableTree.prototype.cancel = function () {
        throw new Error('Method not implemented');
    };
    return FoldableTree;
}(React.PureComponent));
exports.default = FoldableTree;

},{"react":"HdMw","../../helpers":"tO1n","./type":"QhBq"}],"koLg":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var RecursiveFoldableTree_1 = require("./RecursiveFoldableTree");
exports.FoldableTree = RecursiveFoldableTree_1.default;
__export(require("./type"));

},{"./RecursiveFoldableTree":"vMTK","./type":"QhBq"}],"ocDT":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var animated_1 = require("../animated");
exports.getInitialAnimatedValues = function (_a) {
    var isRoot = _a.isRoot;
    return ({
        animatedTranslateX: new animated_1.Animated.Value(0),
        animatedTranslateY: new animated_1.Animated.Value(0),
        animatedOpacity: new animated_1.Animated.Value(Number(isRoot)),
        animatedScale: new animated_1.Animated.Value(1),
    });
};
function getPosition(_a) {
    var optionSeparationAngle = _a.optionSeparationAngle, spreadRadius = _a.spreadRadius, spreadOrientation = _a.spreadOrientation, siblingNumber = _a.siblingNumber, index = _a.index;
    var spreadAngle = optionSeparationAngle * (siblingNumber - 1); // degree angle on which the options are distributed
    return {
        x: Math.cos(((spreadOrientation - spreadAngle / 2 + optionSeparationAngle * index) *
            Math.PI) /
            180) * spreadRadius,
        y: Math.sin(((spreadOrientation - spreadAngle / 2 + optionSeparationAngle * index) *
            Math.PI) /
            180) * spreadRadius,
    };
}
exports.getPosition = getPosition;
/**
 * Return an orientation in degrees so the spread won't overflow the parent container.
 */
function getSpreadOrientation(_a) {
    var localPosition = _a.localPosition, radius = _a.radius, nodeLayout = _a.nodeLayout, parentDimension = _a.parentDimension;
    var isOverflowLeft = localPosition.x - radius < 0;
    var isOverflowRight = localPosition.x + radius + nodeLayout.width > parentDimension.width;
    var isOverflowTop = localPosition.y - radius < 0;
    var isOverflowBottom = localPosition.y + radius + nodeLayout.height > parentDimension.height;
    if (!isOverflowTop &&
        !isOverflowRight &&
        !isOverflowBottom &&
        !isOverflowLeft) {
        return 0;
    }
    return isOverflowRight
        ? 180 + (isOverflowTop ? -45 : 45)
        : isOverflowTop
            ? 45
            : -45;
}
exports.getSpreadOrientation = getSpreadOrientation;

},{"../animated":"lEUm"}],"wIIx":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var styles_1 = require("../../styles");
function createFabStyle(_a) {
    var isRoot = _a.isRoot, localPosition = _a.localPosition, _b = _a.style, style = _b === void 0 ? {} : _b;
    var rootPosition = isRoot
        ? {
            left: localPosition.x,
            top: localPosition.y,
        }
        : undefined;
    return {
        root: styles_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', overflow: 'visible' }, style.root), rootPosition), false),
        animatedViewToggle: styles_1.Styles.createViewStyle({
            position: 'absolute',
            overflow: 'visible',
        }),
        animatedViewHover: styles_1.Styles.createViewStyle({
            position: 'absolute',
            overflow: 'visible',
        }),
        buttonContainer: styles_1.Styles.createViewStyle({
            position: 'absolute',
            alignSelf: 'auto',
        }),
    };
}
exports.createFabStyle = createFabStyle;

},{"../../styles":"JvZo"}],"I9AI":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var helpers_1 = require("../../helpers");
var styles_1 = require("../../styles");
var animated_1 = require("../animated");
var foldableTree_1 = require("../foldableTree");
var business_1 = require("./business");
var styles_2 = require("./styles");
var NodeView = /** @class */ (function (_super) {
    __extends(NodeView, _super);
    function NodeView(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            width: 0,
            height: 0,
        };
        _this.animatedProximityValues = {
            translateX: new animated_1.Animated.Value(0),
            translateY: new animated_1.Animated.Value(0),
            scale: new animated_1.Animated.Value(1),
        };
        _this.show = function (callback) {
            if (_this.animation) {
                _this.animation.stop();
            }
            _this.animation = animated_1.Animated.parallel([
                animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateX, {
                    toValue: _this.props.nodeProps.positionRelativeToParentNode.x,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateY, {
                    toValue: _this.props.nodeProps.positionRelativeToParentNode.y,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedOpacity, {
                    toValue: 1,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedScale, {
                    toValue: 1,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
            ]);
            _this.animation.start(callback);
        };
        _this.hide = function (callback) {
            _this.animation = animated_1.Animated.parallel([
                animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateX, {
                    toValue: 0,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateY, {
                    toValue: 0,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedOpacity, {
                    toValue: 0,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
                animated_1.Animated.timing(_this.animatedToggleValues.animatedScale, {
                    toValue: 1,
                    duration: _this.props.nodeProps.nodeOpeningDuration,
                    easing: animated_1.Animated.Easing.InOut(),
                    useNativeDriver: true,
                }),
            ]);
            _this.animation.start(callback);
        };
        _this.onNodeLayout = function (layout) {
            _this.setButtonLayoutRelativeToContainer(layout);
            _this.props.nodeProps.onNodeLayout(_this, _this.buttonLayoutRelativeToContainer);
        };
        _this.onPress = function () {
            _this.animateScaleDown();
            _this.props.onPress();
        };
        _this.onHoverStart = function () {
            // Wait for the node to be displayed.
            // Not for disabled node.
            _this.props.contextProps.onEnter && _this.props.contextProps.onEnter(_this.id);
            _this.animateScaleUp();
        };
        _this.onHoverEnd = function () {
            // Wait for the node to be displayed.
            // Not for touch event.
            // Not for disabled node.
            _this.props.contextProps.onExit && _this.props.contextProps.onExit(_this.id);
            _this.animateScaleDown();
        };
        _this.setButtonLayoutRelativeToContainer = function (layout) {
            var _a = _this.props.nodeProps, positionRelativeToParentNode = _a.positionRelativeToParentNode, nodeParentAbsolutePosition = _a.nodeParentAbsolutePosition;
            _this.buttonLayoutRelativeToContainer = {
                x: (nodeParentAbsolutePosition.x || 0) + positionRelativeToParentNode.x,
                y: (nodeParentAbsolutePosition.y || 0) + positionRelativeToParentNode.y,
                width: layout.width,
                height: layout.height,
            };
        };
        // Init animated values
        _this.animatedToggleValues = business_1.getInitialAnimatedValues({
            isRoot: _this.props.nodeProps.id === foldableTree_1.ROOT_ID,
        });
        return _this;
    }
    Object.defineProperty(NodeView.prototype, "id", {
        get: function () {
            return this.props.nodeProps.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "isRoot", {
        get: function () {
            return this.props.nodeProps.id === foldableTree_1.ROOT_ID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "localPosition", {
        get: function () {
            return this.props.nodeProps.positionRelativeToParentNode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "nodeData", {
        get: function () {
            return this.props.nodeProps.nodeData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "hasChildren", {
        get: function () {
            return !!this.props.nodeProps.nodeChildren.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "isOpen", {
        get: function () {
            return this.props.isFullOpen || this.props.isPartialOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "isFullOpen", {
        get: function () {
            return this.props.isFullOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "isPartialOpen", {
        get: function () {
            return this.props.isPartialOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "path", {
        get: function () {
            return this.props.path;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NodeView.prototype, "spreadOrientation", {
        get: function () {
            var _a = this.props.nodeProps, rootSpreadOrientation = _a.rootSpreadOrientation, spreadRadius = _a.spreadRadius;
            if (this.isRoot && rootSpreadOrientation) {
                return rootSpreadOrientation;
            }
            if (!this.buttonLayoutRelativeToContainer) {
                return 0;
            }
            // The button position into the page
            // If the node is still closed, add the final position offset.
            var openedPositionRelativeToPage = {
                x: this.buttonLayoutRelativeToContainer.x,
                y: this.buttonLayoutRelativeToContainer.y,
            };
            return business_1.getSpreadOrientation({
                localPosition: openedPositionRelativeToPage,
                radius: spreadRadius,
                nodeLayout: __assign({ x: 0, y: 0 }, this.buttonLayoutRelativeToContainer),
                parentDimension: reactxp_1.UserInterface.measureWindow(),
            });
        },
        enumerable: true,
        configurable: true
    });
    NodeView.prototype.setDistanceFromPointer = function (distance) {
        // Scale only leafs
        if (!this.hasChildren) {
            onHoverFeedback({
                animatedValues: this.animatedProximityValues,
                localPosition: this.localPosition,
                distanceFromChildCenter: distance,
            });
        }
    };
    NodeView.prototype.open = function () {
        if (!this.isOpen) {
            this.props.onPress();
        }
    };
    NodeView.prototype.close = function () {
        if (this.isOpen) {
            this.props.onPress();
        }
    };
    NodeView.prototype.reopen = function () {
        this.props.onPress({ isLongPress: true });
    };
    NodeView.prototype.cancel = function () {
        this.props.onPress({ isCancel: true });
    };
    NodeView.prototype.hideChildren = function () {
        throw Error('Method not implemented');
    };
    NodeView.prototype.componentDidMount = function () {
        var onViewRef = this.props.onViewRef;
        if (!this.isRoot) {
            this.show(helpers_1.noop);
        }
        onViewRef && onViewRef(this);
    };
    NodeView.prototype.componentWillUnmount = function () {
        var _a = this.props.nodeProps, onUnmount = _a.onUnmount, id = _a.id;
        onUnmount && onUnmount(id);
    };
    NodeView.prototype.render = function () {
        var _this = this;
        var _a = this.props, contextProps = _a.contextProps, _b = _a.nodeProps, nodeChildren = _b.nodeChildren, nodeLocalPosition = _b.positionRelativeToParentNode, nodeOpeningDuration = _b.nodeOpeningDuration, nodeParentAbsolutePosition = _b.nodeParentAbsolutePosition, optionSeparationAngle = _b.optionSeparationAngle, spreadRadius = _b.spreadRadius, onNodeLayout = _b.onNodeLayout, subTreeProps = _a.subTreeProps, isFullOpen = _a.isFullOpen, selectedChildNodeId = _a.selectedChildNodeId, nodeProps = _a.nodeProps;
        var _c = this.props.contextProps.style, style = _c === void 0 ? {} : _c;
        var fabStyle = styles_2.createFabStyle(__assign({ isRoot: this.isRoot, localPosition: nodeProps.positionRelativeToParentNode, style: style }, this.state));
        var animatedStyles = {
            toggle: styles_1.Styles.createAnimatedViewStyle({
                opacity: this.animatedToggleValues.animatedOpacity,
                transform: [
                    { translateX: this.animatedToggleValues.animatedTranslateX },
                    { translateY: this.animatedToggleValues.animatedTranslateY },
                    { scale: this.animatedToggleValues.animatedScale },
                ],
            }),
            hover: styles_1.Styles.createAnimatedViewStyle({
                transform: [
                    { translateX: this.animatedProximityValues.translateX },
                    { translateY: this.animatedProximityValues.translateY },
                    { scale: this.animatedProximityValues.scale },
                ],
            }),
        };
        var children = renderChildren({
            contextProps: contextProps,
            isFullOpen: isFullOpen,
            nodeChildren: nodeChildren,
            nodeLocalPosition: nodeLocalPosition,
            nodeOpeningDuration: nodeOpeningDuration,
            nodeParentAbsolutePosition: nodeParentAbsolutePosition,
            onNodeLayout: onNodeLayout,
            optionSeparationAngle: optionSeparationAngle,
            spreadRadius: spreadRadius,
            selectedChildNodeId: selectedChildNodeId,
            spreadOrientation: this.spreadOrientation,
            subTreeProps: subTreeProps,
            onUnmount: function (childId) {
                _this.props.nodeProps.onUnmount &&
                    _this.props.nodeProps.onUnmount(childId);
            },
        });
        var ButtonContainer = (React.createElement(animated_1.Animated.View, { style: [
                fabStyle.buttonContainer,
                fabStyle.animatedViewHover,
                animatedStyles.hover,
            ], onLayout: this.onNodeLayout }, this.props.renderButton({
            nodeInstance: this,
            mandatoryProps: {
                onHoverStart: this.onHoverStart,
                onHoverEnd: this.onHoverEnd,
                onLayout: function (_a) {
                    var width = _a.width, height = _a.height;
                    if ((_this.state.width === 0 && _this.state.width !== width) ||
                        (_this.state.height === 0 && _this.state.height !== height)) {
                        _this.setState({ width: width, height: height });
                    }
                },
                onPress: function (e) {
                    if (_this.isRoot) {
                        _this.props.contextProps.onPressRoot &&
                            _this.props.contextProps.onPressRoot();
                    }
                    // prevent the touch detector, which is just behind, to also trigger
                    if (!helpers_1.isTouch(e)) {
                        // For consistent behavior:
                        // Sometimes the onHoverEnd is trigger sometimes not.
                        // Here we force the trigger has the mouse exits the button when it disapears
                        _this.onHoverEnd();
                    }
                    if (!helpers_1.isTouch(e) ||
                        (helpers_1.isTouch(e) && // Press on touch screen works
                            (_this.props.isPartialOpen || // The fab is partial opened
                                _this.props.isFullOpen || // or full open
                                (_this.props.isFullOpen &&
                                    _this.props.nodeProps.nodeChildren.length))))
                        _this.onPress();
                },
                onLongPress: function (e) {
                    if (!_this.isOpen && _this.hasChildren) {
                        e.stopPropagation();
                        _this.onPress();
                    }
                },
            },
        })));
        return (React.createElement(animated_1.Animated.View, { style: [
                fabStyle.animatedViewToggle,
                animatedStyles.toggle,
                this.isRoot ? fabStyle.root : {},
            ] },
            children,
            ButtonContainer));
    };
    NodeView.prototype.animateScaleUp = function () {
        if (this.touchProximityAnimation) {
            this.touchProximityAnimation.stop();
        }
        this.touchProximityAnimation = getHoverAnimation({
            toPos: {
                x: 0,
                y: 0,
            },
            toScale: 1.2,
            animatedValues: this.animatedProximityValues,
            duration: 100,
        });
        this.touchProximityAnimation.start();
    };
    NodeView.prototype.animateScaleDown = function () {
        if (this.touchProximityAnimation) {
            this.touchProximityAnimation.stop();
        }
        this.touchProximityAnimation = getHoverAnimation({
            toPos: {
                x: 0,
                y: 0,
            },
            toScale: 1,
            animatedValues: this.animatedProximityValues,
            duration: 100,
        });
        this.touchProximityAnimation.start();
    };
    return NodeView;
}(React.Component));
exports.NodeView = NodeView;
function getHoverAnimation(_a) {
    var toPos = _a.toPos, toScale = _a.toScale, animatedValues = _a.animatedValues, duration = _a.duration;
    return animated_1.Animated.parallel([
        animated_1.Animated.timing(animatedValues.translateX, {
            toValue: toPos.x,
            duration: duration,
            easing: animated_1.Animated.Easing.InOut(),
        }),
        animated_1.Animated.timing(animatedValues.translateY, {
            toValue: toPos.y,
            duration: duration,
            easing: animated_1.Animated.Easing.InOut(),
        }),
        animated_1.Animated.timing(animatedValues.scale, {
            toValue: toScale,
            duration: duration,
            easing: animated_1.Animated.Easing.InOut(),
        }),
    ]);
}
function renderChildren(_a) {
    var contextProps = _a.contextProps, isFullOpen = _a.isFullOpen, nodeChildren = _a.nodeChildren, nodeLocalPosition = _a.nodeLocalPosition, nodeOpeningDuration = _a.nodeOpeningDuration, nodeParentAbsolutePosition = _a.nodeParentAbsolutePosition, onNodeLayout = _a.onNodeLayout, onMount = _a.onMount, onUnmount = _a.onUnmount, optionSeparationAngle = _a.optionSeparationAngle, selectedChildNodeId = _a.selectedChildNodeId, spreadOrientation = _a.spreadOrientation, spreadRadius = _a.spreadRadius, subTreeProps = _a.subTreeProps;
    return nodeChildren.reduce(function (els, child, index, _a) {
        var siblingNumber = _a.length;
        var id = child.id;
        var localPosition = business_1.getPosition({
            spreadRadius: spreadRadius,
            optionSeparationAngle: optionSeparationAngle,
            spreadOrientation: spreadOrientation,
            siblingNumber: siblingNumber,
            index: index,
        });
        var parentNodeAbsolutePosition = {
            x: (nodeParentAbsolutePosition.x || 0) + nodeLocalPosition.x,
            y: (nodeParentAbsolutePosition.y || 0) + nodeLocalPosition.y,
        };
        if (isFullOpen || child.id === selectedChildNodeId) {
            return __spreadArrays(els, [
                React.createElement(foldableTree_1.FoldableTree, { key: id, id: child.id, subTreeProps: subTreeProps, contextProps: contextProps, nodeProps: {
                        id: child.id,
                        nodeData: child.nodeData || {},
                        nodeChildren: child.nodeChildren || [],
                        positionRelativeToParentNode: localPosition,
                        nodeParentAbsolutePosition: parentNodeAbsolutePosition,
                        onNodeLayout: onNodeLayout,
                        onMount: onMount,
                        onUnmount: onUnmount,
                        nodeOpeningDuration: nodeOpeningDuration,
                        optionSeparationAngle: optionSeparationAngle,
                        spreadRadius: spreadRadius,
                    } }),
            ]);
        }
        return els;
    }, []);
}
/**
 * Handle the feedback when the pointer is getting closer of a child.
 * Scale the child up as function and push it away from the touch
 */
function onHoverFeedback(_a) {
    var localPosition = _a.localPosition, animatedValues = _a.animatedValues, distanceFromCenter = _a.distanceFromChildCenter;
    // Not for disabled or node which are not ready
    var addScale = 0.1;
    var lowTreshold = 32;
    var hiTreshold = 100;
    var relativeDistance = (distanceFromCenter || Infinity) - lowTreshold;
    var clampedDistance = Math.min(hiTreshold, Math.max(0, relativeDistance));
    var factor = addScale - clampedDistance / ((hiTreshold - lowTreshold) / addScale);
    var toScale = 1 + factor;
    if (distanceFromCenter) {
        animatedValues.translateX.setValue(localPosition.x * factor);
        animatedValues.translateY.setValue(localPosition.y * factor);
        animatedValues.scale.setValue(toScale);
    }
}

},{"react":"HdMw","reactxp":"IpFD","../../helpers":"tO1n","../../styles":"JvZo","../animated":"lEUm","../foldableTree":"koLg","./business":"ocDT","./styles":"wIIx"}],"MPEQ":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var NodeView_1 = require("./NodeView");
function renderNodeFactory(renderContent) {
    return function renderNode(rendererProps) {
        return (React.createElement(NodeView_1.NodeView, __assign({ renderButton: renderContent, renderNode: renderNode }, rendererProps)));
    };
}
exports.renderNodeFactory = renderNodeFactory;

},{"react":"HdMw","./NodeView":"I9AI"}],"CuRD":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styles_1 = require("../../styles");
var animated_1 = require("../animated");
var DEFAULT_LONG_PRESS_DELAY = 200;
var TouchDetector = /** @class */ (function (_super) {
    __extends(TouchDetector, _super);
    function TouchDetector(props) {
        var _this = _super.call(this, props) || this;
        _this.actions = {
            addObject: function (objectId, layout) {
                present(_this, {
                    type: 'addObject',
                    payload: {
                        objectId: objectId,
                        layout: layout,
                    },
                });
                _this.forceUpdate();
            },
            removeObject: function (nodeId) {
                present(_this, {
                    type: 'removeObject',
                    payload: {
                        nodeId: nodeId,
                    },
                });
            },
            startLongTouch: function (touch) {
                present(_this, {
                    type: 'addLongTouch',
                    payload: {
                        touch: touch,
                    },
                });
            },
        };
        _this.touchDetectorAnimatedValue = {
            x: animated_1.Animated.createValue(1.0),
            y: animated_1.Animated.createValue(1.0),
            width: animated_1.Animated.createValue(1.0),
            height: animated_1.Animated.createValue(1.0),
        };
        _this._SAMModelData = {
            objectLayouts: new Map(),
            touches: [],
            longTouchIds: [],
            longPressDelay: DEFAULT_LONG_PRESS_DELAY,
            willCancelNextPressEvent: false,
        };
        _this.onRepresentation = function (rep) {
            var _a, _b, _c;
            // update touch detector layout
            if (rep.touchDetectorLayout) {
                _this.setBoundingBox(rep.touchDetectorLayout);
            }
            // inform consumer about new touched targets
            (_a = rep.newTargets) === null || _a === void 0 ? void 0 : _a.forEach(_this.onObjectTouchStart);
            // inform consumer about lost targets after some normal touches
            (_b = rep.oldTouchTargetIds) === null || _b === void 0 ? void 0 : _b.forEach(_this.onObjectTouchStop);
            // inform consumer that the touch was release outside any
            if (rep.didReleaseEmptyTouch) {
                _this.onObjectTouchStop();
            }
            // inform consumer about the start of a new long touch
            if (rep.newLongTouch) {
                _this.onObjectLongTouchStart(rep.newLongTouch);
            }
            // inform consumer about lost targets after some long touches
            (_c = rep.oldLongTouchTargetIds) === null || _c === void 0 ? void 0 : _c.forEach(_this.onObjectLongTouchStop);
            // inform consumer about a mouse click target
            if (rep.clickTargetId && _this.props.onClick) {
                _this.props.onClick(rep.clickTargetId);
            }
            // inform consumer about a the pointers distance from each layout center
            if (_this.props.onPointerDistancesFromLayouts &&
                rep.pointerDistancesFromLayouts) {
                _this.props.onPointerDistancesFromLayouts(rep.pointerDistancesFromLayouts);
            }
            // inform consumer that the target changed during moving
            if (rep.targetChange && _this.props.onTargetChange) {
                _this.props.onTargetChange(rep.targetChange);
            }
        };
        /*
         * ACTIONS
         */
        _this.onResponderStart = function (event) {
            present(_this, {
                type: 'startTouch',
                payload: {
                    touches: getLocalTouches(event.nativeEvent.changedTouches, _this.localPositionRelativeToPage),
                },
            });
        };
        _this.onResponderRelease = function (event) {
            present(_this, {
                type: 'stopTouch',
                payload: {
                    touches: getLocalTouches(event.nativeEvent.changedTouches, _this.localPositionRelativeToPage),
                },
            });
        };
        _this.onResponderMove = function (event) {
            var touch = getLocalTouches(event.nativeEvent.changedTouches, _this.localPositionRelativeToPage)[0];
            present(_this, {
                type: 'moveTouch',
                payload: {
                    identifier: touch.identifier,
                    localX: touch.localX,
                    localY: touch.localY,
                },
            });
        };
        /**
         * Parent callback
         */
        _this.onObjectTouchStart = function (touchedObject) {
            if (_this.props.onObjectTouchStart) {
                _this.props.onObjectTouchStart(touchedObject);
            }
        };
        _this.onObjectTouchStop = function (targetId) {
            if (_this.props.onTouchStop) {
                if (!!targetId) {
                    _this.props.onTouchStop(targetId);
                }
                else {
                    _this.props.onTouchStop();
                }
            }
        };
        _this.onObjectLongTouchStart = function (touchedObject) {
            if (_this.props.onObjectLongTouchStart) {
                _this.props.onObjectLongTouchStart(touchedObject);
            }
        };
        _this.onObjectLongTouchStop = function (targetId) {
            if (_this.props.onObjectLongTouchStop) {
                _this.props.onObjectLongTouchStop(targetId);
            }
        };
        _this.onPress = function (event) {
            if (_this.props.onClick && isMouseClick(event)) {
                present(_this, {
                    type: 'clicked',
                    payload: {
                        click: getLocalClick(event, _this.localPositionRelativeToPage),
                    },
                });
            }
        };
        _this._SAMModelData.longPressDelay =
            _this.props.longPressDelay || DEFAULT_LONG_PRESS_DELAY;
        _this.touchDetectorAnimation = styles_1.Styles.createAnimatedViewStyle({
            transform: [
                { translateX: _this.touchDetectorAnimatedValue.x },
                { translateY: _this.touchDetectorAnimatedValue.y },
                { scaleX: _this.touchDetectorAnimatedValue.width },
                { scaleY: _this.touchDetectorAnimatedValue.height },
            ],
        });
        return _this;
    }
    Object.defineProperty(TouchDetector.prototype, "data", {
        get: function () {
            return this._SAMModelData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TouchDetector.prototype, "localPositionRelativeToPage", {
        get: function () {
            return {
                x: this.props.containerPositionRelativeToWindow.x,
                y: this.props.containerPositionRelativeToWindow.y,
            };
        },
        enumerable: true,
        configurable: true
    });
    TouchDetector.prototype.setBoundingBox = function (boundingBox) {
        this.touchDetectorAnimatedValue.x.setValue(boundingBox.x + boundingBox.width / 2);
        this.touchDetectorAnimatedValue.y.setValue(boundingBox.y + boundingBox.height / 2);
        this.touchDetectorAnimatedValue.height.setValue(boundingBox.height);
        this.touchDetectorAnimatedValue.width.setValue(boundingBox.width);
    };
    TouchDetector.prototype.componentDidMount = function () {
        this.props.onRef && this.props.onRef(this);
    };
    TouchDetector.prototype.render = function () {
        return (React.createElement(React.Fragment, null,
            React.createElement(animated_1.Animated.View, { onResponderStart: this.onResponderStart, onResponderRelease: this.onResponderRelease, onResponderMove: this.onResponderMove, onPress: this.onPress, style: [
                    {
                        position: 'absolute',
                        width: 1,
                        height: 1,
                        left: 0,
                        top: 0,
                    },
                    this.touchDetectorAnimation,
                ] })));
    };
    return TouchDetector;
}(React.Component));
exports.TouchDetector = TouchDetector;
function present(instance, proposal) {
    var _a;
    var oldModel = __assign(__assign({}, instance.data), { longTouchIds: __spreadArrays(instance.data.longTouchIds), touches: instance.data.touches.map(function (touch) { return (__assign({}, touch)); }), objectLayouts: new Map(instance.data.objectLayouts) });
    // tslint:disable-next-line: switch-default
    switch (proposal.type) {
        case 'addObject':
            instance.data.objectLayouts.set(proposal.payload.objectId, proposal.payload.layout);
            break;
        case 'removeObject':
            instance.data.objectLayouts.delete(proposal.payload.nodeId);
            break;
        case 'startTouch':
            // On trackpad, if you don't move too long during a push, you will
            // trigger a right click.
            // This will terminate the responder without calling terminate/end
            // So this will let a dirty state with unterminated touch.
            // Workaround: if a new touch with the same finger is triggered,
            // clean the old touches and long touches with the same finter.
            cleanTouches(proposal, instance);
            instance.data.willCancelNextPressEvent = true;
            // Now the state is clean, add the new touches
            (_a = instance.data.touches).push.apply(_a, proposal.payload.touches);
            break;
        case 'stopTouch':
            instance.data.willCancelNextPressEvent = true;
            cleanTouches(proposal, instance);
            break;
        case 'addLongTouch':
            // Valid only:
            // - if a touch has the same uid as the payload
            // - AND if the target has not changed
            var startTouch = instance.data.touches.find(function (_a) {
                var uid = _a.uid;
                return proposal.payload.touch.uid === uid;
            });
            // Is the same touch
            if (!!startTouch) {
                var startTarget = getTouchedObjects([startTouch], instance.data.objectLayouts)[0];
                var currentTarget = getTouchedObjects([proposal.payload.touch], instance.data.objectLayouts)[0];
                // Has the same target
                if (startTarget &&
                    currentTarget &&
                    startTarget.targetId === currentTarget.targetId) {
                    instance.data.longTouchIds.push(proposal.payload.touch.uid);
                }
            }
            break;
        case 'moveTouch':
            var touch = instance.data.touches.find(function (_a) {
                var identifier = _a.identifier;
                return identifier === proposal.payload.identifier;
            });
            if (touch) {
                touch.localX = proposal.payload.localX;
                touch.localY = proposal.payload.localY;
            }
    }
    computeNextState(oldModel, instance, proposal);
}
function cleanTouches(proposal, instance) {
    proposal.payload.touches.forEach(function (_a) {
        var identifier = _a.identifier;
        var index = instance.data.touches.findIndex(function (_a) {
            var _identifier = _a.identifier;
            return identifier === _identifier;
        });
        // Remove in touches
        var removed = instance.data.touches.splice(index, 1);
        // Remove in long touches
        if (removed[0]) {
            instance.data.longTouchIds.splice(instance.data.longTouchIds.indexOf(removed[0].uid), 1);
        }
    });
}
function computeNextState(previousData, _a, proposal) {
    var data = _a.data, onRepresentation = _a.onRepresentation, actions = _a.actions;
    var _b;
    var representation = {};
    /**
     * COMPUTE REPRESENTATION
     */
    // tslint:disable-next-line: switch-default
    switch (proposal.type) {
        case 'addObject':
        case 'removeObject':
            representation.touchDetectorLayout = getBoundingBox(Array.from(data.objectLayouts.values()));
            break;
        case 'startTouch':
            // Touch hit something
            representation.newTargets = getTouchedObjects(proposal.payload.touches, data.objectLayouts);
            break;
        case 'stopTouch':
            // Touch stoped on something
            var oldTouches_1 = proposal.payload.touches.map(function (_a) {
                var identifier = _a.identifier;
                return previousData.touches.find(function (_a) {
                    var _identifier = _a.identifier;
                    return identifier === _identifier;
                });
            });
            var oldLongTouchIds_1 = previousData.longTouchIds.filter(function (id) {
                return oldTouches_1.some(function (_a) {
                    var uid = _a.uid;
                    return uid === id;
                });
            });
            var oldNormalTouchIds_1 = previousData.touches
                .map(function (_a) {
                var uid = _a.uid;
                return uid;
            })
                .filter(function (uid) { return !oldLongTouchIds_1.includes(uid); });
            var oldLongTouches = oldTouches_1.filter(function (_a) {
                var uid = _a.uid;
                return oldLongTouchIds_1.includes(uid);
            });
            var oldNormalTouches = oldTouches_1.filter(function (_a) {
                var uid = _a.uid;
                return oldNormalTouchIds_1.includes(uid);
            });
            var oldTouchTargetIds = (representation.oldTouchTargetIds = getTouchedObjects(oldNormalTouches, data.objectLayouts).map(function (_a) {
                var targetId = _a.targetId;
                return targetId;
            }));
            var oldLongTouchTargetIds = (representation.oldLongTouchTargetIds = getTouchedObjects(oldLongTouches, data.objectLayouts).map(function (_a) {
                var targetId = _a.targetId;
                return targetId;
            }));
            if (!oldLongTouchTargetIds.length && !oldTouchTargetIds.length) {
                representation.didReleaseEmptyTouch = true;
            }
            break;
        case 'addLongTouch':
            // LongTouch something
            if (data.longTouchIds.includes(proposal.payload.touch.uid)) {
                var target = getTouchedObjects([proposal.payload.touch], data.objectLayouts)[0];
                if (target) {
                    representation.newLongTouch = {
                        targetId: target.targetId,
                        touchUIDs: [proposal.payload.touch.uid],
                    };
                }
            }
            break;
        case 'moveTouch':
            // Finger is moving
            var movedTouch = data.touches.find(function (_a) {
                var identifier = _a.identifier;
                return identifier === proposal.payload.identifier;
            });
            if (movedTouch) {
                representation.newTargets = getTouchedObjects([movedTouch], data.objectLayouts);
                representation.pointerDistancesFromLayouts = [];
                data.objectLayouts.forEach(function (layout, targetId) {
                    representation.pointerDistancesFromLayouts.push({
                        targetId: targetId,
                        distance: Math.hypot(proposal.payload.localX - layout.x - layout.width / 2, proposal.payload.localY - layout.y - layout.height / 2),
                    });
                });
            }
            // Add target change to the representation
            representation.targetChange = getTargetChange(proposal, previousData, data);
            break;
        case 'clicked':
            if (!data.willCancelNextPressEvent) {
                var targetId = getClickedObjectId(proposal.payload.click, data.objectLayouts);
                representation.clickTargetId = targetId;
            }
    }
    /**
     * NAP
     */
    // tslint:disable-next-line: switch-default
    switch (proposal.type) {
        case 'startTouch':
            // Test if it is a long press after a delay
            proposal.payload.touches.forEach(function (touch) {
                setTimeout(function () {
                    // The touch is still present. Note the use of Touch.uid and not Touch.identifier
                    // because Touch.identifier can come back in the case of a quick double tap.
                    actions.startLongTouch(touch);
                }, data.longPressDelay);
            });
            break;
        case 'moveTouch':
            // The touch entered a new target.
            if (((_b = getTargetChange(proposal, previousData, data)) === null || _b === void 0 ? void 0 : _b.op) === 'entered') {
                setTimeout(function () {
                    var touch = data.touches.find(function (_a) {
                        var identifier = _a.identifier;
                        return proposal.payload.identifier === identifier;
                    });
                    if (touch) {
                        // The touch target is still present. Let's try a longtouch.
                        if (touch)
                            actions.startLongTouch(touch);
                    }
                }, data.longPressDelay);
            }
            break;
    }
    /**
     * NEXT STEP
     */
    onRepresentation(representation);
}
/**
 * Compute the bounding box of an opened node.
 * The top/left direction taked in account the size of the layout button.
 */
function getBoundingBox(objectLayouts) {
    if (!objectLayouts.length) {
        return {
            x: 0,
            y: 0,
            width: 0,
            height: 0,
        };
    }
    var rightestChild = objectLayouts.reduce(function (farestChild, childWithPosition) {
        if (farestChild) {
            return farestChild.x > childWithPosition.x
                ? farestChild
                : childWithPosition;
        }
        else {
            return childWithPosition;
        }
    }, objectLayouts[0]);
    var leftestChild = objectLayouts.reduce(function (closestChild, childWithPosition) {
        if (closestChild) {
            return closestChild.x < childWithPosition.x
                ? closestChild
                : childWithPosition;
        }
        else {
            return childWithPosition;
        }
    }, objectLayouts[0]);
    var uppestChild = objectLayouts.reduce(function (closestChild, childWithPosition) {
        if (closestChild) {
            return closestChild.y < childWithPosition.y
                ? closestChild
                : childWithPosition;
        }
        else {
            return childWithPosition;
        }
    }, objectLayouts[0]);
    var lowestChild = objectLayouts.reduce(function (farestChild, childWithPosition) {
        if (farestChild) {
            return farestChild.y > childWithPosition.y
                ? farestChild
                : childWithPosition;
        }
        else {
            return childWithPosition;
        }
    }, objectLayouts[0]);
    var leftest = leftestChild.x;
    var rightest = rightestChild.x;
    var uppest = uppestChild.y;
    var lowest = lowestChild.y;
    var width = rightest - leftest + rightestChild.width;
    var height = lowest - uppest + lowestChild.height;
    return {
        x: leftest,
        y: uppest,
        width: width,
        height: height,
    };
}
function getTouchedObjects(touches, objectLayouts) {
    var targets = [];
    touches.forEach(function (touch) {
        var touchedObjects = Array.from(objectLayouts.entries())
            .filter(function (_a) {
            var _ = _a[0], layout = _a[1];
            return isInside({ x: touch.localX, y: touch.localY }, layout);
        })
            .map(function (_a) {
            var id = _a[0];
            return ({
                id: id,
                touchId: touch.uid,
            });
        });
        touchedObjects.forEach(function (target) {
            // Another touch is on the object
            var alreadyKnownTarget = targets.find(function (_a) {
                var targetId = _a.targetId;
                return targetId === target.id;
            });
            if (alreadyKnownTarget) {
                alreadyKnownTarget.touchUIDs.push(target.touchId);
            }
            else {
                targets.push({
                    targetId: target.id,
                    touchUIDs: [target.touchId],
                });
            }
        });
    });
    return targets;
}
function getClickedObjectId(click, objectLayouts) {
    var targetLayout = Array.from(objectLayouts.entries()).find(function (_a) {
        var _ = _a[0], layout = _a[1];
        return isInside({ x: click.localX, y: click.localY }, layout);
    });
    return targetLayout ? targetLayout[0] : undefined;
}
function isInside(position, layout) {
    return (position.x >= layout.x &&
        position.x <= layout.x + layout.width &&
        position.y >= layout.y &&
        position.y <= layout.y + layout.height);
}
function getLocalTouches(touchList, localPositionRelativeToPage) {
    var touches = [];
    // tslint:disable-next-line: prefer-for-of
    for (var i = 0; i < touchList.length; i++) {
        var timeStamp = Date.now();
        touches.push({
            identifier: touchList[i].identifier,
            uid: touchList[i].identifier + '' + timeStamp,
            localX: touchList[i].pageX - localPositionRelativeToPage.x,
            localY: touchList[i].pageY - localPositionRelativeToPage.y,
            timeStamp: timeStamp,
        });
    }
    return touches;
}
function getLocalClick(click, localOriginPositionRelativeToPage) {
    var timeStamp = Date.now();
    return {
        uid: timeStamp.toString(),
        timeStamp: timeStamp,
        localX: (click.pageX || click.clientX) - localOriginPositionRelativeToPage.x,
        localY: (click.pageY || click.clientY) - localOriginPositionRelativeToPage.y,
    };
}
function isMouseClick(event) {
    return !('touches' in event);
}
function getTargetChange(proposal, previousData, data) {
    var _a, _b;
    // If it has the same target after a delay, it is a long press.
    var oldTouch = previousData.touches.find(function (_a) {
        var identifier = _a.identifier;
        return proposal.payload.identifier === identifier;
    });
    var currentTouch = data.touches.find(function (_a) {
        var identifier = _a.identifier;
        return proposal.payload.identifier === identifier;
    });
    if (oldTouch && currentTouch) {
        var oldTouchTargetId = (_a = getTouchedObjects([oldTouch], previousData.objectLayouts)[0]) === null || _a === void 0 ? void 0 : _a.targetId;
        var currentTouchTargetId = (_b = getTouchedObjects([currentTouch], data.objectLayouts)[0]) === null || _b === void 0 ? void 0 : _b.targetId;
        // Entered a target rules:
        // - the previous and current target are different
        // - the current target is defined.
        if (oldTouchTargetId !== currentTouchTargetId && !!currentTouchTargetId) {
            return {
                op: 'entered',
                prevTarget: oldTouchTargetId,
                target: currentTouchTargetId,
            };
        }
        // Exited a target rules:
        // - the previous and current target are different
        // - the previous target is defined.
        else if (oldTouchTargetId !== currentTouchTargetId && !!oldTouchTargetId) {
            return {
                op: 'exited',
                prevTarget: oldTouchTargetId,
                target: currentTouchTargetId,
            };
        }
    }
    return undefined;
}

},{"react":"HdMw","../../styles":"JvZo","../animated":"lEUm"}],"SbG4":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var button_1 = require("../button");
var foldableTree_1 = require("../foldableTree");
var renderNode_1 = require("./renderNode");
var TouchDetector_1 = require("./TouchDetector");
var DEFAULT_SPREAD_RADIUS = 120;
var DEFAULT_OPTION_SEPARATION_ANGLE = 45;
var DEFAULT_NODE_OPENING_DURATION = 300;
var Fab = /** @class */ (function (_super) {
    __extends(Fab, _super);
    function Fab() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            containerPositionRelativeToWindow: { x: 0, y: 0 },
            isTouchDetectorEnabled: true,
        };
        _this.nodeRefs = new Map();
        _this.updateParentLayout = function () {
            if (_this.props.containerRef) {
                reactxp_1.UserInterface.measureLayoutRelativeToWindow(_this.props.containerRef).then(function (containerPositionRelativeToWindow) {
                    if (_this.state.containerPositionRelativeToWindow.x !==
                        containerPositionRelativeToWindow.x ||
                        _this.state.containerPositionRelativeToWindow.y !==
                            containerPositionRelativeToWindow.y) {
                        _this.setState({ containerPositionRelativeToWindow: containerPositionRelativeToWindow });
                    }
                });
            }
        };
        _this.onTargetChange = function (change) {
            if (change.op === 'entered') {
                _this.props.onEnter && _this.props.onEnter(change.target);
            }
            else {
                _this.props.onExit && _this.props.onExit(change.prevTarget);
            }
        };
        _this.onObjectLongTouchStart = function (touchedObject) {
            var node = _this.nodeRefs.get(touchedObject.targetId);
            if (node.hasChildren) {
                if (!node.isOpen) {
                    node.open();
                }
                else if (node.isPartialOpen) {
                    node.reopen();
                }
                else if (node.isFullOpen && node.id !== foldableTree_1.ROOT_ID) {
                    node.close();
                }
            }
        };
        _this.onObjectLongTouchStop = function (targetId) {
            var _a;
            // Select the node if it is a leaf
            if (targetId) {
                var node = _this.nodeRefs.get(targetId);
                var isLeaf = !((_a = node) === null || _a === void 0 ? void 0 : _a.hasChildren);
                if (node && isLeaf) {
                    _this.nodeRefs.get(foldableTree_1.ROOT_ID).close();
                    _this.props.onSelect && _this.props.onSelect(targetId, node.path);
                }
                else {
                    _this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel();
                }
            }
            else {
                // No selection, cancel the navigation
                _this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel();
            }
        };
        _this.scaleChildren = function (pointerFromLayoutsDistances) {
            pointerFromLayoutsDistances.forEach(function (_a) {
                var targetId = _a.targetId, distance = _a.distance;
                var node = _this.nodeRefs.get(targetId);
                node.setDistanceFromPointer(distance);
            });
        };
        _this.onTouchStop = function (targetId) {
            if (targetId === foldableTree_1.ROOT_ID) {
                _this.props.onPressRoot && _this.props.onPressRoot();
            }
            // Touched nothing
            if (!targetId) {
                _this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel();
            }
            else {
                _this.nodeRefs.get(foldableTree_1.ROOT_ID).close();
            }
        };
        _this.setNodeLayout = function (node, layout) {
            _this.nodeRefs.set(node.id, node);
            _this.touchDetector.actions.addObject(node.id, layout);
        };
        _this.onClick = function (targetId) {
            var _a;
            _this.setState({ isTouchDetectorEnabled: false });
            (_a = _this.nodeRefs.get(targetId)) === null || _a === void 0 ? void 0 : _a.open();
        };
        _this.deleteNodeLayout = function (nodeId) {
            _this.nodeRefs.delete(nodeId);
            _this.touchDetector.actions.removeObject(nodeId);
        };
        return _this;
    }
    Fab.prototype.UNSAFE_componentWillReceiveProps = function (props) {
        /**
         * https://github.com/facebook/react-native/issues/3282 still needed despit RN effort
         * If the parentRef has no onLayout function, RN measurment return an undefined layout
         */
        if (props.containerRef && props.containerRef.props.onLayout === undefined) {
            // (props.parentRef.props as any).onLayout = () => {}
        }
    };
    Fab.prototype.componentDidMount = function () {
        if (this.props.onRef) {
            this.props.onRef(this);
        }
    };
    Fab.prototype.componentDidUpdate = function () {
        this.updateParentLayout();
    };
    Fab.prototype.render = function () {
        var _this = this;
        var containerPositionRelativeToWindow = this.state.containerPositionRelativeToWindow;
        var _a = this.props, 
        // Root props
        isOpen = _a.isOpen, onPressRoot = _a.onPressRoot, 
        // Context props
        isDisabled = _a.isDisabled, onCancel = _a.onCancel, onEnter = _a.onEnter, onExit = _a.onExit, onPostClose = _a.onPostClose, onPostOpen = _a.onPostOpen, onPreClose = _a.onPreClose, onPreOpen = _a.onPreOpen, onSelect = _a.onSelect, style = _a.style, 
        // Node props
        _b = _a.delayLongPress, 
        // Node props
        delayLongPress = _b === void 0 ? 300 : _b, _c = _a.nodeOpeningDuration, nodeOpeningDuration = _c === void 0 ? DEFAULT_NODE_OPENING_DURATION : _c, _d = _a.optionSeparationAngle, optionSeparationAngle = _d === void 0 ? DEFAULT_OPTION_SEPARATION_ANGLE : _d, rootSpreadOrientation = _a.rootSpreadOrientation, _e = _a.spreadRadius, spreadRadius = _e === void 0 ? DEFAULT_SPREAD_RADIUS : _e, position = _a.position, _f = _a.nodeData, nodeData = _f === void 0 ? {} : _f, _g = _a.nodeChildren, nodeChildren = _g === void 0 ? [] : _g, buildButtonProps = _a.buildButtonProps;
        var completeProps = {
            id: foldableTree_1.ROOT_ID,
            isOpen: isOpen,
            contextProps: {
                isDisabled: isDisabled,
                style: style,
                onCancel: onCancel,
                onSelect: onSelect,
                onEnter: onEnter,
                onExit: onExit,
                onPostClose: onPostClose,
                onPostOpen: onPostOpen,
                onPreClose: onPreClose,
                onPreOpen: onPreOpen,
                onPressRoot: onPressRoot,
                renderNode: renderNode_1.renderNodeFactory(renderContentFactory({ isDisabled: isDisabled, buildButtonProps: buildButtonProps, delayLongPress: delayLongPress })),
            },
            nodeProps: {
                // root node props
                id: foldableTree_1.ROOT_ID,
                nodeData: nodeData,
                nodeParentAbsolutePosition: { x: 0, y: 0 },
                positionRelativeToParentNode: position,
                nodeChildren: nodeChildren,
                nodeOpeningDuration: nodeOpeningDuration,
                optionSeparationAngle: optionSeparationAngle,
                onNodeLayout: this.setNodeLayout,
                onUnmount: this.deleteNodeLayout,
                rootSpreadOrientation: rootSpreadOrientation,
                spreadRadius: spreadRadius,
            },
        };
        return (React.createElement(React.Fragment, null,
            React.createElement(foldableTree_1.FoldableTree, __assign({}, completeProps)),
            this.state.isTouchDetectorEnabled && (React.createElement(TouchDetector_1.TouchDetector, { positionRelativeToParent: this.props.position, containerPositionRelativeToWindow: containerPositionRelativeToWindow, onRef: function (ref) { return (_this.touchDetector = ref); }, onObjectLongTouchStart: this.onObjectLongTouchStart, onObjectLongTouchStop: this.onObjectLongTouchStop, onTouchStop: this.onTouchStop, onClick: this.onClick, onPointerDistancesFromLayouts: this.scaleChildren, onTargetChange: this.onTargetChange }))));
    };
    return Fab;
}(React.Component));
function renderContentFactory(_a) {
    var isDisabled = _a.isDisabled, delayLongPress = _a.delayLongPress, buildButtonProps = _a.buildButtonProps;
    return function (_a) {
        var nodeInstance = _a.nodeInstance, mandatoryProps = _a.mandatoryProps;
        var nodeData = nodeInstance.nodeData;
        var customProps = (buildButtonProps && buildButtonProps(nodeInstance)) || {};
        var label = customProps.label
            ? customProps.label
            : nodeInstance.isOpen
                ? undefined
                : nodeData.label;
        var iconSlot = customProps.iconSlot
            ? customProps.iconSlot
            : nodeInstance.isOpen
                ? nodeData.renderCancelIcon
                : nodeData.renderOpenIcon;
        return (React.createElement(button_1.CircleButton, __assign({}, customProps, { iconSlot: iconSlot, label: label, isDisabled: isDisabled, delayLongPress: delayLongPress, 
            // remove shadow on native for performance
            elevation: reactxp_1.Platform.getType() === 'web' ? 10 : 0 }, mandatoryProps)));
    };
}
exports.default = Fab;

},{"react":"HdMw","reactxp":"IpFD","../button":"loLP","../foldableTree":"koLg","./renderNode":"MPEQ","./TouchDetector":"CuRD"}],"t3Rj":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fab_1 = require("./Fab");
exports.Fab = Fab_1.default;

},{"./Fab":"SbG4"}],"Nuch":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var styles_1 = require("../../styles");
function createGridStyle(padding, style) {
    return styles_1.Styles.createViewStyle(__assign({ flex: 1, flexDirection: 'row', justifyContent: 'flex-start', flexWrap: 'wrap', padding: padding / 2 }, style));
}
exports.createGridStyle = createGridStyle;
function createItemContainerStyle(height, width, padding) {
    return styles_1.Styles.createViewStyle({
        height: height,
        width: width,
        flexShrink: 1,
        padding: padding / 2,
        alignItems: 'stretch',
    });
}
exports.createItemContainerStyle = createItemContainerStyle;
exports.imageContainer = styles_1.Styles.createViewStyle({
    flex: 1,
    alignItems: 'stretch',
});
exports.bottomContainer = styles_1.Styles.createViewStyle({
    minHeight: 28,
    justifyContent: 'flex-end',
});

},{"../../styles":"JvZo"}],"FtCn":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var view_1 = require("../view");
var styles = require("./style");
function Grid(_a) {
    var items = _a.items, style = _a.style, _b = _a.padding, padding = _b === void 0 ? 4 : _b, _c = _a.itemHeight, itemHeight = _c === void 0 ? 108 : _c, _d = _a.itemWidth, itemWidth = _d === void 0 ? 80 : _d;
    var itemContainerStyle = styles.createItemContainerStyle(itemHeight, itemWidth, padding);
    return (React.createElement(view_1.View, { style: styles.createGridStyle(padding, style) }, items.map(function (_a) {
        var key = _a.key, image = _a.image, title = _a.title;
        return (React.createElement(view_1.View, { style: itemContainerStyle, key: key },
            React.createElement(view_1.View, { style: styles.imageContainer }, image),
            title && React.createElement(view_1.View, { style: styles.bottomContainer }, title)));
    })));
}
exports.default = Grid;

},{"react":"HdMw","../view":"eSvb","./style":"Nuch"}],"dGog":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Grid_1 = require("./Grid");
exports.Grid = Grid_1.default;

},{"./Grid":"FtCn"}],"Zlgf":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var styles_1 = require("../../styles");
function createGradientContainerStyle(style) {
    if (!style) {
        return {};
    }
    var borderRadius = style['borderRadius'];
    return borderRadius
        ? styles_1.Styles.createViewStyle({
            borderRadius: borderRadius,
        })
        : {};
}
exports.createGradientContainerStyle = createGradientContainerStyle;

},{"../../styles":"JvZo"}],"ss0b":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var reactxp_1 = require("reactxp");
var view_1 = require("../view");
var styles = require("./styles");
var LinearGradient = /** @class */ (function (_super) {
    __extends(LinearGradient, _super);
    function LinearGradient() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.measure = function (e) {
            if (e.width !== _this.oldWidth && e.height !== _this.oldHeight) {
                _this.oldWidth = e.width;
                _this.oldHeight = e.height;
                _this.updateLayout({
                    width: e.width,
                    height: e.height,
                });
            }
        };
        return _this;
    }
    LinearGradient.prototype.render = function () {
        var _this = this;
        var style = this.props.style;
        var gradientContainerStyle = styles.createGradientContainerStyle(style);
        return (React.createElement(view_1.View, { style: [gradientContainerStyle, style], onLayout: this.measure, ref: function (comp) { return (_this.rootRef = comp); } },
            React.createElement(view_1.View, { style: style, ref: function (comp) { return (_this.backgroundImageRef = comp); } })));
    };
    LinearGradient.prototype.componentDidMount = function () {
        return __awaiter(this, void 0, void 0, function () {
            var rect;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, reactxp_1.UserInterface.measureLayoutRelativeToWindow(this.rootRef)];
                    case 1:
                        rect = _a.sent();
                        this.oldWidth = rect.width;
                        this.oldHeight = rect.height;
                        this.updateLayout({
                            width: rect.width,
                            height: rect.height,
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    LinearGradient.prototype.updateLayout = function (dimensions) {
        var _this = this;
        ;
        [react_dom_1.findDOMNode(this.backgroundImageRef)].map(function (e) {
            var style = _this.getStyle(dimensions);
            Object.keys(style).forEach(function (key) { return (e.style[key] = style[key]); });
        });
    };
    LinearGradient.prototype.getAngle = function (_a) {
        var width = _a.width, height = _a.height;
        // Math.atan2 handles Infinity
        var _b = this.props, _d = _b.start, start = _d === void 0 ? [0, 0] : _d, _e = _b.end, end = _e === void 0 ? [0, 1] : _e;
        var angle = Math.atan2(width * (end[1] * 100 - start[1] * 100), height * (end[0] * 100 - start[0] * 100)) +
            Math.PI / 2;
        return angle + 'rad';
    };
    Object.defineProperty(LinearGradient.prototype, "locations", {
        get: function () {
            return this.props.locations &&
                this.props.locations.length === this.props.colors.length
                ? this.props.locations
                : this.props.colors.map(function (_c, i, colors) { return i / (colors.length - 1); });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LinearGradient.prototype, "colors", {
        get: function () {
            var locations = this.locations;
            return this.props.colors
                .map(function (color, index) {
                var location = locations[index];
                var locationStyle = '';
                if (location) {
                    locationStyle = ' ' + location * 100 + '%';
                }
                return color + locationStyle;
            })
                .join(',');
        },
        enumerable: true,
        configurable: true
    });
    LinearGradient.prototype.getStyle = function (dimensions) {
        return {
            position: 'absolute',
            top: '0',
            right: '0',
            bottom: '0',
            left: '0',
            backgroundImage: "linear-gradient(" + this.getAngle(dimensions) + ", " + this.colors + ")",
        };
    };
    return LinearGradient;
}(React.PureComponent));
exports.default = LinearGradient;

},{"react":"HdMw","react-dom":"X9zx","reactxp":"IpFD","../view":"eSvb","./styles":"Zlgf"}],"rb8g":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LinearGradient_1 = require("./LinearGradient");
exports.LinearGradient = LinearGradient_1.default;

},{"./LinearGradient":"ss0b"}],"Ct4Q":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
exports.Link = reactxp_1.Link;

},{"reactxp":"IpFD"}],"rnhv":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var styles_1 = require("../../styles");
function createListItemStyle(_a) {
    var theme = _a.theme, hasMeta = _a.hasMeta, hasIcon = _a.hasIcon, hasCircleImageOrImage = _a.hasCircleImageOrImage, hasSquareImage = _a.hasSquareImage, hasTextOrContent = _a.hasTextOrContent, hasTwoLinesText = _a.hasTwoLinesText, _b = _a.styleOverride, styleOverride = _b === void 0 ? {} : _b, isLast = _a.isLast, palette = _a.palette;
    var colorFromPalette = palette !== undefined
        ? theme.palette[palette].main
        : theme.palette.text.primary;
    var hasOneLine = !hasMeta && !hasTextOrContent;
    var hasTwoLines = (hasMeta && !hasTextOrContent) ||
        (!hasMeta && hasTextOrContent && !hasTwoLinesText);
    var hasThreeLines = (hasMeta && hasTextOrContent && !hasTwoLinesText) ||
        (!hasMeta && hasTextOrContent && hasTwoLinesText);
    var height;
    var centerMarginTop;
    var centerMarginLeft = hasIcon || hasCircleImageOrImage || hasSquareImage ? 0 : 16;
    if (hasOneLine) {
        height = 48;
        centerMarginTop = 16;
        if (hasIcon) {
            height = 56;
            centerMarginTop = 18;
        }
        else if (hasCircleImageOrImage) {
            height = 56;
            centerMarginTop = 18;
        }
        else if (hasSquareImage) {
            height = 72;
            centerMarginTop = 18;
        }
    }
    else if (hasTwoLines) {
        height = 64;
        centerMarginTop = 12;
        if (hasIcon) {
            height = 72;
            centerMarginTop = 18;
        }
        else if (hasCircleImageOrImage) {
            height = 72;
            centerMarginTop = 18;
        }
        else if (hasSquareImage) {
            height = 72;
            centerMarginTop = 18;
        }
    }
    else {
        height = 88;
        centerMarginTop = 16;
    }
    var circleImageMarginTop = 8;
    if (hasTwoLines || hasThreeLines) {
        circleImageMarginTop = 16;
    }
    var squareImageMarginTop = 8;
    if (hasThreeLines) {
        squareImageMarginTop = 16;
    }
    // Remove the border color from the overriden props
    var borderColor = styleOverride.root && styleOverride.root['borderColor'];
    if (borderColor) {
        delete styleOverride.root['borderColor'];
    }
    return {
        root: styles_1.Styles.createViewStyle(__assign({ height: height, flexDirection: 'row', alignItems: 'flex-start', backgroundColor: theme.palette.background.default, borderBottomWidth: !isLast ? 1 : 0, paddingRight: 16, borderColor: !isLast ? theme.palette.divider : undefined }, ((styleOverride && styleOverride.root) || {}))),
        iconStyle: __assign({ color: colorFromPalette, fontSize: 24 }, (styleOverride.iconStyle || {})),
        iconCircleStyle: __assign({ color: theme.palette.background.default, fontSize: 24 }, (styleOverride.iconCircleStyle || {})),
        leftIconContainer: styles_1.Styles.createViewStyle(__assign({ marginLeft: 16, marginTop: 16, marginRight: 32, justifyContent: 'center', alignItems: 'center' }, (styleOverride.leftIconContainer || {}))),
        circleIconContainer: styles_1.Styles.createViewStyle(__assign({ marginLeft: 16, marginRight: 16, height: 40, width: 40, marginTop: circleImageMarginTop, justifyContent: 'center', alignItems: 'center', borderRadius: 100, backgroundColor: theme.palette.text.secondary, overflow: 'visible' }, (styleOverride.circleIconContainer || {}))),
        circleImageContainer: styles_1.Styles.createViewStyle(__assign({ marginLeft: 16, marginRight: 16, marginTop: circleImageMarginTop, height: 40, width: 40, justifyContent: 'center', alignItems: 'center', borderRadius: 100, overflow: 'hidden', backgroundColor: theme.palette.text.secondary }, (styleOverride.circleImageContainer || {}))),
        squareImageContainer: styles_1.Styles.createViewStyle(__assign({ marginLeft: 16, marginTop: squareImageMarginTop, marginRight: 16, height: 56, width: 56, borderRadius: 4 }, (styleOverride.squareImageContainer || {}))),
        center: styles_1.Styles.createViewStyle(__assign({ justifyContent: 'center', marginLeft: centerMarginLeft, alignSelf: 'stretch', flex: 1 }, (styleOverride.center || {}))),
        title: styles_1.Styles.createTextStyle(__assign({ fontSize: 16, fontWeight: 'bold', lineHeight: hasOneLine ? undefined : 20, height: hasOneLine ? undefined : 20, color: colorFromPalette }, (styleOverride.title || {}))),
        meta: styles_1.Styles.createTextStyle(__assign({ height: 20, fontSize: 14, fontStyle: 'italic', color: theme.palette.text.primary }, (styleOverride.meta || {}))),
        text: styles_1.Styles.createTextStyle(__assign({ maxHeight: hasMeta ? 18 : hasTwoLinesText ? 38 : 18, lineHeight: hasMeta ? 18 : hasTwoLinesText ? 38 : 18, fontSize: 14, color: theme.palette.text.secondary }, (styleOverride.text || {}))),
        right: styles_1.Styles.createViewStyle(__assign({ height: height, minWidth: 24, marginLeft: 16, justifyContent: 'center', alignItems: 'center', alignSelf: 'flex-end' }, (styleOverride.right || {}))),
        mainButton: {
            root: styles_1.Styles.createViewStyle({
                position: 'absolute',
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                height: undefined,
            }),
            overlay: {
                backgroundColor: colorFromPalette,
            },
        },
    };
}
exports.createListItemStyle = createListItemStyle;
exports.listStyle = styles_1.Styles.createViewStyle({
    flex: 1,
});
exports.buttonStyle = styles_1.Styles.createViewStyle({
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
});

},{"../../styles":"JvZo"}],"a7sj":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var view_1 = require("../view");
var styles_1 = require("./styles");
function default_1(_a) {
    var style = _a.style, children = _a.children;
    var rootStyle = (style && style.root) || {};
    return React.createElement(view_1.View, { style: [styles_1.listStyle, rootStyle] }, children);
}
exports.default = default_1;

},{"react":"HdMw","../view":"eSvb","./styles":"rnhv"}],"bsG4":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styles_1 = require("../../styles");
var button_1 = require("../button");
var text_1 = require("../text");
var view_1 = require("../view");
var styles_2 = require("./styles");
var ListItem = function (_a) {
    var renderLeftIcon = _a.renderLeftIcon, renderLeftCircleIcon = _a.renderLeftCircleIcon, circleImageSlot = _a.circleImageSlot, squareImageSlot = _a.squareImageSlot, centerSlot = _a.centerSlot, rightSlot = _a.rightSlot, title = _a.title, titleSlot = _a.titleSlot, meta = _a.meta, metaSlot = _a.metaSlot, text = _a.text, textSlot = _a.textSlot, palette = _a.palette, _b = _a.hasTwoLinesText, hasTwoLinesText = _b === void 0 ? false : _b, theme = _a.theme, style = _a.style, isLast = _a.isLast, mainAction = _a.mainAction;
    var listItemStyle = styles_2.createListItemStyle({
        theme: theme,
        hasMeta: !!meta,
        hasIcon: !!renderLeftIcon,
        hasCircleImageOrImage: !!circleImageSlot || !!renderLeftCircleIcon,
        hasSquareImage: !!squareImageSlot,
        hasTextOrContent: !!text || !!centerSlot,
        hasTwoLinesText: hasTwoLinesText,
        styleOverride: style,
        isLast: isLast,
        palette: palette,
    });
    return (React.createElement(view_1.View, { style: listItemStyle.root },
        renderLeftIcon && (React.createElement(view_1.View, { style: listItemStyle.leftIconContainer }, renderLeftIcon(listItemStyle.iconStyle))),
        renderLeftCircleIcon && (React.createElement(view_1.View, { style: listItemStyle.circleIconContainer }, renderLeftCircleIcon(listItemStyle.iconCircleStyle))),
        circleImageSlot && (React.createElement(view_1.View, { style: listItemStyle.circleImageContainer }, circleImageSlot)),
        squareImageSlot && (React.createElement(view_1.View, { style: listItemStyle.squareImageContainer }, squareImageSlot)),
        React.createElement(view_1.View, { style: listItemStyle.center },
            titleSlot,
            title && React.createElement(text_1.Text, { style: listItemStyle.title }, title),
            metaSlot,
            meta && React.createElement(text_1.Text, { style: listItemStyle.meta }, meta),
            textSlot,
            text && React.createElement(text_1.Text, { style: listItemStyle.text }, text),
            centerSlot),
        mainAction && (React.createElement(button_1.Button, { variant: "text", onPress: mainAction, palette: palette, style: listItemStyle.mainButton })),
        rightSlot && React.createElement(view_1.View, { style: listItemStyle.right }, rightSlot)));
};
exports.default = styles_1.withTheme(ListItem);

},{"react":"HdMw","../../styles":"JvZo","../button":"loLP","../text":"kBAY","../view":"eSvb","./styles":"rnhv"}],"uigI":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var List_1 = require("./List");
exports.List = List_1.default;
var ListItem_1 = require("./ListItem");
exports.ListItem = ListItem_1.default;

},{"./List":"a7sj","./ListItem":"bsG4"}],"VYMH":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var createStyle_1 = require("../../styles/createStyle");
var theme_1 = require("../../styles/theme");
function default_1(_a) {
    var theme = _a.theme, _b = _a.palette, palette = _b === void 0 ? 'primary' : _b, _c = _a.style, style = _c === void 0 ? {} : _c;
    return {
        root: createStyle_1.Styles.createViewStyle(__assign(__assign({ overflow: 'hidden', flex: 1, minHeight: theme.spacing }, style.root), theme_1.override(theme.overrides, 'progressBar', 'root')), false),
        top: createStyle_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', borderRadius: 16, top: 0, left: 0, bottom: 0, right: 0 }, style.top), theme_1.override(theme.overrides, 'progressBar', 'top')), false),
        fill: createStyle_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, transform: [{ scaleX: 0 }], backgroundColor: theme.palette[palette].main }, style.fill), theme_1.override(theme.overrides, 'progressBar', 'fill')), false),
        background: createStyle_1.Styles.createViewStyle(__assign(__assign({ flex: 1, backgroundColor: theme.palette.background.appBar }, style.background), theme_1.override(theme.overrides, 'progressBar', 'background')), false),
    };
}
exports.default = default_1;

},{"../../styles/createStyle":"WiIp","../../styles/theme":"bc7y"}],"jnKJ":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var ThemeContext_1 = require("../../styles/ThemeContext");
var view_1 = require("../view");
var style_1 = require("./style");
var ProgressBar = /** @class */ (function (_super) {
    __extends(ProgressBar, _super);
    function ProgressBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            containerWidth: 0,
        };
        _this.animatedPercent = reactxp_1.Animated.createValue(0.0);
        _this.animatedOffset = reactxp_1.Animated.createValue(0.0);
        _this.onLayout = function (layout) {
            _this.setState({ containerWidth: layout.width });
        };
        return _this;
    }
    ProgressBar.prototype.componentDidMount = function () {
        this.animatedStyle = reactxp_1.Styles.createAnimatedViewStyle({
            transform: [
                { translateX: this.animatedOffset },
                { scaleX: this.animatedPercent },
            ],
        });
    };
    ProgressBar.prototype.render = function () {
        var _this = this;
        var _a = this.props, palette = _a.palette, style = _a.style;
        return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) {
            var stylesSheet = style_1.default({ theme: theme, palette: palette, style: style });
            return (React.createElement(view_1.View, { style: stylesSheet.root },
                React.createElement(view_1.View, { style: stylesSheet.background }),
                React.createElement(view_1.View, { style: stylesSheet.top, onLayout: _this.onLayout },
                    React.createElement(reactxp_1.Animated.View, { style: [stylesSheet.fill, _this.animatedStyle] }))));
        }));
    };
    ProgressBar.prototype.componentDidUpdate = function (prevProps, prevState) {
        if ((this.state.containerWidth > 0 && prevState.containerWidth === 0) || // We received the initial layout, let begin the animation
            this.state.containerWidth !== prevState.containerWidth || // Layout has change, we need to refresh the offset value
            this.props.progress !== prevProps.progress // Component has received a new progress value, we need to refresh the animation values
        ) {
            var init = prevState.containerWidth === 0;
            // Stop current animation if any
            if (this.animation) {
                this.animation.translate.stop();
                this.animation.scale.stop();
            }
            var scale = Math.min(1, Math.max(0, this.props.progress / 100));
            var offset = this.state.containerWidth / -2 + (this.state.containerWidth * scale) / 2;
            this.animation = this.getAnimation({ scale: scale, offset: offset }, init // When initialising the layout, minimize the progress bar on the left
                ? 0
                : this.props.animationDuration || 0);
            this.animation.translate.start();
            this.animation.scale.start();
        }
    };
    ProgressBar.prototype.getAnimation = function (_a, duration) {
        var offset = _a.offset, scale = _a.scale;
        return {
            translate: reactxp_1.Animated.timing(this.animatedOffset, {
                toValue: offset,
                duration: duration,
                easing: reactxp_1.Animated.Easing.InOut(),
            }),
            scale: reactxp_1.Animated.timing(this.animatedPercent, {
                toValue: scale,
                duration: duration,
                easing: reactxp_1.Animated.Easing.InOut(),
            }),
        };
    };
    return ProgressBar;
}(React.PureComponent));
exports.default = ProgressBar;

},{"react":"HdMw","reactxp":"IpFD","../../styles/ThemeContext":"w8BI","../view":"eSvb","./style":"VYMH"}],"WSRN":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var ProgressBar_1 = require("./ProgressBar");
exports.ProgressBar = ProgressBar_1.default;
__export(require("./style"));

},{"./ProgressBar":"jnKJ","./style":"VYMH"}],"UgKV":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var view_1 = require("../view");
var RadialGradient = /** @class */ (function (_super) {
    __extends(RadialGradient, _super);
    function RadialGradient() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RadialGradient.prototype.render = function () {
        var _this = this;
        var style = this.props.style;
        return (React.createElement(view_1.View, { style: style },
            React.createElement(view_1.View, { ref: function (comp) { return (_this.backgroundImageRef = comp); } })));
    };
    RadialGradient.prototype.componentDidMount = function () {
        this.updateGradientStyle();
    };
    RadialGradient.prototype.componentDidUpdate = function () {
        this.updateGradientStyle();
    };
    RadialGradient.prototype.updateGradientStyle = function () {
        var _this = this;
        ;
        [react_dom_1.findDOMNode(this.backgroundImageRef)].map(function (e) {
            return Object.keys(_this.style).forEach(function (key) { return (e.style[key] = _this.style[key]); });
        });
    };
    Object.defineProperty(RadialGradient.prototype, "style", {
        get: function () {
            // Retrieve the new center coordinates value in pixel
            var _a = this.props, center = _a.center, colors = _a.colors, isEllipse = _a.isEllipse, _b = _a.radius, radius = _b === void 0 ? 'farthest-corner' : _b, stops = _a.stops;
            var colorStrings = colors
                .map(function (color, i) { return color + " " + stops[i] * 100 + "%"; })
                .join(', ');
            var isCenterInPercent = !center || typeof center[0] === 'string';
            var posX = center ? "" + center[0] + (isCenterInPercent ? '' : 'px') : '50%';
            var posY = center ? "" + center[1] + (isCenterInPercent ? '' : 'px') : '50%';
            var shape = isEllipse ? 'ellipse' : 'circle';
            var _radius = isEllipse
                ? Array.isArray(radius)
                    ? radius.map(function (r) { return r + '%'; }).join(' ')
                    : radius
                : radius;
            return {
                position: 'absolute',
                top: '0',
                right: '0',
                bottom: '0',
                left: '0',
                backgroundImage: "radial-gradient(" + shape + " " + _radius + " at " + posX + " " + posY + ", " + colorStrings + ")",
            };
        },
        enumerable: true,
        configurable: true
    });
    return RadialGradient;
}(React.Component));
exports.default = RadialGradient;

},{"react":"HdMw","react-dom":"X9zx","../view":"eSvb"}],"X5ir":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RadialGradient_1 = require("./RadialGradient");
exports.RadialGradient = RadialGradient_1.default;

},{"./RadialGradient":"UgKV"}],"Vbep":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var linearGradient_1 = require("../linearGradient");
var view_1 = require("../view");
exports.default = (function (_a) {
    var children = _a.children, sceneContainerSlot = _a.sceneContainerSlot, styleSheet = _a.styleSheet;
    return (React.createElement(view_1.View, { style: styleSheet.sceneContainer },
        React.createElement(linearGradient_1.LinearGradient, { colors: ['#0005', '#0001', '#0000'], locations: [0, 0.3, 1], start: [1, 0], end: [0, 0], style: styleSheet.sceneContainerShadow }),
        sceneContainerSlot,
        children));
});

},{"react":"HdMw","../linearGradient":"rb8g","../view":"eSvb"}],"s6c1":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ShouldComponentUpdate = /** @class */ (function (_super) {
    __extends(ShouldComponentUpdate, _super);
    function ShouldComponentUpdate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShouldComponentUpdate.prototype.shouldComponentUpdate = function (nextProps) {
        return nextProps.shouldUpdate;
    };
    ShouldComponentUpdate.prototype.render = function () {
        return this.props.children;
    };
    return ShouldComponentUpdate;
}(React.Component));
exports.default = ShouldComponentUpdate;

},{"react":"HdMw"}],"V0Al":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var styles_1 = require("../../styles");
function createSceneTransitionStyle(theme, style) {
    if (style === void 0) { style = {}; }
    var backgroundColor = theme.palette.background.default;
    return {
        root: styles_1.Styles.createViewStyle(__assign(__assign({ flex: 1 }, style.root), styles_1.override(theme.overrides, 'sceneTransition', 'root'))),
        currentSceneContainer: styles_1.Styles.createViewStyle(__assign(__assign({ overflow: 'visible', flex: 1, position: 'absolute', top: 0, right: 0, bottom: 0, left: 0, backgroundColor: backgroundColor }, style.currentSceneContainer), styles_1.override(theme.overrides, 'sceneTransition', 'currentSceneContainer'))),
        nextSceneContainer: styles_1.Styles.createViewStyle(__assign(__assign({ flex: 1, overflow: 'visible', backgroundColor: backgroundColor }, style.nextSceneContainer), styles_1.override(theme.overrides, 'sceneTransition', 'nextSceneContainer'))),
        sceneContainerShadow: styles_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', top: 0, bottom: 0, left: -100, width: 100 }, style.sceneContainerShadow), styles_1.override(theme.overrides, 'sceneTransition', 'sceneContainerShadow'))),
    };
}
exports.createSceneTransitionStyle = createSceneTransitionStyle;

},{"../../styles":"JvZo"}],"yPvY":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var ThemeContext_1 = require("../../styles/ThemeContext");
var animated_1 = require("../animated");
var view_1 = require("../view");
var Card_1 = require("./Card");
var ShouldComponentUpdate_1 = require("./ShouldComponentUpdate");
var style_1 = require("./style");
var DURATION = 500;
var SceneTransition = /** @class */ (function (_super) {
    __extends(SceneTransition, _super);
    function SceneTransition(props) {
        var _this = _super.call(this, props) || this;
        _this.animatedCurrentCardOpacity = animated_1.Animated.createValue(1);
        _this.animatedCurrentCardTranslateX = animated_1.Animated.createValue(0.0);
        _this.animatedNextCardTranslateX = animated_1.Animated.createValue(0.0);
        _this.animatedNextCardOpacity = animated_1.Animated.createValue(0.0);
        _this.animatedStyle = {
            currentCard: reactxp_1.Styles.createAnimatedViewStyle({
                opacity: _this.animatedCurrentCardOpacity,
                transform: [{ translateX: _this.animatedCurrentCardTranslateX }],
            }),
            nextCard: reactxp_1.Styles.createAnimatedViewStyle({
                opacity: _this.animatedNextCardOpacity,
                transform: [{ translateX: _this.animatedNextCardTranslateX }],
            }),
        };
        _this.onTransitionEnd = function (_a) {
            var finished = _a.finished;
            if (_this.timeout) {
                _this.timeout = undefined;
            }
            var layout = _this.state.layout;
            if (finished && layout) {
                // The transition has just finished. Replace the current scene container at initial position.
                _this.animatedCurrentCardTranslateX.setValue(0);
                _this.animatedCurrentCardOpacity.setValue(1);
                _this.animatedNextCardTranslateX.setValue(layout.width + 100);
                _this.animatedNextCardOpacity.setValue(0);
                _this.setState({
                    isAnimating: false,
                }, function () {
                    _this.animation = undefined;
                });
            }
            _this.props.onTransitionEnd && _this.props.onTransitionEnd(finished);
        };
        /**
         * Store the layout.
         * Push the next scene container on the left
         */
        _this.onLayout = function (layout) {
            _this.animatedNextCardTranslateX.setValue(layout.width + 100);
            // @todo this should not be here, coupling too much the general
            // scene transition concept to the card transition effect.
            // This should be the responsability of the choosen transition effect.
            if (!_this.state.layout || _this.state.layout.width !== layout.width) {
                _this.setState({ layout: layout });
            }
        };
        // Iniital state: wait for a new scene to render
        _this.state = {
            isWaitingForNextScene: true,
            isAnimating: false,
            isReady: false,
            currentScene: props.render(),
            renderNextScene: undefined,
        };
        return _this;
    }
    SceneTransition.getDerivedStateFromProps = function (props, state) {
        // Initial state, wait for the layout
        // -> set component as ready
        if (state.isWaitingForNextScene &&
            !state.isAnimating &&
            !state.isReady &&
            state.layout) {
            return {
                isReady: true,
            };
        }
        // A new scene has been received.
        // -> Render the new scene and start animation.
        if (state.isReady && state.isWaitingForNextScene && !state.isAnimating) {
            return {
                isWaitingForNextScene: false,
                isAnimating: true,
                isStale: true,
                renderNextScene: props.render,
            };
        }
        // The user click on another router during the animation.
        // -> Let's continue the animation but change the next scene.
        else if (state.isReady &&
            !state.isWaitingForNextScene &&
            state.isAnimating) {
            return {
                renderNextScene: props.render,
                isStale: false,
            };
        }
        // Transition is complete.
        // -> Wait for new scene
        // (Transfert he next scene to the current scene slot and empty the next scene renderer slot.)
        else if (state.isReady &&
            !state.isWaitingForNextScene &&
            !state.isAnimating) {
            return {
                isWaitingForNextScene: true,
                currentScene: state.renderNextScene && state.renderNextScene(),
                renderNextScene: undefined,
            };
        }
        // Still waiting for the component to be ready. Meanwhile, the current scene may be changed.
        // For eg. a React Router redirection, the initial rendered scene has been redirected to another scene.
        // But as we captured the initial scene in the constructor, we need to refresh it now.
        return {
            currentScene: props.render(),
        };
    };
    SceneTransition.prototype.render = function () {
        var _this = this;
        var _a = this.props, dummyScene = _a.dummyScene, sceneContainerSlot = _a.sceneContainerSlot, style = _a.style;
        var _b = this.state, isAnimating = _b.isAnimating, currentScene = _b.currentScene, isWaitingForNextScene = _b.isWaitingForNextScene, renderNextScene = _b.renderNextScene;
        var shouldDisplayDummy = !!dummyScene && isAnimating;
        return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) {
            var styleSheet = style_1.createSceneTransitionStyle(theme, style);
            return (React.createElement(view_1.View, { style: styleSheet.root, onLayout: _this.onLayout },
                React.createElement(animated_1.Animated.View, { style: [
                        styleSheet.currentSceneContainer,
                        _this.animatedStyle.currentCard,
                    ] },
                    React.createElement(ShouldComponentUpdate_1.default, { shouldUpdate: isWaitingForNextScene },
                        sceneContainerSlot,
                        currentScene)),
                React.createElement(animated_1.Animated.View, { style: [
                        styleSheet.currentSceneContainer,
                        _this.animatedStyle.nextCard,
                    ] },
                    React.createElement(Card_1.default, { sceneContainerSlot: sceneContainerSlot, styleSheet: {
                            sceneContainer: styleSheet.nextSceneContainer,
                            sceneContainerShadow: styleSheet.sceneContainerShadow,
                        } }, shouldDisplayDummy
                        ? dummyScene
                        : renderNextScene && renderNextScene()))));
        }));
    };
    SceneTransition.prototype.componentDidUpdate = function () {
        var _this = this;
        var delayRender = this.props.delayRender;
        var _a = this.state, isAnimating = _a.isAnimating, layout = _a.layout;
        if (!layout)
            return;
        // The component was doing nothing and was ready to start a new transition.
        if (isAnimating) {
            if (this.timeout) {
                clearTimeout(this.timeout);
                this.timeout = undefined;
            }
            this.animatedCurrentCardTranslateX.setValue(0);
            this.animatedCurrentCardOpacity.setValue(1);
            this.animatedNextCardTranslateX.setValue(layout.width + 100);
            this.animatedNextCardOpacity.setValue(1);
            this.animation = this.getAnimation({
                currentCardTranslateX: -30,
                nextCardTranslateX: 0,
            });
            // If the user set a delay used it tro display the next scene, otherwize display the scene at the transition end
            if (delayRender) {
                this.startAnimation();
                this.timeout = setTimeout(function () { return _this.onTransitionEnd({ finished: true }); }, delayRender);
            }
            else {
                this.startAnimation(this.onTransitionEnd);
            }
        }
    };
    SceneTransition.prototype.onComponentWillUnmount = function () {
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = undefined;
        }
    };
    SceneTransition.prototype.startAnimation = function (callBack) {
        if (!this.animation)
            return;
        this.animation.currentCardFading.start();
        this.animation.currentCardTranslateX.start();
        // Callack will be triggered a frame after animation complement to prevent a bug which swallows the last value on slow device.
        this.animation.nextCardTranslateX.start(function (result) {
            return requestAnimationFrame(function () { return callBack && callBack({ finished: result.finished }); });
        });
    };
    SceneTransition.prototype.getAnimation = function (to) {
        return {
            currentCardFading: animated_1.Animated.timing(this.animatedCurrentCardOpacity, {
                toValue: 0.5,
                duration: DURATION,
                easing: animated_1.Animated.Easing.InOut(),
            }),
            currentCardTranslateX: animated_1.Animated.timing(this.animatedCurrentCardTranslateX, {
                toValue: to.currentCardTranslateX,
                duration: DURATION,
                easing: animated_1.Animated.Easing.InOut(),
            }),
            nextCardTranslateX: animated_1.Animated.timing(this.animatedNextCardTranslateX, {
                toValue: to.nextCardTranslateX,
                duration: DURATION,
                easing: animated_1.Animated.Easing.InOut(),
            }),
        };
    };
    return SceneTransition;
}(React.Component));
exports.default = SceneTransition;

},{"react":"HdMw","reactxp":"IpFD","../../styles/ThemeContext":"w8BI","../animated":"lEUm","../view":"eSvb","./Card":"Vbep","./ShouldComponentUpdate":"s6c1","./style":"V0Al"}],"PaCP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneTransition_1 = require("./SceneTransition");
exports.SceneTransition = SceneTransition_1.default;

},{"./SceneTransition":"yPvY"}],"gbsL":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
exports.Spinner = reactxp_1.ActivityIndicator;

},{"reactxp":"IpFD"}],"EPTx":[function(require,module,exports) {
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var reactxp_1 = require("reactxp");
var colorManipulator_1 = require("../../styles/colorManipulator");
var createStyle_1 = require("../../styles/createStyle");
var helpers_1 = require("../../styles/helpers");
var theme_1 = require("../../styles/theme");
exports.tabStyle = function (_a) {
    var theme = _a.theme, palette = _a.palette, _b = _a.style, style = _b === void 0 ? {} : _b, overlayColor = _a.overlayColor, options = _a.options;
    var tabHeight = options && options.hasIconOnTop ? 72 : 48;
    var tabMinWidth = 90;
    var tabMaxWidth = 360;
    var iconSize = 3 * theme.spacing;
    var tabColor = palette === undefined || palette === ''
        ? colorManipulator_1.colorManipulator.fade(theme.palette.primary.contrastText, 0.7)
        : theme.palette.text.secondary;
    var tabActiveColor = palette === undefined || palette === ''
        ? theme.palette.primary.contrastText
        : theme.palette[palette].main;
    var tabDisabledColor = palette === undefined || palette === ''
        ? colorManipulator_1.colorManipulator.fade(theme.palette.primary.contrastText, 0.5)
        : theme.palette.text.disabled;
    var twoLinesPadding = theme.spacing * 1.5;
    var overlayOpacity = helpers_1.getHoverOverlayOpacity(overlayColor, theme);
    return {
        root: createStyle_1.Styles.createViewStyle(__assign(__assign(__assign(__assign(__assign(__assign({ height: tabHeight, minWidth: tabMinWidth, maxWidth: tabMaxWidth }, (!!options &&
            !options.mustGrow && {
            flexGrow: 1,
            flexShrink: 1,
            flexBasis: '100%',
        })), { paddingHorizontal: 16, paddingVertical: !!options && options.hasIconOnTop ? twoLinesPadding : undefined, justifyContent: !!options && options.hasIconOnTop ? 'space-between' : 'center', alignItems: 'center', flexDirection: !!options && options.hasIconOnTop ? 'column' : 'row', cursor: 'pointer' }), style.root), theme_1.override(theme.overrides, 'tab', 'root')), (!!options && options.hasIcon
            ? theme_1.override(theme.overrides, 'tab', 'hasIcon')
            : style.hasIcon)), (!!options && options.hasLabel
            ? theme_1.override(theme.overrides, 'tab', 'hasLabel')
            : style.hasLabel)), false),
        icon: createStyle_1.Styles.createTextStyle(__assign(__assign(__assign(__assign(__assign(__assign({ justifyContent: 'center' }, (!!options &&
            options.hasLabel && {
            margin: 0,
        })), { fontSize: iconSize, textAlign: 'center', color: tabColor }), (!!options &&
            options.isActive && __assign({ color: tabActiveColor }, style.isActiveIcon))), (!!options &&
            options.isDisabled && {
            color: tabDisabledColor,
        })), style.icon), theme_1.override(theme.overrides, 'tab', 'icon')), false),
        label: createStyle_1.Styles.createTextStyle(__assign(__assign(__assign(__assign({ margin: 0, paddingLeft: !!options && !options.hasIconOnTop && options.hasIcon
                ? theme.spacing
                : 0, overflow: 'visible', textAlign: 'center', fontSize: 14, color: tabColor }, (!!options &&
            options.isActive && __assign({ color: tabActiveColor }, style.isActiveLabel))), (!!options &&
            options.isDisabled && {
            color: tabDisabledColor,
        })), style.label), theme_1.override(theme.overrides, 'tab', 'label')), false),
        overlay: createStyle_1.Styles.createViewStyle(__assign(__assign({ flex: 1, backgroundColor: overlayColor, opacity: overlayOpacity }, style.overlay), theme_1.override(theme.overrides, 'tab', 'overlay')), false),
    };
};
exports.tabsBarStyle = function (_a) {
    var palette = _a.palette, theme = _a.theme, _b = _a.style, style = _b === void 0 ? {} : _b, options = _a.options;
    var tabHeight = options && options.hasIconOnTop ? 72 : 48;
    var tabBackgroundColor = palette === undefined || palette === ''
        ? theme.palette.primary.main
        : theme.palette.background.default;
    var paddingHorizontal = !!options && options.isScrollEnabled ? 52 : 0;
    var cursorColor = palette === undefined || palette === ''
        ? theme.palette.secondary.main
        : theme.palette[palette].main;
    return {
        root: createStyle_1.Styles.createViewStyle(__assign(__assign({ height: tabHeight, maxHeight: tabHeight, flexGrow: 1, flexShrink: 1, marginBottom: 4 }, style.root), theme_1.override(theme.overrides, 'tabs', 'root')), false),
        container: createStyle_1.Styles.createViewStyle(__assign(__assign({ backgroundColor: tabBackgroundColor, paddingHorizontal: paddingHorizontal }, style.container), theme_1.override(theme.overrides, 'tabs', 'container')), false),
        scrollContent: createStyle_1.Styles.createViewStyle(__assign(__assign({ flexDirection: 'row', overflow: 'visible' }, style.scrollContent), theme_1.override(theme.overrides, 'tabs', 'scrollContent')), false),
        leftIndicator: createStyle_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', left: 0, top: 0, bottom: 0, width: paddingHorizontal, cursor: 'pointer', backgroundColor: tabBackgroundColor }, style.leftIndicator), theme_1.override(theme.overrides, 'tabs', 'leftIndicator')), false),
        rightIndicator: createStyle_1.Styles.createViewStyle(__assign(__assign({ position: 'absolute', right: 0, top: 0, bottom: 0, width: paddingHorizontal, cursor: 'pointer', backgroundColor: tabBackgroundColor }, style.rightIndicator), theme_1.override(theme.overrides, 'tabs', 'rightIndicator')), false),
        cursorAnimatedContainer: createStyle_1.Styles.createViewStyle({
            position: 'absolute',
            width: 1,
            top: 0,
            bottom: 0,
        }, false),
        cursor: createStyle_1.Styles.createViewStyle(__assign(__assign({ height: 4, top: tabHeight - 4, backgroundColor: cursorColor }, style.cursor), theme_1.override(theme.overrides, 'tabs', 'cursor')), false),
        scrollView: createStyle_1.Styles.createScrollViewStyle(__assign(__assign(__assign({ marginBottom: -20 }, (reactxp_1.Platform.getType() === 'web' && { display: 'inline-flex' })), style.scrollView), theme_1.override(theme.overrides, 'tabs', 'scrollView')), false),
        // Custom values
        paddingHorizontal: paddingHorizontal,
    };
};
function createScrollIndicatorOverlayStyle(color, theme) {
    return createStyle_1.Styles.createViewStyle({
        flex: 1,
        backgroundColor: color,
        opacity: helpers_1.getHoverOverlayOpacity(color, theme),
    }, false);
}
exports.createScrollIndicatorOverlayStyle = createScrollIndicatorOverlayStyle;
exports.fitParent = createStyle_1.Styles.createViewStyle({
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
});

},{"reactxp":"IpFD","../../styles/colorManipulator":"uUIW","../../styles/createStyle":"WiIp","../../styles/helpers":"WE05","../../styles/theme":"bc7y"}],"yiuy":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var helpers_1 = require("../../helpers");
var helpers_2 = require("../../styles/helpers");
var ThemeContext_1 = require("../../styles/ThemeContext");
var fade_1 = require("../fade");
var ripple_1 = require("../ripple");
var text_1 = require("../text");
var view_1 = require("../view");
var styles_1 = require("./styles");
function noop() { }
var Tab = /** @class */ (function (_super) {
    __extends(Tab, _super);
    function Tab() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isHover: false,
        };
        _this.isActionAllowed = true;
        _this.blockActionDuringScroll = function () {
            _this.isActionAllowed = false;
            _this.ripple && _this.ripple.onPressOut();
        };
        _this.allowActionDuringScroll = function () {
            _this.isActionAllowed = true;
        };
        _this.onLayout = function (layout) {
            var _a = _this.props, id = _a.id, onTabLayout = _a.onTabLayout;
            if (_this.layout !== undefined &&
                _this.layout.height === layout.height &&
                _this.layout.width === layout.width &&
                _this.layout.x === layout.x &&
                _this.layout.y === layout.y) {
                return;
            }
            // Round the layout value because hi density screen subpixel value could cause different behavior
            _this.layout = {
                x: Math.round(layout.x),
                y: Math.round(layout.y),
                width: Math.round(layout.width),
                height: Math.round(layout.height),
            };
            onTabLayout &&
                onTabLayout({
                    id: id,
                    layout: _this.layout,
                });
        };
        return _this;
    }
    Tab.prototype.componentWillMount = function () {
        var _a = this.props.onWillMount, onWillMount = _a === void 0 ? function () { } : _a;
        onWillMount(this.props.id);
    };
    Tab.prototype.componentDidMount = function () {
        this.layout && this.onLayout(this.layout);
    };
    Tab.prototype.componentWillUnmount = function () {
        var _a = this.props.onUnmount, onUnmount = _a === void 0 ? function () { } : _a;
        onUnmount(this.props.id);
    };
    Tab.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return helpers_1.shouldComponentUpdate(nextProps, nextState, this.props, this.state);
    };
    Tab.prototype.render = function () {
        var _this = this;
        return (React.createElement(ThemeContext_1.ThemeContext.Consumer, null, function (theme) {
            var _a = _this.props, id = _a.id, iconSlot = _a.iconSlot, label = _a.label, _b = _a.isActive, isActive = _b === void 0 ? false : _b, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c, _d = _a.isFrozen, isFrozen = _d === void 0 ? false : _d, _e = _a.hasIconOnTop, hasIconOnTop = _e === void 0 ? false : _e, _f = _a.mustGrow, mustGrow = _f === void 0 ? false : _f, palette = _a.palette, badgeSlot = _a.badgeSlot, style = _a.style, _g = _a.onPress, onPress = _g === void 0 ? noop : _g;
            var isHover = _this.state.isHover;
            var isOnPaper = palette !== undefined;
            var overlayColor = helpers_2.getMaterialOverlayColor({
                isOnPaper: isOnPaper,
                palette: palette,
                theme: theme,
            });
            var styles = styles_1.tabStyle({
                theme: theme,
                palette: palette,
                style: style,
                overlayColor: overlayColor,
                options: {
                    hasIconOnTop: hasIconOnTop,
                    isDisabled: isDisabled,
                    isActive: isActive,
                    mustGrow: mustGrow,
                    hasIcon: !!iconSlot,
                    hasLabel: !!label,
                },
            });
            return (React.createElement(view_1.View, { onResponderMove: _this.blockActionDuringScroll, onResponderRelease: _this.allowActionDuringScroll, onLayout: _this.onLayout, style: styles.root },
                iconSlot && iconSlot(styles.icon),
                label && React.createElement(text_1.Text, { style: styles.label }, label),
                badgeSlot,
                React.createElement(fade_1.Fade, { style: styles_1.fitParent, isVisible: isHover, duration: 75 },
                    React.createElement(view_1.View, { style: styles.overlay })),
                !isDisabled && !isFrozen && (React.createElement(ripple_1.Ripple, { onRef: function (emitter) {
                        _this.ripple = emitter;
                    }, color: overlayColor })),
                React.createElement(view_1.View, { style: styles_1.fitParent },
                    React.createElement(reactxp_1.Button, { disabled: isDisabled, style: reactxp_1.Styles.createViewStyle({
                            flex: 1,
                        }), onPress: function () {
                            !isFrozen && _this.isActionAllowed && onPress(id);
                        }, onPressIn: function (e) {
                            _this.ripple && _this.ripple.onPressIn(e);
                        }, onPressOut: function () {
                            _this.ripple && _this.ripple.onPressOut();
                        }, onHoverStart: function () {
                            _this.setState({ isHover: true });
                        }, onHoverEnd: function () {
                            // prevents a bug on Web where onPressOut
                            // is not called whend the touch is released outside
                            _this.ripple && _this.ripple.onPressOut();
                            _this.setState({ isHover: false });
                        } }))));
        }));
    };
    return Tab;
}(React.Component));
exports.default = Tab;

},{"react":"HdMw","reactxp":"IpFD","../../helpers":"tO1n","../../styles/helpers":"WE05","../../styles/ThemeContext":"w8BI","../fade":"SmEK","../ripple":"OnDe","../text":"kBAY","../view":"eSvb","./styles":"EPTx"}],"Sx98":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var helpers_1 = require("../../styles/helpers");
var fade_1 = require("../fade");
var ripple_1 = require("../ripple");
var view_1 = require("../view");
var styles_1 = require("./styles");
var flex = reactxp_1.Styles.createViewStyle({
    flex: 1,
});
var ScrollIndicator = /** @class */ (function (_super) {
    __extends(ScrollIndicator, _super);
    function ScrollIndicator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isHover: false,
        };
        return _this;
    }
    ScrollIndicator.prototype.render = function () {
        var _this = this;
        var _a = this.props, onPress = _a.onPress, palette = _a.palette, slot = _a.slot, style = _a.style, theme = _a.theme;
        var overlayColor = helpers_1.getMaterialOverlayColor({
            palette: palette,
            theme: theme,
            isOnPaper: palette !== undefined,
        });
        var overlayStyle = styles_1.createScrollIndicatorOverlayStyle(overlayColor, theme);
        return (React.createElement(view_1.View, { style: style, onStartShouldSetResponder: function () { return true; } },
            slot && slot(theme),
            React.createElement(ripple_1.Ripple, { color: overlayColor, onRef: function (emitter) { return (_this.ripple = emitter); } }),
            React.createElement(fade_1.Fade, { style: styles_1.fitParent, isVisible: this.state.isHover },
                React.createElement(view_1.View, { style: overlayStyle })),
            React.createElement(view_1.View, { style: styles_1.fitParent },
                React.createElement(reactxp_1.Button, { style: flex, onHoverStart: function () { return _this.setState({ isHover: true }); }, onHoverEnd: function () {
                        _this.ripple.onPressOut();
                        _this.setState({ isHover: false });
                    }, onPress: onPress, onPressIn: function (e) {
                        _this.ripple.onPressIn(e);
                    }, onPressOut: function () {
                        _this.ripple.onPressOut();
                    } }))));
    };
    return ScrollIndicator;
}(React.Component));
exports.ScrollIndicator = ScrollIndicator;

},{"react":"HdMw","reactxp":"IpFD","../../styles/helpers":"WE05","../fade":"SmEK","../ripple":"OnDe","../view":"eSvb","./styles":"EPTx"}],"eewX":[function(require,module,exports) {
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var reactxp_1 = require("reactxp");
var helpers_1 = require("../../helpers");
var styles_1 = require("../../styles");
var withTheme_1 = require("../../styles/withTheme");
var paper_1 = require("../paper");
var view_1 = require("../view");
var ScrollIndicator_1 = require("./ScrollIndicator");
var styles_2 = require("./styles");
var Tab_1 = require("./Tab");
var Tabs = /** @class */ (function (_super) {
    __extends(Tabs, _super);
    function Tabs(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            activeTabId: '',
            isScrollEnabled: false,
            hasLeftScrollIndicator: false,
            hasRightScrollIndicator: false,
            wrapperWidth: 0,
        };
        _this.layout = {
            currentScroll: 0,
            maxScroll: 0,
            tabsState: [],
        };
        _this.SAMmodel = {
            tabsWidth: 0,
            tabsState: [],
        };
        _this.cursorAnimatedValues = {
            opacity: reactxp_1.Animated.createValue(0),
            translateX: reactxp_1.Animated.createValue(0),
            translateY: reactxp_1.Animated.createValue(0),
            rotate: reactxp_1.Animated.createValue(0),
            scaleX: reactxp_1.Animated.createValue(0),
            scaleY: reactxp_1.Animated.createValue(1),
        };
        _this.controlState = 'stale';
        /**
         * This function set the new scroll value for the next tab to be completely visible when clicking on the
         * right indicator.
         * 1 - Find the last tab on the right which is completely visible.
         * 2 - Find the next tab, if any, to display.
         * 3 - Scroll
         */
        _this.rollRight = helpers_1.recall(function (iteration) {
            if (iteration === void 0) { iteration = 0; }
            /* 1 */
            var lastEntirelyDisplayedTab = getLastEntirelyDisplayedTab(_this.layout, _this.paddingHorizontal);
            if (lastEntirelyDisplayedTab === undefined)
                return;
            /* 2 */
            var tabId = lastEntirelyDisplayedTab.id;
            var nextTabIndex = Math.min(_this.SAMmodel.tabsState.findIndex(function (tab) { return tab.id === tabId; }) +
                iteration +
                1, _this.SAMmodel.tabsState.length - 1);
            var nextTab = _this.SAMmodel.tabsState[nextTabIndex];
            /* 3 */
            _this.scrollToTab(nextTab.id);
        }, function (iteration) { return [iteration]; }, 500);
        /**
         * This function set the new scroll value for the next tab to be completely visible when clicking on the
         * left indicator.
         * 1 - Find the first tab on the left which is completely visible.
         * 2 - Find the provious tab, if any, to display.
         * 3 - Scroll
         */
        _this.rollLeft = helpers_1.recall(function (iteration) {
            if (iteration === void 0) { iteration = 0; }
            /* 1 */
            var firstEntirelyDisplayedTab = getFirstEntirelyDisplayedTab(_this.layout);
            if (firstEntirelyDisplayedTab === undefined)
                return;
            /* 2 */
            var tabId = firstEntirelyDisplayedTab.id;
            var previousTabIndex = Math.max(_this.SAMmodel.tabsState.findIndex(function (tab) { return tab.id === tabId; }) -
                (iteration + 1), 0);
            var previousTab = _this.SAMmodel.tabsState[previousTabIndex];
            /* 3 */
            _this.scrollToTab(previousTab.id);
        }, function (iteration) { return [iteration]; }, 500);
        /**
         * This function inject some additional props into the child.
         */
        _this.bindTab = function (id) {
            var _a = _this.props, hasIconOnTop = _a.hasIconOnTop, palette = _a.palette, isFrozen = _a.isFrozen;
            var _b = _this.state, activeTabId = _b.activeTabId, isScrollEnabled = _b.isScrollEnabled;
            return {
                onWillMount: _this.registerTab,
                onTabLayout: _this.setTabLayout,
                onUnmount: _this.removeTab,
                onPress: _this.onPressTab,
                isFrozen: isFrozen,
                isActive: id === activeTabId,
                mustGrow: isScrollEnabled,
                hasIconOnTop: hasIconOnTop,
                palette: palette,
            };
        };
        _this.onLayout = function (barLayout) {
            // Prevent infine onLayout loop
            if (_this.layout.barLayout !== undefined &&
                barLayout.height === _this.layout.barLayout.height &&
                barLayout.width === _this.layout.barLayout.width &&
                barLayout.x === _this.layout.barLayout.x &&
                barLayout.y === _this.layout.barLayout.y)
                return;
            _this.layout.barLayout = barLayout;
            _this.computeState();
        };
        /*
         * ACTIONS
         */
        /**
         * Register a tab
         */
        _this.registerTab = function (id) {
            _this.present({
                mutation: 'registerTab',
                payload: { id: id },
            });
        };
        /**
         * Remove a tab
         */
        _this.removeTab = function (id) {
            _this.present({
                mutation: 'removeTab',
                payload: { id: id },
            });
        };
        /*
         * A tab wants to update its layout
         */
        _this.setTabLayout = function (payload) {
            _this.present({
                mutation: 'setTabLayout',
                payload: payload,
            });
        };
        _this.onScroll = function (_newScrollTop, newScrollLeft) {
            _this.layout.currentScroll = Math.round(newScrollLeft); // Round to prevent sub pixel edge case behaviors
            if (_this.layout.currentScroll > 0 !== _this.state.hasLeftScrollIndicator ||
                _this.layout.currentScroll < _this.layout.maxScroll !==
                    _this.state.hasRightScrollIndicator) {
                _this.setState({
                    hasLeftScrollIndicator: _this.layout.currentScroll > 0,
                    hasRightScrollIndicator: _this.layout.currentScroll < _this.layout.maxScroll,
                });
            }
        };
        _this.onPressTab = function (activeTabId) {
            var _a = _this.props, onChange = _a.onChange, onPressActiveTab = _a.onPressActiveTab;
            // Offset the tab if it overflows
            if (activeTabId !== _this.state.activeTabId) {
                _this.scrollToTab(activeTabId);
                onChange && onChange(activeTabId);
                _this.setState({ activeTabId: activeTabId });
            }
            else {
                onPressActiveTab && onPressActiveTab();
            }
        };
        var rotate = _this.cursorAnimatedValues.rotate.interpolate({
            inputRange: [0, 1],
            outputRange: reactxp_1.Platform.getType() === 'web' ? [0, 360] : ['0deg', '360deg'],
        });
        _this.animatedStyle = styles_1.Styles.createAnimatedViewStyle({
            transform: [
                { translateX: _this.cursorAnimatedValues.translateX },
                { translateY: _this.cursorAnimatedValues.translateY },
                { scaleX: _this.cursorAnimatedValues.scaleX },
                { scaleY: _this.cursorAnimatedValues.scaleY },
                { rotate: rotate },
            ],
        });
        return _this;
    }
    Object.defineProperty(Tabs.prototype, "activeTab", {
        get: function () {
            var _this = this;
            return this.SAMmodel.tabsState.find(function (s) { return s.id === _this.state.activeTabId; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tabs.prototype, "paddingHorizontal", {
        get: function () {
            return this.getStyles(this.state.isScrollEnabled).paddingHorizontal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tabs.prototype, "isLayoutReady", {
        get: function () {
            return (this.layout.barLayout !== undefined &&
                this.SAMmodel.tabsState.length > 0 &&
                this.SAMmodel.tabsState.every(function (tab) { return !tab.isStale; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tabs.prototype, "tabs", {
        get: function () {
            var _this = this;
            return this.props.tabs.map(function (props) { return (React.createElement(Tab_1.default, __assign({ key: props.id }, props, _this.bindTab(props.id)))); });
        },
        enumerable: true,
        configurable: true
    });
    Tabs.getDerivedStateFromProps = function (nextProps, state) {
        var hasActiveTabFromPropsChanged = nextProps.activeTabId !== state.activeIdFromProps;
        return __assign(__assign({}, state), { activeIdFromProps: nextProps.activeTabId, activeTabId: hasActiveTabFromPropsChanged && !!nextProps.activeTabId
                ? nextProps.activeTabId
                : state.activeTabId });
    };
    Tabs.prototype.componentDidMount = function () {
        var firstTabId = getFirstTabId(this.SAMmodel);
        if (!!this.props.activeTabId || !!firstTabId) {
            this.setState({ activeTabId: this.props.activeTabId || firstTabId });
        }
    };
    Tabs.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return helpers_1.shouldComponentUpdate(nextProps, nextState, this.props, this.state);
    };
    Tabs.prototype.render = function () {
        var isFrozen = this.props.isFrozen;
        var _a = this.state, hasLeftScrollIndicator = _a.hasLeftScrollIndicator, hasRightScrollIndicator = _a.hasRightScrollIndicator, isScrollEnabled = _a.isScrollEnabled;
        var styles = this.getStyles(isScrollEnabled);
        // In case of explicite scroll disabling, an offset is added on the content to mimic
        // the last known scroll
        var left = isFrozen ? { left: -this.layout.currentScroll } : {};
        var tabs = (React.createElement(view_1.View, { style: [
                styles.scrollContent,
                { minWidth: this.state.wrapperWidth },
                left,
            ] },
            this.renderCursor(styles),
            this.tabs));
        return (React.createElement(paper_1.Paper, { elevation: 2, style: {
                root: styles.root,
                content: styles.container,
            }, onLayout: this.onLayout }, this.renderInScrollView(tabs, styles, isScrollEnabled, hasLeftScrollIndicator, hasRightScrollIndicator)));
    };
    Tabs.prototype.componentDidUpdate = function (_prevProps, prevState) {
        // Prevent cursor animation when scrolling with arrows
        if (this.state.activeTabId !== prevState.activeTabId &&
            this.controlState === 'isLayoutReady') {
            this.scrollToTab(this.state.activeTabId);
        }
        if (this.activeTab && this.activeTab.layout)
            this.updateCursorPosition();
    };
    Tabs.prototype.updateCursorPosition = function () {
        var _this = this;
        if (!!this.cursorAnimation) {
            Object.keys(this.cursorAnimation).forEach(function (key) {
                return _this.cursorAnimation[key].stop();
            });
        }
        this.cursorAnimation = this.getAnimation({
            opacity: 1,
            translateX: this.activeTab.layout.x + this.activeTab.layout.width * 0.5,
            translateY: 0,
            rotate: 0,
            scaleX: this.activeTab.layout.width,
            scaleY: 1,
        });
        Object.keys(this.cursorAnimation).forEach(function (key) {
            return _this.cursorAnimation[key].start();
        });
    };
    Tabs.prototype.renderCursor = function (style) {
        var activeTabLayout = this.activeTab && this.activeTab.layout
            ? this.activeTab.layout
            : { x: 0, y: 0, width: 0, height: 0 };
        var barLayout = this.layout && this.layout.barLayout
            ? this.layout.barLayout
            : { x: 0, y: 0, width: 0, height: 0 };
        return (React.createElement(reactxp_1.Animated.View, { style: [style.cursorAnimatedContainer, this.animatedStyle] }, this.props.renderCustomCursor ? (this.props.renderCustomCursor(activeTabLayout, barLayout, this.props.theme)) : (React.createElement(view_1.View, { style: style.cursor }))));
    };
    Tabs.prototype.renderInScrollView = function (tabs, styles, isScrollEnabled, hasLeftScrollIndicator, hasRightScrollIndicator) {
        var _this = this;
        var _a = this.props, palette = _a.palette, theme = _a.theme, leftScrollButton = _a.leftScrollButton, rightScrollButton = _a.rightScrollButton, isFrozen = _a.isFrozen;
        return (React.createElement(React.Fragment, null,
            React.createElement(reactxp_1.ScrollView, { ref: function (comp) { return (_this.scrollViewRef = comp); }, scrollEnabled: isScrollEnabled && !isFrozen, horizontal: true, showsHorizontalScrollIndicator: false, showsVerticalScrollIndicator: false, onScroll: this.onScroll, style: styles.scrollView }, tabs),
            hasLeftScrollIndicator && leftScrollButton && (React.createElement(ScrollIndicator_1.ScrollIndicator, { palette: palette, style: styles.leftIndicator, slot: leftScrollButton, theme: theme, onPress: function () { return _this.rollLeft(); } })),
            hasRightScrollIndicator && rightScrollButton && (React.createElement(ScrollIndicator_1.ScrollIndicator, { palette: palette, style: styles.rightIndicator, slot: rightScrollButton, theme: theme, onPress: function () { return _this.rollRight(); } }))));
    };
    Tabs.prototype.getStyles = function (isScrollEnabled) {
        var _a = this.props, hasIconOnTop = _a.hasIconOnTop, palette = _a.palette, theme = _a.theme, style = _a.style;
        return styles_2.tabsBarStyle({
            theme: theme,
            palette: palette,
            style: style,
            options: {
                hasIconOnTop: hasIconOnTop,
                isScrollEnabled: isScrollEnabled,
            },
        });
    };
    Tabs.prototype.computeState = function () {
        var previousControlState = this.controlState;
        /*
         * Compute control state
         */
        if (this.controlState === 'stale') {
            // The component has just been mounted or some tabs has moved.
            // Wait for all tabs to be rendered
            if (this.isLayoutReady) {
                this.controlState = 'isLayoutReady';
            }
        }
        else if (this.controlState === 'isLayoutReady') {
            // Bar and tabs layouts are ready.
            // A tab has been removed while setting the scroll layout. Go back to `stale` state
            if (!this.isLayoutReady) {
                this.controlState = 'stale';
            }
        }
        /**
         * Update the view
         */
        this.layout.tabsState = this.SAMmodel.tabsState
            .filter(function (s) { return !s.isStale; })
            .map(function (_a) {
            var id = _a.id, layout = _a.layout;
            return ({ id: id, layout: layout });
        });
        if (this.controlState === 'isLayoutReady' && this.activeTab) {
            // ALl the layouts are known. Set the initial cursor layout.
            if (previousControlState === 'stale' && this.activeTab.layout) {
                this.cursorAnimatedValues.translateX.setValue(this.activeTab.layout.x);
                this.cursorAnimatedValues.scaleX.setValue(this.activeTab.layout.width);
            }
            this.updateCursorPosition();
        }
        /*
         * What to do next?
         */
        switch (this.controlState) {
            default:
            case 'stale':
                // The component has just been mounted or some tabs has moved.
                // Wait for all tabs to be rendered
                break;
            case 'isLayoutReady':
                // Bar and tabs layouts are ready.
                // Now, state if the scroll mode is needed
                this.setScrollState();
                break;
        }
    };
    /*
     * MUTATIONS
     */
    Tabs.prototype.present = function (proposal) {
        var _this = this;
        if (proposal.mutation === 'registerTab') {
            var payload_1 = proposal.payload;
            // The tabs are still valid. Register a tab now will stale the layout.
            // Remove existing tab if needed
            this.SAMmodel.tabsState = this.SAMmodel.tabsState.filter(function (t) { return t.id !== payload_1.id; });
            // Let add this tab
            this.SAMmodel.tabsState.push({ id: payload_1.id, isStale: true });
            this.computeState();
        }
        else if (proposal.mutation === 'setTabLayout') {
            var payload_2 = proposal.payload;
            if (!payload_2.layout)
                return;
            if (this.isLayoutReady) {
                // The tabs are still ready.
                this.SAMmodel.tabsState = this.SAMmodel.tabsState.map(function (ref) {
                    if (ref.id === payload_2.id)
                        return payload_2;
                    return __assign({}, ref);
                });
            }
            else {
                // Let set this tab has ready
                var tab = this.SAMmodel.tabsState.find(function (ref) { return ref.id === payload_2.id; });
                if (tab) {
                    tab.isStale = false;
                    tab.layout = payload_2.layout;
                }
                this.SAMmodel.tabsWidth = getTabsWidth(this.SAMmodel);
            }
            this.computeState();
        }
        else if (proposal.mutation === 'removeTab') {
            // removeTab is also happen during stale control state while refreshing a tab.
            // In this case, it is the registerTab mutation which handle this case.
            if (this.controlState === 'stale')
                return;
            var payload_3 = proposal.payload;
            this.SAMmodel.tabsState = this.SAMmodel.tabsState.filter(function (s) { return s.id !== payload_3.id; });
            this.SAMmodel.tabsWidth = getTabsWidth(this.SAMmodel);
            this.computeState();
        }
        // Always sort the tabs state in the same order as the props.
        this.props.tabs.reduce(function (newOrderedArray, tab) {
            var tabToOrder = _this.SAMmodel.tabsState.findIndex(function (t) { return t.id === tab.id; });
            return !!tabToOrder ? __spreadArrays([tabToOrder], newOrderedArray) : newOrderedArray;
        }, []);
    };
    Tabs.prototype.setScrollState = function () {
        var _this = this;
        var isScrollEnabled = this.SAMmodel.tabsWidth > this.layout.barLayout.width;
        var hasRightScrollIndicator = isScrollEnabled;
        this.layout.maxScroll = isScrollEnabled
            ? this.SAMmodel.tabsWidth -
                this.layout.barLayout.width +
                this.getStyles(isScrollEnabled).paddingHorizontal * 2
            : 0;
        var wrapperWidth = ((this.layout && this.layout.barLayout && this.layout.barLayout.width) ||
            0) -
            this.paddingHorizontal * 2;
        this.setState({ isScrollEnabled: isScrollEnabled, hasRightScrollIndicator: hasRightScrollIndicator, wrapperWidth: wrapperWidth }, function () {
            if (!_this.props.isFrozen) {
                _this.scrollToTab(_this.state.activeTabId, false);
            }
        });
    };
    Tabs.prototype.scrollToTab = function (id, animated) {
        var offset = this.getTabOffset(id);
        this.scrollTo(this.layout.currentScroll + offset, animated);
    };
    /**
     * Return the offset of the left border of a tab and the left or right border of the tabs bar.
     * If the number is negative, the tab is overflowing from the left side.
     * Otherwize the tab is overflowing from the right side.
     */
    Tabs.prototype.getTabOffset = function (id) {
        var tab = this.layout.tabsState.find(function (t) { return t.id === id; });
        if (tab === undefined)
            return 0;
        else {
            var offsetBorderLeft = getTabLeftOffset(tab, this.layout);
            var offsetBorderRight = getTabRightOffset(tab, this.layout, this.paddingHorizontal);
            if (offsetBorderLeft < 0) {
                return offsetBorderLeft;
            }
            else if (offsetBorderRight > 0) {
                return offsetBorderRight;
            }
            else
                return 0;
        }
    };
    Tabs.prototype.scrollTo = function (position, animated) {
        if (animated === void 0) { animated = true; }
        var value = this.limit(position);
        this.scrollViewRef && this.scrollViewRef.setScrollLeft(value, animated);
        this.layout.currentScroll = Math.round(value); // Round to prevent sub pixel edge case behaviors
    };
    Tabs.prototype.limit = function (value) {
        if (value === void 0) { value = 0; }
        return Math.min(this.layout.maxScroll, Math.max(0, value));
    };
    Tabs.prototype.getAnimation = function (_a) {
        var opacity = _a.opacity, translateX = _a.translateX, translateY = _a.translateY, rotate = _a.rotate, scaleX = _a.scaleX, scaleY = _a.scaleY;
        var customAnimation = this.props.customCursorAnimation
            ? this.props.customCursorAnimation(this.cursorAnimatedValues, this.activeTab.layout, this.props.theme)
            : {};
        return {
            opacity: customAnimation.opacity ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.opacity, {
                    toValue: opacity,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
            translateX: customAnimation.translateX ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.translateX, {
                    toValue: translateX,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
            translateY: customAnimation.translateY ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.translateY, {
                    toValue: translateY,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
            rotate: customAnimation.rotate ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.rotate, {
                    toValue: rotate,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
            scaleX: customAnimation.scaleX ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.scaleX, {
                    toValue: scaleX,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
            scaleY: customAnimation.scaleY ||
                reactxp_1.Animated.timing(this.cursorAnimatedValues.scaleY, {
                    toValue: scaleY,
                    duration: Tabs.cursorTransitionDuration,
                    easing: reactxp_1.Animated.Easing.InOut(),
                }),
        };
    };
    Tabs.cursorTransitionDuration = 200;
    return Tabs;
}(React.Component));
function getFirstTab(model) {
    return model.tabsState[0] || undefined;
}
function getLastTab(model) {
    return model.tabsState[model.tabsState.length - 1];
}
function getFirstTabId(model) {
    var tab = model.tabsState[0];
    return tab ? tab.id : undefined;
}
function getTabsWidth(model) {
    if (model.tabsState.length === 0)
        return 0;
    var firstTabRect = getFirstTab(model).layout;
    var lastTabRect = getLastTab(model).layout;
    return !!firstTabRect && !!lastTabRect // Tabs are not mounted yet
        ? Math.round(lastTabRect.x + lastTabRect.width - firstTabRect.x) // Round to prevent sub pixel edge case behaviors
        : 0;
}
function getTabRightOffset(tab, tabsLayout, paddingHorizontal) {
    return (tab.layout.x +
        tab.layout.width -
        tabsLayout.currentScroll -
        (tabsLayout.barLayout.x +
            tabsLayout.barLayout.width -
            paddingHorizontal * 2));
}
function getTabLeftOffset(tab, tabsLayout) {
    return tab.layout.x - tabsLayout.currentScroll - tabsLayout.barLayout.x;
}
function isTabOutsideOnRight(tabState, tabsLayout, paddingHorizontal) {
    return getTabRightOffset(tabState, tabsLayout, paddingHorizontal) > 0;
}
function isTabOutsideOnLeft(tabState, tabsLayout) {
    return getTabLeftOffset(tabState, tabsLayout) < 0;
}
/**
 * Find the last tab on the right which is completely visible.
 */
function getLastEntirelyDisplayedTab(tabsLayout, paddingHorizontal) {
    return tabsLayout.tabsState
        .slice()
        .reverse()
        .find(function (t) { return !isTabOutsideOnRight(t, tabsLayout, paddingHorizontal); });
}
/**
 * Find the last tab on the left which is completely visible.
 */
function getFirstEntirelyDisplayedTab(tabsLayout) {
    return tabsLayout.tabsState
        .slice()
        .find(function (t) { return !isTabOutsideOnLeft(t, tabsLayout); });
}
exports.default = withTheme_1.withTheme(Tabs);

},{"react":"HdMw","reactxp":"IpFD","../../helpers":"tO1n","../../styles":"JvZo","../../styles/withTheme":"RjPi","../paper":"ij1J","../view":"eSvb","./ScrollIndicator":"Sx98","./styles":"EPTx","./Tab":"yiuy"}],"zEk8":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var Tab_1 = require("./Tab");
exports.Tab = Tab_1.default;
var TabBar_1 = require("./TabBar");
exports.TabBar = TabBar_1.default;
__export(require("./styles"));

},{"./Tab":"yiuy","./TabBar":"eewX","./styles":"EPTx"}],"QCPY":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(require("./animated"));
__export(require("./backgroundImage"));
__export(require("./borderImage"));
__export(require("./button"));
__export(require("./fab"));
__export(require("./fade"));
__export(require("./foldableTree"));
__export(require("./grid"));
__export(require("./linearGradient"));
__export(require("./link"));
__export(require("./list"));
__export(require("./paper"));
__export(require("./progressBar"));
__export(require("./radialGradient"));
__export(require("./ripple"));
__export(require("./sceneTransition"));
__export(require("./spinner"));
__export(require("./tab"));
__export(require("./text"));
__export(require("./view"));

},{"./animated":"lEUm","./backgroundImage":"iWEd","./borderImage":"N6xb","./button":"loLP","./fab":"t3Rj","./fade":"SmEK","./foldableTree":"koLg","./grid":"dGog","./linearGradient":"rb8g","./link":"Ct4Q","./list":"uigI","./paper":"ij1J","./progressBar":"WSRN","./radialGradient":"X5ir","./ripple":"OnDe","./sceneTransition":"PaCP","./spinner":"gbsL","./tab":"zEk8","./text":"kBAY","./view":"eSvb"}],"hVfr":[function(require,module,exports) {
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(require("./components"));
__export(require("./styles"));

},{"./components":"QCPY","./styles":"JvZo"}],"q2ot":[function(require,module,exports) {
'use strict';

// Export web by default. Other platforms have custom index.[platform].js files
module.exports = require('./lib/index.js');

},{"./lib/index.js":"hVfr"}],"JCGI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.actionContainer = exports.button = void 0;

var ui_1 = require("@sproutch/ui");

exports.button = ui_1.Styles.createViewStyle({
  margin: 8,
  flex: 1
});
exports.actionContainer = ui_1.Styles.createViewStyle({
  flexDirection: "row",
  flexWrap: "wrap"
});
},{"@sproutch/ui":"q2ot"}],"gqp5":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(require("react"));

var ui_1 = require("@sproutch/ui");

function default_1(_a) {
  var title = _a.title;
  return react_1.default.createElement(ui_1.View, {
    style: {
      backgroundColor: ui_1.defaultTheme.palette.primary.main,
      height: 48,
      alignContent: 'center',
      justifyContent: 'center'
    }
  }, react_1.default.createElement(ui_1.Text, {
    style: {
      color: ui_1.defaultTheme.palette.primary.contrastText,
      textAlign: 'center',
      fontSize: 18,
      fontWeight: 'bold'
    }
  }, title.toUpperCase()));
}

exports.default = default_1;
},{"react":"HdMw","@sproutch/ui":"q2ot"}],"YOPw":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var ui_1 = require("@sproutch/ui");

var react_1 = __importStar(require("react"));

function default_1(_a) {
  var isOpen = _a.isOpen,
      children = _a.children,
      onAnimationEnd = _a.onAnimationEnd;
  var animatedY = react_1.useRef(ui_1.Animated.createValue(0));
  var rootRef = react_1.useRef();
  var setRef = react_1.useCallback(function (view) {
    return rootRef.current = view;
  }, []);

  var _b = react_1.useState(0),
      height = _b[0],
      setHeight = _b[1];

  react_1.useEffect(function () {
    ui_1.Animated.timing(animatedY.current, {
      toValue: isOpen ? -height : 0,
      duration: 250,
      easing: ui_1.Animated.Easing.InOut()
    }).start(function (result) {
      if (result.finished) {
        onAnimationEnd(isOpen, rootRef.current);
      }
    });
  }, [isOpen]);
  return react_1.default.createElement(ui_1.Animated.View, {
    onLayout: function onLayout(e) {
      return setHeight(e.height);
    },
    ref: function ref(view) {
      return setRef(view);
    },
    style: [{
      position: "absolute",
      left: 0,
      right: 0,
      bottom: -height
    }, ui_1.Styles.createAnimatedViewStyle({
      transform: [{
        translateY: animatedY.current
      }]
    })]
  }, react_1.default.createElement(ui_1.Paper, {
    elevation: 2
  }, children));
}

exports.default = default_1;
},{"@sproutch/ui":"q2ot","react":"HdMw"}],"Ru8j":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var ui_1 = require("@sproutch/ui");

var react_1 = __importStar(require("react"));

var App_style_1 = require("./App.style");

var AppBar_1 = __importDefault(require("./components/AppBar"));

var BottomSheet_1 = __importDefault(require("./components/BottomSheet"));

function default_1() {
  var _a, _b;

  var _c = react_1.useState(),
      container = _c[0],
      setContainer = _c[1];

  var _d = react_1.useState([]),
      overlayElements = _d[0],
      setOverlayElements = _d[1];

  var _e = react_1.useState(undefined),
      bottomSheetID = _e[0],
      setBottomSheetID = _e[1];

  var _f = react_1.useState(false),
      isMapDisplayed = _f[0],
      setIsMapDisplayed = _f[1];

  var _g = react_1.useState(undefined),
      downloadState = _g[0],
      setDownloadState = _g[1];

  var map = react_1.useRef();
  var setRef = react_1.useCallback(function (view) {
    return setContainer(view);
  }, []);

  function toggleBottomSheet(id) {
    if (bottomSheetID === undefined) {
      setBottomSheetID(id);
    } else {
      setBottomSheetID(undefined);
    }
  }

  function updateOverlayElements(isOpen, view) {
    if (isOpen) {
      setOverlayElements([view]);
    } else {
      setOverlayElements([]);
    }
  }

  return react_1.default.createElement(ui_1.View, {
    style: {
      flex: 1
    }
  }, react_1.default.createElement(AppBar_1.default, {
    title: "Cordova Mapbox demo"
  }), react_1.default.createElement(ui_1.View, {
    style: {
      flexDirection: "row",
      flexWrap: "wrap"
    }
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    onPress: function onPress() {
      return toggleBottomSheet('mapActions');
    },
    label: "Map actions"
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    onPress: function onPress() {
      return toggleBottomSheet('featureActions');
    },
    label: "Marker actions"
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    onPress: function onPress() {
      return toggleBottomSheet('offlineActions');
    },
    label: "Offline actions"
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    onPress: function onPress() {
      return toggleBottomSheet('cameraActions');
    },
    label: "Camera actions"
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    onPress: function onPress() {
      return toggleBottomSheet('utils');
    },
    label: "Utils"
  })), downloadState && react_1.default.createElement(ui_1.ProgressBar, {
    progress: downloadState.completeResourceSize / downloadState.requiredResourceCount
  }), react_1.default.createElement(BottomSheet_1.default, {
    onAnimationEnd: updateOverlayElements,
    isOpen: bottomSheetID === 'mapActions'
  }, react_1.default.createElement(ui_1.View, {
    style: App_style_1.actionContainer
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Show",
    onPress: function onPress() {
      setIsMapDisplayed(true);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Hide",
    onPress: function onPress() {
      setIsMapDisplayed(false);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Add new DOM overlay element",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.addOverlayElement();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Remove a DOM overlay element",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.deleteOverlayElement();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Close",
    onPress: function onPress() {
      toggleBottomSheet('mapActions');
    }
  }))), react_1.default.createElement(BottomSheet_1.default, {
    onAnimationEnd: updateOverlayElements,
    isOpen: bottomSheetID === 'featureActions'
  }, react_1.default.createElement(ui_1.View, {
    style: App_style_1.actionContainer
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Add marker",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.addPOI();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Remove marker",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.removePOI();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Start move animation",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.startAnimation();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Stop move animation",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.stopAnimation();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Close",
    onPress: function onPress() {
      toggleBottomSheet('featureActions');
    }
  }))), react_1.default.createElement(BottomSheet_1.default, {
    onAnimationEnd: updateOverlayElements,
    isOpen: bottomSheetID === 'utils'
  }, react_1.default.createElement(ui_1.View, {
    style: App_style_1.actionContainer
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Screen to coords",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.screen2Coords({
        'x': window.innerWidth / 2,
        'y': window.innerHeight / 2
      }).then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Coords to screen",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.coords2Screen({
        'lat': 52.3732160,
        'lng': 4.8941680
      });
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get bounds",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getBounds().then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get camera position",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getCameraPosition().then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Close",
    onPress: function onPress() {
      toggleBottomSheet('utils');
    }
  }))), react_1.default.createElement(BottomSheet_1.default, {
    onAnimationEnd: updateOverlayElements,
    isOpen: bottomSheetID === 'offlineActions'
  }, react_1.default.createElement(ui_1.View, {
    style: App_style_1.actionContainer
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get offlines region names",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getOfflineRegionList().then(function (list) {
        return alert(list.join(', '));
      });
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Download current region",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.downloadArea(setDownloadState);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: downloadState.downloadState === "STATE_ACTIVE" ? "Pause download" : "Resume download",
    onPress: function onPress() {
      var _a, _b;

      downloadState.downloadState === "STATE_ACTIVE" ? (_a = map.current) === null || _a === void 0 ? void 0 : _a.pauseDownload() : (_b = map.current) === null || _b === void 0 ? void 0 : _b.resumeDownload();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Delete offline map",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.deleteOffline(function () {
        setDownloadState(undefined);
      });
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Close",
    onPress: function onPress() {
      toggleBottomSheet('offlineActions');
    }
  }))), react_1.default.createElement(BottomSheet_1.default, {
    onAnimationEnd: updateOverlayElements,
    isOpen: bottomSheetID === "cameraActions"
  }, react_1.default.createElement(ui_1.View, {
    style: App_style_1.actionContainer
  }, react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Zoom in",
    onPress: (_a = map.current) === null || _a === void 0 ? void 0 : _a.zoomIn
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Zoom out",
    onPress: (_b = map.current) === null || _b === void 0 ? void 0 : _b.zoomOut
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get zoom",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getZoom().then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Fly to",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.flyTo();
      toggleBottomSheet('cameraActions');
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Center",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.setCenter();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get center",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getCenter().then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Pitch",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.setPitch();
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Get pitch",
    onPress: function onPress() {
      var _a;

      (_a = map.current) === null || _a === void 0 ? void 0 : _a.getPitch().then(alert);
    }
  }), react_1.default.createElement(ui_1.Button, {
    style: {
      root: App_style_1.button
    },
    label: "Close",
    onPress: function onPress() {
      toggleBottomSheet('cameraActions');
    }
  }))), react_1.default.createElement("div", {
    ref: setRef,
    style: {
      flex: 1
    }
  }));
}

exports.default = default_1;
},{"@sproutch/ui":"q2ot","react":"HdMw","./App.style":"JCGI","./components/AppBar":"gqp5","./components/BottomSheet":"YOPw"}],"OGgv":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(require("react"));

var react_dom_1 = __importDefault(require("react-dom"));

var App_1 = __importDefault(require("./App"));

function initialize() {
  document.addEventListener('deviceready', onDeviceReady, false);
}

function onDeviceReady() {
  document.addEventListener('pause', onPause, false);
  document.addEventListener('resume', onResume, false);
  start();
}

function onPause() {// TODO: This application has been suspended. Save application state here.
}

function onResume() {// TODO: This application has been reactivated. Restore application state here.
}

function start() {
  react_dom_1.default.render(react_1.default.createElement(App_1.default, null), document.getElementById('root'));
} // If on desktop


if (window.cordova === undefined) {
  start();
} else {
  initialize();
}
},{"react":"HdMw","react-dom":"X9zx","./App":"Ru8j"}]},{},["OGgv"], null)
//# sourceMappingURL=src.bc339c64.js.map